[
  {
    "objectID": "01-introduction/slides-01-intro.html#about-us",
    "href": "01-introduction/slides-01-intro.html#about-us",
    "title": "Complex Survey Data Analysis",
    "section": "About Us",
    "text": "About Us\n\nStephanie Zimmer, RTI International\nRebecca Powell, Fors Marsh\nIsabella Velásquez, Posit\n\n\nEach of us give a brief intro on our experience/background"
  },
  {
    "objectID": "01-introduction/slides-01-intro.html#prerequisites---tidyverse-familiarity",
    "href": "01-introduction/slides-01-intro.html#prerequisites---tidyverse-familiarity",
    "title": "Complex Survey Data Analysis",
    "section": "Prerequisites - tidyverse familiarity",
    "text": "Prerequisites - tidyverse familiarity\n\nSelecting a set of variables (select(starts_with(\"TOT\")))\nCreating new variables with mutate()\nSummarizing data with summarize()\nUsing group_by() with summarize() to create group summaries"
  },
  {
    "objectID": "01-introduction/slides-01-intro.html#background",
    "href": "01-introduction/slides-01-intro.html#background",
    "title": "Complex Survey Data Analysis",
    "section": "Background",
    "text": "Background\n\nThis tutorial largely builds off our book: Exploring Complex Survey Data Analysis Using R\n\nhttps://tidy-survey-r.github.io/site/\n\nThis book covers additional topics outside this tutorial including:\n\nOverview of survey process\nLinear regression and logistic regression\nCommunication of results (tables and plots)\nReproducible research best practices\n\nNot covered\n\nWeighting (calibration, post-stratification, raking, etc.)\nSurvival analysis\nNonlinear models"
  },
  {
    "objectID": "01-introduction/slides-01-intro.html#how-is-survey-analysis-different",
    "href": "01-introduction/slides-01-intro.html#how-is-survey-analysis-different",
    "title": "Complex Survey Data Analysis",
    "section": "How is survey analysis different?",
    "text": "How is survey analysis different?\n\nData often includes weights. These weights extrapolate each response to the population of interest\nData is often sampled in a complex manner using strata or clusters. This impacts how standard errors are calculated\nFortunately, the packages we discuss today do the hard math for you using tidyverse syntax you’re familiar with"
  },
  {
    "objectID": "01-introduction/slides-01-intro.html#overview-of-tutorial",
    "href": "01-introduction/slides-01-intro.html#overview-of-tutorial",
    "title": "Complex Survey Data Analysis",
    "section": "Overview of tutorial",
    "text": "Overview of tutorial\n\nAt the end of this tutorial, you should be able to\n\nCalculate point estimates and their standard errors with survey data\n\nProportions, totals, and counts\nMeans, quantiles, and correlations\n\nPerform t-tests and chi-squared tests\nSpecify a survey design in R to create a survey object"
  },
  {
    "objectID": "01-introduction/slides-01-intro.html#overview-of-survey-process",
    "href": "01-introduction/slides-01-intro.html#overview-of-survey-process",
    "title": "Complex Survey Data Analysis",
    "section": "Overview of survey process",
    "text": "Overview of survey process\n\n\n\n\n\nflowchart TD\n  A[Survey Concept]--&gt;B[Sampling Design]\n  A--&gt;C[Questionnaire Design]\n  A--&gt;D[Data Collection Planning]\n  B--&gt;E[Data Collection]\n  C--&gt;E\n  D--&gt;E\n  E--&gt;F[Post-Survey Processing]\n  F--&gt;G[Analysis]\n  G--&gt;H[Reporting]\n  style G fill:#ff8484\n\n\n\n\n\n\n\n\nThis tutorial focuses on the Analysis step\nWe assume you are working with public use or restricted use files that already have weights\nAs time allows, we may touch on reporting"
  },
  {
    "objectID": "01-introduction/slides-01-intro.html#roadmap-for-today",
    "href": "01-introduction/slides-01-intro.html#roadmap-for-today",
    "title": "Complex Survey Data Analysis",
    "section": "Roadmap for today",
    "text": "Roadmap for today\n\nGetting started\nDescriptive analysis\nStatistical testing\nSurvey design objects"
  },
  {
    "objectID": "01-introduction/slides-01-intro.html#logistics",
    "href": "01-introduction/slides-01-intro.html#logistics",
    "title": "Complex Survey Data Analysis",
    "section": "Logistics",
    "text": "Logistics\n\nWe will be using Posit Cloud for exercises\nAll materials are found at:\n\nhttps://tidy-survey-r.github.io/user-2025-survey-data-tutorial/ (Site)\nhttps://github.com/tidy-survey-r/user-2025-survey-data-tutorial (Source)\n\nSticky notes"
  },
  {
    "objectID": "03-descriptive-analysis/index.html",
    "href": "03-descriptive-analysis/index.html",
    "title": "03 - Descriptive Analysis",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "03 - Descriptive Analysis"
    ]
  },
  {
    "objectID": "03-descriptive-analysis/index.html#slides",
    "href": "03-descriptive-analysis/index.html#slides",
    "title": "03 - Descriptive Analysis",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "03 - Descriptive Analysis"
    ]
  },
  {
    "objectID": "03-descriptive-analysis/index.html#your-turn",
    "href": "03-descriptive-analysis/index.html#your-turn",
    "title": "03 - Descriptive Analysis",
    "section": "Your Turn",
    "text": "Your Turn\n\nSet-up\n\nLoad necessary packages\n\nlibrary(tidyverse)\nlibrary(srvyr)\nlibrary(srvyrexploR)\n\n\n\nLoad in data and preview it\n\nglimpse(recs_2020)\n\nRows: 18,496\nColumns: 100\n$ DOEID            &lt;dbl&gt; 100001, 100002, 100003, 100004, 100005, 100006, 10000…\n$ ClimateRegion_BA &lt;fct&gt; Mixed-Dry, Mixed-Humid, Mixed-Dry, Mixed-Humid, Mixed…\n$ Urbanicity       &lt;fct&gt; Urban Area, Urban Area, Urban Area, Urban Area, Urban…\n$ Region           &lt;fct&gt; West, South, West, South, Northeast, South, South, So…\n$ REGIONC          &lt;chr&gt; \"WEST\", \"SOUTH\", \"WEST\", \"SOUTH\", \"NORTHEAST\", \"SOUTH…\n$ Division         &lt;fct&gt; Mountain South, West South Central, Mountain South, S…\n$ STATE_FIPS       &lt;chr&gt; \"35\", \"05\", \"35\", \"45\", \"34\", \"48\", \"40\", \"28\", \"11\",…\n$ state_postal     &lt;fct&gt; NM, AR, NM, SC, NJ, TX, OK, MS, DC, AZ, CA, TX, LA, M…\n$ state_name       &lt;fct&gt; New Mexico, Arkansas, New Mexico, South Carolina, New…\n$ HDD65            &lt;dbl&gt; 3844, 3766, 3819, 2614, 4219, 901, 3148, 1825, 4233, …\n$ CDD65            &lt;dbl&gt; 1679, 1458, 1696, 1718, 1363, 3558, 2128, 2374, 1159,…\n$ HDD30YR          &lt;dbl&gt; 4451, 4429, 4500, 3229, 4896, 1150, 3564, 2660, 4404,…\n$ CDD30YR          &lt;dbl&gt; 1027, 1305, 1010, 1653, 1059, 3588, 2043, 2164, 1407,…\n$ HousingUnitType  &lt;fct&gt; Single-family detached, Apartment: 5 or more units, A…\n$ YearMade         &lt;ord&gt; 1970-1979, 1980-1989, 1960-1969, 1980-1989, 1960-1969…\n$ TOTSQFT_EN       &lt;dbl&gt; 2100, 590, 900, 2100, 800, 4520, 2100, 900, 750, 760,…\n$ TOTHSQFT         &lt;dbl&gt; 2100, 590, 900, 2100, 800, 3010, 1200, 900, 750, 760,…\n$ TOTCSQFT         &lt;dbl&gt; 2100, 590, 900, 2100, 800, 3010, 1200, 0, 500, 760, 1…\n$ SpaceHeatingUsed &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE,…\n$ ACUsed           &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE…\n$ HeatingBehavior  &lt;fct&gt; Set one temp and leave it, Turn on or off as needed, …\n$ WinterTempDay    &lt;dbl&gt; 70, 70, 69, 68, 68, 76, 74, 70, 68, 70, 72, 74, 74, 7…\n$ WinterTempAway   &lt;dbl&gt; 70, 65, 68, 68, 68, 76, 65, 70, 60, 70, 70, 74, 74, 7…\n$ WinterTempNight  &lt;dbl&gt; 68, 65, 67, 68, 68, 68, 74, 68, 62, 68, 72, 74, 74, 6…\n$ ACBehavior       &lt;fct&gt; Set one temp and leave it, Turn on or off as needed, …\n$ SummerTempDay    &lt;dbl&gt; 71, 68, 70, 72, 72, 69, 68, NA, 72, 74, 77, 77, 74, 6…\n$ SummerTempAway   &lt;dbl&gt; 71, 68, 68, 72, 72, 74, 70, NA, 76, 74, 77, 77, 74, 6…\n$ SummerTempNight  &lt;dbl&gt; 71, 68, 68, 72, 72, 68, 70, NA, 68, 72, 77, 77, 74, 6…\n$ NWEIGHT          &lt;dbl&gt; 3284.104, 9007.387, 5669.002, 5294.239, 9935.465, 724…\n$ NWEIGHT1         &lt;dbl&gt; 3273.053, 9019.564, 5793.353, 5361.146, 10047.545, 73…\n$ NWEIGHT2         &lt;dbl&gt; 3349.139, 9081.268, 5913.554, 5361.706, 10261.682, 74…\n$ NWEIGHT3         &lt;dbl&gt; 3344.876, 9020.409, 5762.743, 5371.011, 10036.522, 73…\n$ NWEIGHT4         &lt;dbl&gt; 3437.284, 9213.074, 5870.261, 5392.846, 9960.953, 742…\n$ NWEIGHT5         &lt;dbl&gt; 3415.582, 9117.337, 5720.669, 5327.617, 10107.863, 73…\n$ NWEIGHT6         &lt;dbl&gt; 3354.813, 9178.697, 5662.939, 5353.957, 10298.428, 74…\n$ NWEIGHT7         &lt;dbl&gt; 3372.342, 9095.936, 5699.536, 5325.316, 10064.709, 73…\n$ NWEIGHT8         &lt;dbl&gt; 3364.035, 8920.480, 5704.027, 5375.732, 10096.509, 73…\n$ NWEIGHT9         &lt;dbl&gt; 3361.912, 9188.981, 5667.670, 5391.379, 10321.424, 73…\n$ NWEIGHT10        &lt;dbl&gt; 3301.569, 9060.009, 5793.325, 5500.628, 9943.547, 731…\n$ NWEIGHT11        &lt;dbl&gt; 3211.291, 9127.404, 5806.321, 5427.320, 10266.593, 73…\n$ NWEIGHT12        &lt;dbl&gt; 3500.495, 9264.304, 5650.394, 5384.442, 10127.061, 73…\n$ NWEIGHT13        &lt;dbl&gt; 3313.754, 9222.011, 5648.461, 5302.085, 10240.975, 72…\n$ NWEIGHT14        &lt;dbl&gt; 3359.110, 9199.014, 5828.712, 5362.226, 9871.649, 740…\n$ NWEIGHT15        &lt;dbl&gt; 3423.682, 9143.214, 5641.887, 5383.136, 10275.303, 74…\n$ NWEIGHT16        &lt;dbl&gt; 3383.601, 9042.382, 5717.847, 5380.916, 9921.199, 738…\n$ NWEIGHT17        &lt;dbl&gt; 3312.112, 9416.815, 5968.713, 5418.300, 10311.952, 73…\n$ NWEIGHT18        &lt;dbl&gt; 3324.383, 9162.681, 5828.370, 5356.271, 10004.213, 74…\n$ NWEIGHT19        &lt;dbl&gt; 3366.644, 9191.950, 5814.049, 5343.187, 10437.297, 75…\n$ NWEIGHT20        &lt;dbl&gt; 3326.643, 9091.550, 5697.447, 5360.409, 10100.730, 73…\n$ NWEIGHT21        &lt;dbl&gt; 3339.910, 0.000, 5686.769, 5336.323, 9981.635, 7427.5…\n$ NWEIGHT22        &lt;dbl&gt; 3292.197, 9097.877, 5738.946, 5389.830, 10000.278, 73…\n$ NWEIGHT23        &lt;dbl&gt; 3277.697, 9319.896, 5944.649, 5397.093, 10179.723, 71…\n$ NWEIGHT24        &lt;dbl&gt; 3340.406, 9080.729, 5819.996, 5448.089, 9825.700, 746…\n$ NWEIGHT25        &lt;dbl&gt; 3386.445, 9406.487, 5823.075, 5382.111, 10149.386, 72…\n$ NWEIGHT26        &lt;dbl&gt; 3300.574, 9255.867, 5650.188, 5386.710, 0.000, 7309.1…\n$ NWEIGHT27        &lt;dbl&gt; 3311.546, 9318.078, 5862.116, 5351.082, 10140.604, 72…\n$ NWEIGHT28        &lt;dbl&gt; 3347.637, 9154.189, 5706.909, 5371.439, 9948.403, 750…\n$ NWEIGHT29        &lt;dbl&gt; 3355.638, 9371.695, 5618.615, 5361.572, 10064.708, 73…\n$ NWEIGHT30        &lt;dbl&gt; 3322.423, 9137.197, 5795.544, 5381.218, 10082.927, 73…\n$ NWEIGHT31        &lt;dbl&gt; 3255.840, 9233.363, 5994.544, 5319.728, 10132.977, 73…\n$ NWEIGHT32        &lt;dbl&gt; 3317.937, 9114.608, 0.000, 5338.558, 9978.370, 7302.5…\n$ NWEIGHT33        &lt;dbl&gt; 3401.811, 9176.872, 5637.872, 0.000, 10213.075, 7326.…\n$ NWEIGHT34        &lt;dbl&gt; 3363.592, 9191.207, 5619.040, 5379.523, 9964.337, 724…\n$ NWEIGHT35        &lt;dbl&gt; 3303.528, 9100.344, 5652.289, 5363.277, 10070.847, 0.…\n$ NWEIGHT36        &lt;dbl&gt; 3333.027, 9071.530, 5834.171, 5476.866, 9987.947, 735…\n$ NWEIGHT37        &lt;dbl&gt; 3389.869, 9263.141, 5712.198, 5386.333, 10120.314, 73…\n$ NWEIGHT38        &lt;dbl&gt; 3381.503, 9077.901, 5765.422, 5326.402, 10023.636, 73…\n$ NWEIGHT39        &lt;dbl&gt; 3328.893, 9011.009, 5887.338, 5420.540, 10023.919, 73…\n$ NWEIGHT40        &lt;dbl&gt; 3292.829, 9166.222, 5649.809, 5370.189, 10184.527, 73…\n$ NWEIGHT41        &lt;dbl&gt; 3295.089, 9091.334, 5957.748, 5339.323, 10069.084, 73…\n$ NWEIGHT42        &lt;dbl&gt; 3413.593, 9193.664, 5592.619, 5328.788, 9958.721, 743…\n$ NWEIGHT43        &lt;dbl&gt; 3263.710, 9215.337, 6035.472, 5409.435, 10352.485, 73…\n$ NWEIGHT44        &lt;dbl&gt; 3342.446, 9048.092, 5732.384, 5416.488, 10091.807, 74…\n$ NWEIGHT45        &lt;dbl&gt; 3275.274, 9258.580, 5876.696, 5453.165, 10227.529, 74…\n$ NWEIGHT46        &lt;dbl&gt; 3364.248, 9170.518, 5653.511, 5449.444, 10069.384, 73…\n$ NWEIGHT47        &lt;dbl&gt; 3336.066, 9260.064, 5763.458, 5375.551, 9995.686, 732…\n$ NWEIGHT48        &lt;dbl&gt; 3329.151, 9105.220, 5928.968, 5407.834, 10197.608, 73…\n$ NWEIGHT49        &lt;dbl&gt; 3348.061, 9116.891, 5772.333, 5399.779, 10093.620, 74…\n$ NWEIGHT50        &lt;dbl&gt; 3357.231, 9261.127, 5785.452, 5359.408, 10196.251, 73…\n$ NWEIGHT51        &lt;dbl&gt; 3335.188, 8955.288, 5635.561, 5447.619, 10017.094, 73…\n$ NWEIGHT52        &lt;dbl&gt; 3240.132, 9000.296, 5944.330, 5344.453, 9954.142, 749…\n$ NWEIGHT53        &lt;dbl&gt; 3429.728, 9290.375, 5683.500, 5437.803, 10050.961, 74…\n$ NWEIGHT54        &lt;dbl&gt; 3294.084, 9199.326, 5735.631, 5377.898, 10018.844, 72…\n$ NWEIGHT55        &lt;dbl&gt; 3397.713, 8958.782, 5674.564, 5357.470, 10309.728, 75…\n$ NWEIGHT56        &lt;dbl&gt; 3292.610, 9232.597, 5660.854, 5421.025, 10142.763, 73…\n$ NWEIGHT57        &lt;dbl&gt; 0.000, 9140.427, 5917.193, 5365.230, 10176.828, 7383.…\n$ NWEIGHT58        &lt;dbl&gt; 3369.768, 9306.997, 5571.015, 5402.057, 10043.143, 75…\n$ NWEIGHT59        &lt;dbl&gt; 3358.163, 9061.782, 5887.092, 5402.772, 10247.911, 73…\n$ NWEIGHT60        &lt;dbl&gt; 3404.031, 8957.915, 5837.846, 5350.860, 10110.301, 75…\n$ BTUEL            &lt;dbl&gt; 42723.28, 17889.29, 8146.63, 31646.53, 20027.42, 4896…\n$ DOLLAREL         &lt;dbl&gt; 1955.06, 713.27, 334.51, 1424.86, 1087.00, 1895.66, 1…\n$ BTUNG            &lt;dbl&gt; 101924.43, 10145.32, 22603.08, 55118.66, 39099.51, 36…\n$ DOLLARNG         &lt;dbl&gt; 701.8300, 261.7348, 188.1400, 636.9100, 376.0400, 439…\n$ BTULP            &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ DOLLARLP         &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ BTUFO            &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ DOLLARFO         &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ BTUWOOD          &lt;dbl&gt; 0, 0, 0, 0, 0, 3000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ TOTALBTU         &lt;dbl&gt; 144647.71, 28034.61, 30749.71, 86765.19, 59126.93, 85…\n$ TOTALDOL         &lt;dbl&gt; 2656.8900, 975.0048, 522.6500, 2061.7700, 1463.0400, …\n\nglimpse(anes_2020)\n\nRows: 7,453\nColumns: 65\n$ V200001                 &lt;dbl&gt; 200015, 200022, 200039, 200046, 200053, 200060…\n$ CaseID                  &lt;dbl&gt; 200015, 200022, 200039, 200046, 200053, 200060…\n$ V200002                 &lt;hvn_lbll&gt; 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,…\n$ InterviewMode           &lt;fct&gt; Web, Web, Web, Web, Web, Web, Web, Web, Web, W…\n$ V200010b                &lt;dbl&gt; 1.0057375, 1.1634731, 0.7686811, 0.5210195, 0.…\n$ Weight                  &lt;dbl&gt; 1.0057375, 1.1634731, 0.7686811, 0.5210195, 0.…\n$ V200010c                &lt;dbl&gt; 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2…\n$ VarUnit                 &lt;fct&gt; 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2…\n$ V200010d                &lt;dbl&gt; 9, 26, 41, 29, 23, 37, 7, 37, 32, 41, 22, 7, 3…\n$ Stratum                 &lt;fct&gt; 9, 26, 41, 29, 23, 37, 7, 37, 32, 41, 22, 7, 3…\n$ V201006                 &lt;hvn_lbll&gt; 2, 3, 2, 3, 2, 1, 2, 3, 2, 2, 2, 2, 2, 1,…\n$ CampaignInterest        &lt;fct&gt; Somewhat interested, Not much interested, Some…\n$ V201023                 &lt;hvn_lbll&gt; -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1…\n$ EarlyVote2020           &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA, NA, Yes, NA, NA, N…\n$ V201024                 &lt;hvn_lbll&gt; -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1…\n$ V201025x                &lt;hvn_lbll&gt; 3, 3, 3, 3, 3, 3, 3, 2, 4, 3, 3, 3, 2, 4,…\n$ V201028                 &lt;hvn_lbll&gt; -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1…\n$ V201029                 &lt;hvn_lbll&gt; -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1…\n$ V201101                 &lt;hvn_lbll&gt; -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 2, …\n$ V201102                 &lt;hvn_lbll&gt; 1, 1, 1, 1, 1, 2, 1, 2, -1, -1, -1, 1, 2,…\n$ VotedPres2016           &lt;fct&gt; Yes, Yes, Yes, Yes, Yes, No, Yes, No, Yes, Yes…\n$ V201103                 &lt;hvn_lbll&gt; 2, 5, 1, 1, 2, -1, 5, -1, 1, 1, -1, 1, -1…\n$ VotedPres2016_selection &lt;fct&gt; Trump, Other, Clinton, Clinton, Trump, NA, Oth…\n$ V201228                 &lt;hvn_lbll&gt; 2, 5, 3, 2, 3, 3, 2, 2, 3, 1, 1, 1, 2, 1,…\n$ V201229                 &lt;hvn_lbll&gt; 1, -1, -1, 2, -1, -1, 2, 2, -1, 2, 1, 2, …\n$ V201230                 &lt;hvn_lbll&gt; -1, 2, 3, -1, 2, 3, -1, -1, 2, -1, -1, -1…\n$ V201231x                &lt;hvn_lbll&gt; 7, 4, 3, 6, 4, 3, 6, 6, 4, 2, 1, 2, 7, 2,…\n$ PartyID                 &lt;fct&gt; Strong republican, Independent, Independent-de…\n$ V201233                 &lt;hvn_lbll&gt; 5, 5, 4, 3, 5, 4, 4, 1, 3, 3, 2, 3, 4, 5,…\n$ TrustGovernment         &lt;fct&gt; Never, Never, Some of the time, About half the…\n$ V201237                 &lt;hvn_lbll&gt; 3, 4, 4, 2, 4, 2, 4, 1, 3, 2, 4, 3, 4, 3,…\n$ TrustPeople             &lt;fct&gt; About half the time, Some of the time, Some of…\n$ V201507x                &lt;hvn_lbll&gt; 46, 37, 40, 41, 72, 71, 37, 45, 70, 43, 3…\n$ Age                     &lt;dbl&gt; 46, 37, 40, 41, 72, 71, 37, 45, 70, 43, 37, 55…\n$ AgeGroup                &lt;fct&gt; 40-49, 30-39, 40-49, 40-49, 70 or older, 70 or…\n$ V201510                 &lt;hvn_lbll&gt; 6, 3, 2, 4, 8, 3, 4, 2, 2, 4, 2, 2, 2, 7,…\n$ Education               &lt;fct&gt; Bachelor's, Post HS, High school, Post HS, Gra…\n$ V201546                 &lt;hvn_lbll&gt; 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2,…\n$ V201547a                &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201547b                &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201547c                &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201547d                &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201547e                &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201547z                &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201549x                &lt;hvn_lbll&gt; 3, 4, 1, 4, 5, 1, 1, 1, 1, 3, 3, 1, 1, 4,…\n$ RaceEth                 &lt;fct&gt; \"Hispanic\", \"Asian, NH/PI\", \"White\", \"Asian, N…\n$ V201600                 &lt;hvn_lbll&gt; 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1,…\n$ Gender                  &lt;fct&gt; Male, Female, Female, Male, Male, Female, Fema…\n$ V201607                 &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201610                 &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201611                 &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201613                 &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201615                 &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201616                 &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201617x                &lt;hvn_lbll&gt; 21, 13, 17, 7, 22, 3, 4, 3, 10, 11, 9, 18…\n$ Income                  &lt;fct&gt; \"$175,000-249,999\", \"$70,000-74,999\", \"$100,00…\n$ Income7                 &lt;fct&gt; $125k or more, $60k to &lt; 80k, $100k to &lt; 125k,…\n$ V202051                 &lt;hvn_lbll&gt; -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1…\n$ V202066                 &lt;hvn_lbll&gt; 1, 4, 4, 4, 4, 4, 4, 1, -1, 4, 4, 4, 4, -…\n$ V202072                 &lt;hvn_lbll&gt; -1, 1, 1, 1, 1, 1, 1, -1, -1, 1, 1, 1, 1,…\n$ VotedPres2020           &lt;fct&gt; NA, Yes, Yes, Yes, Yes, Yes, Yes, NA, Yes, Yes…\n$ V202073                 &lt;hvn_lbll&gt; -1, 3, 1, 1, 2, 1, 2, -1, -1, 1, 1, 1, 2,…\n$ V202109x                &lt;hvn_lbll&gt; 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,…\n$ V202110x                &lt;hvn_lbll&gt; -1, 3, 1, 1, 2, 1, 2, -1, 1, 1, 1, 1, 2, …\n$ VotedPres2020_selection &lt;fct&gt; NA, Other, Biden, Biden, Trump, Biden, Trump, …\n\n\nFind codebooks here:\n\nRECS 2020\nANES 2020\n\n\n\nCreate design objects for usage\n\nanes_des &lt;- anes_2020 %&gt;%\n  mutate(Weight = V200010b / sum(V200010b) * 231034125) %&gt;%\n  as_survey_design(\n    weights = Weight,\n    strata = V200010d,\n    ids = V200010c,\n    nest = TRUE\n  )\n\nrecs_des &lt;- recs_2020 %&gt;%\n  as_survey_rep(\n    weights = NWEIGHT,\n    repweights = NWEIGHT1:NWEIGHT60,\n    type = \"JK1\",\n    scale = 59 / 60,\n    mse = TRUE\n  )\n\n\n\n\nExercises - Part 1\n\nHow many females have a graduate degree (according to the ANES data)?\n\n\n# Hint: The variables `Gender` and `Education` will be useful.\n\n\nWhat percentage of people identify as “Strong Democrat”?\n\n\n# Hint: The variable `PartyID` indicates someone’s party affiliation.\n\n\nWhat percentage of people who voted in the 2020 election identify as “Strong Republican”?\n\n\n# Hint: The variable `VotedPres2020` indicates whether someone voted in 2020.\n\n\nWhat percentage of people voted in both the 2016 election and the 2020 election? Include the logit confidence interval.\n\n\n# Hint: The variable VotedPres2016 indicates whether someone voted in 2016.\n\n\nAdvanced bonus exercise What percentage of people used air-conditioning (A/C) in each state according to the RECS data? Extra bonus: Make a plot or map of this data by state - the usmap package may be useful.\n\n\n# Hint: The variable `state_postal` indicates the state and `ACUsed` indicates whether the household used A/C\n\n\n\nExercises - Part 2\n\nWhat is the design effect for the proportion of people who voted early?\n\n\n# Hint: The variable `EarlyVote2020` indicates whether someone voted early in 2020.\n\n\nWhat is the median temperature people set their thermostats to at night during the winter (using the RECS data)?\n\n\n# Hint: The variable `WinterTempNight` indicates the temperature that people set their thermostat to in the winter at night.\n\n\nPeople sometimes set their temperature differently over different seasons and during the day. What median temperatures do people set their thermostats to in the summer and winter, both during the day and at night? Include confidence intervals.\n\n\n# Hint: Use the variables `WinterTempDay`, `WinterTempNight`, `SummerTempDay`, and `SummerTempNight.`\n\n\nWhat is the correlation between the temperature that people set their temperature at during the night and during the day in the summer?\n\n\n# Hint: use the variables `SummerTempNight` and `SummerTempDay`\n\n\nWhat is the 1st, 2nd, and 3rd quartile of money spent on energy by Building America (BA) climate zone? Include the national estimates as well.\n\n\n# Hint: `TOTALDOL` indicates the total amount spent on all fuel, and `ClimateRegion_BA` indicates the BA climate zones.\n\n\nAdvanced bonus exercise What is the average money spent on energy per square foot by state? Extra bonus: Make a plot or map of this data by state\n\n\n# Hint: The variable `state_postal` indicates the state, `TOTALDOL` is the amount of money spent on energy, and `TOTSQFT_EN` is the square footage",
    "crumbs": [
      "03 - Descriptive Analysis"
    ]
  },
  {
    "objectID": "03-descriptive-analysis/index.html#solutions",
    "href": "03-descriptive-analysis/index.html#solutions",
    "title": "03 - Descriptive Analysis",
    "section": "Solutions",
    "text": "Solutions\n\n\nSee the solutions\n\n\nExercises - Part 1\n\nHow many females have a graduate degree (according to the ANES data)?\n\n\n\nShow code\nanes_des %&gt;%\n  survey_count(Gender, Education) %&gt;%\n  filter(Gender == \"Female\", Education == \"Graduate\")\n\n\n# A tibble: 1 × 4\n  Gender Education         n    n_se\n  &lt;fct&gt;  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt;\n1 Female Graduate  15072196. 837872.\n\n\n\nWhat percentage of people identify as “Strong Democrat”?\n\n\n\nShow code\nanes_des %&gt;%\n  group_by(PartyID) %&gt;%\n  summarize(\n    p = survey_prop()\n  ) %&gt;%\n  filter(PartyID == \"Strong democrat\")\n\n\nWhen `proportion` is unspecified, `survey_prop()` now defaults to `proportion = TRUE`.\nℹ This should improve confidence interval coverage.\nThis message is displayed once per session.\n\n\n# A tibble: 1 × 3\n  PartyID             p    p_se\n  &lt;fct&gt;           &lt;dbl&gt;   &lt;dbl&gt;\n1 Strong democrat 0.219 0.00646\n\n\n\nWhat percentage of people who voted in the 2020 election identify as “Strong Republican”?\n\n\n\nShow code\nanes_des %&gt;%\n  filter(VotedPres2020 == \"Yes\") %&gt;%\n  group_by(PartyID) %&gt;%\n  summarize(\n    p = survey_prop()\n  ) %&gt;%\n  filter(PartyID == \"Strong republican\")\n\n\n# A tibble: 1 × 3\n  PartyID               p    p_se\n  &lt;fct&gt;             &lt;dbl&gt;   &lt;dbl&gt;\n1 Strong republican 0.228 0.00824\n\n\n\nWhat percentage of people voted in both the 2016 election and the 2020 election? Include the logit confidence interval.\n\n\n\nShow code\nanes_des %&gt;%\n  filter(!is.na(VotedPres2016), !is.na(VotedPres2020)) %&gt;%\n  group_by(interact(VotedPres2016, VotedPres2020)) %&gt;%\n  summarize(\n    p = survey_prop(vartype = \"ci\", prop_method = \"logit\")\n  ) %&gt;%\n  filter(VotedPres2016 == \"Yes\", VotedPres2020 == \"Yes\")\n\n\n# A tibble: 1 × 5\n  VotedPres2016 VotedPres2020     p p_low p_upp\n  &lt;fct&gt;         &lt;fct&gt;         &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 Yes           Yes           0.794 0.777 0.810\n\n\n\nAdvanced bonus exercise What percentage of people used air-conditioning (A/C) in each state according to the RECS data? Extra bonus: Make a plot or map of this data by state - the usmap package may be useful.\n\n\n\nShow code\nac_by_state &lt;- recs_des %&gt;%\n  group_by(state_postal) %&gt;%\n  summarize(\n    PctAC = survey_mean(ACUsed * 100)\n  )\n\nac_by_state\n\n\n# A tibble: 51 × 3\n   state_postal PctAC PctAC_se\n   &lt;fct&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n 1 AL           93.5     1.52 \n 2 AK            6.94    1.51 \n 3 AZ           94.2     1.31 \n 4 AR           93.4     1.86 \n 5 CA           72.4     1.41 \n 6 CO           81.7     2.15 \n 7 CT           89.6     1.95 \n 8 DE           97.0     1.51 \n 9 DC           93.3     1.82 \n10 FL           95.8     0.785\n# ℹ 41 more rows\n\n\nShow code\nlibrary(usmap)\n\nus_map() %&gt;%\n  left_join(ac_by_state, by = c(\"abbr\" = \"state_postal\")) %&gt;%\n  ggplot(aes(fill = PctAC)) +\n  geom_sf() +\n  ggthemes::theme_map() +\n  scale_fill_viridis_c(name = \"A/C Used (%)\") +\n  labs(\n    title = \"Percent of housing units using air-conditioning, 2020\",\n    caption = \"U.S. Energy Information Administration, 2024. Residential Energy Consumption 2020\"\n  )\n\n\n\n\n\n\n\n\n\n\n\nExercises - Part 2\n\nWhat is the design effect for the proportion of people who voted early?\n\n\n\nShow code\nanes_des %&gt;%\n  filter(!is.na(EarlyVote2020)) %&gt;%\n  group_by(EarlyVote2020) %&gt;%\n  summarize(\n    p = survey_mean(deff = TRUE)\n  ) %&gt;%\n  filter(EarlyVote2020 == \"Yes\")\n\n\n# A tibble: 1 × 4\n  EarlyVote2020     p   p_se p_deff\n  &lt;fct&gt;         &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 Yes           0.726 0.0247   1.50\n\n\n\nWhat is the median temperature people set their thermostats to at night during the winter (using the RECS data)?\n\n\n\nShow code\nrecs_des %&gt;%\n  summarize(\n    med_night_winter_temp = survey_median(WinterTempNight, na.rm = TRUE)\n  )\n\n\n# A tibble: 1 × 2\n  med_night_winter_temp med_night_winter_temp_se\n                  &lt;dbl&gt;                    &lt;dbl&gt;\n1                    68                    0.250\n\n\n\nPeople sometimes set their temperature differently over different seasons and during the day. What median temperatures do people set their thermostats to in the summer and winter, both during the day and at night? Include confidence intervals.\n\n\n\nShow code\nests_med_temps &lt;-\n  recs_des %&gt;%\n  summarize(\n    across(contains(\"Temp\"), ~ survey_median(.x, na.rm = TRUE, vartype = \"ci\"))\n  )\n\nests_med_temps\n\n\n# A tibble: 1 × 18\n  WinterTempDay WinterTempDay_low WinterTempDay_upp WinterTempAway\n          &lt;dbl&gt;             &lt;dbl&gt;             &lt;dbl&gt;          &lt;dbl&gt;\n1            70                70                71             68\n# ℹ 14 more variables: WinterTempAway_low &lt;dbl&gt;, WinterTempAway_upp &lt;dbl&gt;,\n#   WinterTempNight &lt;dbl&gt;, WinterTempNight_low &lt;dbl&gt;,\n#   WinterTempNight_upp &lt;dbl&gt;, SummerTempDay &lt;dbl&gt;, SummerTempDay_low &lt;dbl&gt;,\n#   SummerTempDay_upp &lt;dbl&gt;, SummerTempAway &lt;dbl&gt;, SummerTempAway_low &lt;dbl&gt;,\n#   SummerTempAway_upp &lt;dbl&gt;, SummerTempNight &lt;dbl&gt;, SummerTempNight_low &lt;dbl&gt;,\n#   SummerTempNight_upp &lt;dbl&gt;\n\n\nShow code\nests_med_temps %&gt;%\n  pivot_longer(cols = everything()) %&gt;%\n  separate_wider_delim(name, delim = \"_\", names = c(\"Var\", \"EstType\"), too_few = \"align_start\") %&gt;%\n  mutate(\n    EstType = if_else(is.na(EstType), \"Median\", EstType)\n  ) %&gt;%\n  pivot_wider(names_from = EstType, values_from = value)\n\n\n# A tibble: 6 × 4\n  Var             Median   low   upp\n  &lt;chr&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 WinterTempDay       70    70    71\n2 WinterTempAway      68    68    69\n3 WinterTempNight     68    68    69\n4 SummerTempDay       72    72    73\n5 SummerTempAway      74    74    75\n6 SummerTempNight     72    72    73\n\n\n\nWhat is the correlation between the temperature that people set their temperature at during the night and during the day in the summer?\n\n\n\nShow code\nrecs_des %&gt;%\n  summarize(\n    rho_temps = survey_corr(SummerTempNight, SummerTempDay, na.rm = TRUE)\n  )\n\n\nWarning: There was 1 warning in `dplyr::summarise()`.\nℹ In argument: `rho_temps = survey_corr(SummerTempNight, SummerTempDay, na.rm =\n  TRUE)`.\nCaused by warning in `sweep()`:\n! length(STATS) or dim(STATS) do not match dim(x)[MARGIN]\n\n\n# A tibble: 1 × 2\n  rho_temps rho_temps_se\n      &lt;dbl&gt;        &lt;dbl&gt;\n1     0.806      0.00806\n\n\n\nWhat is the 1st, 2nd, and 3rd quartile of money spent on energy by Building America (BA) climate zone? Include the national estimates as well.\n\n\n\nShow code\nrecs_des %&gt;%\n  group_by(ClimateRegion_BA) %&gt;%\n  cascade(\n    EnergyCost = survey_quantile(TOTALDOL, quantiles = c(.25, .5, .75)),\n    .fill = \"National\"\n  )\n\n\n# A tibble: 9 × 7\n  ClimateRegion_BA EnergyCost_q25 EnergyCost_q50 EnergyCost_q75\n  &lt;fct&gt;                     &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt;\n1 Mixed-Dry                 1091.          1541.          2139.\n2 Mixed-Humid               1317.          1840.          2462.\n3 Hot-Humid                 1094.          1622.          2233.\n4 Hot-Dry                    926.          1513.          2223.\n5 Very-Cold                 1195.          1986.          2955.\n6 Cold                      1213.          1756.          2422.\n7 Marine                     938.          1380.          1987.\n8 Subarctic                 2404.          3535.          5219.\n9 National                  1168.          1713.          2360.\n# ℹ 3 more variables: EnergyCost_q25_se &lt;dbl&gt;, EnergyCost_q50_se &lt;dbl&gt;,\n#   EnergyCost_q75_se &lt;dbl&gt;\n\n\n\nAdvanced bonus exercise What is the average money spent on energy per square foot by state? Extra bonus: Make a plot or map of this data by state\n\n\n\nShow code\nenergy_spend_by_state &lt;- recs_des %&gt;%\n  group_by(state_postal) %&gt;%\n  summarize(\n    EnergyCost = survey_mean(TOTALDOL / TOTSQFT_EN)\n  )\n\nenergy_spend_by_state\n\n\n# A tibble: 51 × 3\n   state_postal EnergyCost EnergyCost_se\n   &lt;fct&gt;             &lt;dbl&gt;         &lt;dbl&gt;\n 1 AL                1.42         0.0522\n 2 AK                1.98         0.0720\n 3 AZ                1.36         0.0326\n 4 AR                1.35         0.0529\n 5 CA                1.23         0.0202\n 6 CO                0.801        0.0274\n 7 CT                1.70         0.0606\n 8 DE                1.11         0.0481\n 9 DC                1.14         0.0332\n10 FL                1.15         0.0246\n# ℹ 41 more rows\n\n\nShow code\nlibrary(usmap)\n\nus_map() %&gt;%\n  left_join(energy_spend_by_state, by = c(\"abbr\" = \"state_postal\")) %&gt;%\n  ggplot(aes(fill = EnergyCost)) +\n  geom_sf() +\n  ggthemes::theme_map() +\n  scale_fill_viridis_c(name = \"$/sq ft\") +\n  labs(\n    title = \"Average residential energy cost per square foot, 2020\",\n    caption = \"U.S. Energy Information Administration, 2024. Residential Energy Consumption 2020\"\n  )",
    "crumbs": [
      "03 - Descriptive Analysis"
    ]
  },
  {
    "objectID": "05-design/slides-05-design.html#sampling-methods",
    "href": "05-design/slides-05-design.html#sampling-methods",
    "title": "Sampling Designs in {srvyr}",
    "section": "Sampling methods",
    "text": "Sampling methods\nUnits can be selected in various ways such as:\n\nSimple random sampling (with or without replacement): every unit has the same chance of being selected\nSystematic sampling: sample individuals from an ordered list and sampling individuals at an interval with a random starting point\nProbability proportional to size: probability of selection is proportional to “size”"
  },
  {
    "objectID": "05-design/slides-05-design.html#complex-designs",
    "href": "05-design/slides-05-design.html#complex-designs",
    "title": "Sampling Designs in {srvyr}",
    "section": "Complex designs",
    "text": "Complex designs\nDesigns can also incorporate stratification and/or clustering:\n\nStratified sampling: divide population into mutually exclusive subgroups (strata). Randomly sample within each stratum\nClustered sampling: divide population into mutually exclusive subgroups (clusters). Randomly sample clusters and then individuals within clusters"
  },
  {
    "objectID": "05-design/slides-05-design.html#why-design-matters",
    "href": "05-design/slides-05-design.html#why-design-matters",
    "title": "Sampling Designs in {srvyr}",
    "section": "Why design matters?",
    "text": "Why design matters?\n\nThe design type impacts the variability of the estimates\nWeights impact the point estimate and the variability estimates\nSpecifying the components of the design (strata and/or clusters) and weights in R is necessary to get correct estimates"
  },
  {
    "objectID": "05-design/slides-05-design.html#determining-the-design",
    "href": "05-design/slides-05-design.html#determining-the-design",
    "title": "Sampling Designs in {srvyr}",
    "section": "Determining the design",
    "text": "Determining the design\n\nCheck the documentation such as methodology, design, analysis guide, or technical documentation\nDocumentation will indicate the variables needed to specify the design. Look for:\n\nweight (almost always)\nstrata and/or clusters/PSUs. Sometimes pseudo-strata and pseudo-cluster OR\nreplicate weights (this is used instead of strata/clusters for analysis)\nFinite population correction or population sizes (uncommon)\n\nDocumentation may include SAS, SUDAAN, Stata and/or R syntax\n\n\n\nWe will show both ANES and RECS examples when diving into code"
  },
  {
    "objectID": "05-design/slides-05-design.html#as_survey_design-syntax",
    "href": "05-design/slides-05-design.html#as_survey_design-syntax",
    "title": "Sampling Designs in {srvyr}",
    "section": "as_survey_design(): Syntax",
    "text": "as_survey_design(): Syntax\n\nSpecifying the sampling design when you don’t have replicate weights\nas_survey_design() creates a tbl_svy object that then correctly calculates weighted estimates and SEs\n\n\nas_survey_design(\n  .data,\n  ids = NULL, # cluster IDs/PSUs\n  strata = NULL, # strata variables\n  variables = NULL, # defaults to all in .data\n  fpc = NULL, # variables defining the fpc\n  nest = FALSE, # TRUE/FALSE - relabel clusters to nest within strata\n  check_strata = !nest, # check that clusters are nested in strata\n  weights = NULL # weight variable,\n)"
  },
  {
    "objectID": "05-design/slides-05-design.html#syntax-for-common-designs",
    "href": "05-design/slides-05-design.html#syntax-for-common-designs",
    "title": "Sampling Designs in {srvyr}",
    "section": "Syntax for common designs",
    "text": "Syntax for common designs\nLoad in the example data from {survey} package:\ndata(api, package=\"survey\")\n\nSimple Random Sample (SRS)\napisrs %&gt;% as_survey_design(fpc = fpc)\n\n\nStratified SRS\napistrat %&gt;% as_survey_design(strata = stype, weights = pw)\n\n\nOne-stage cluster sample with a FPC variable\napiclus1 %&gt;% as_survey_design(ids = dnum, weights = pw, fpc = fpc)\n\n\nTwo-stage cluster sample, weights computed from population size\napiclus2 %&gt;% as_survey_design(ids = c(dnum, snum), fpc = c(fpc1, fpc2))\n\n\nStratified, cluster design\napistrat %&gt;% as_survey_design(ids = dnum, strata = stype, weights =pw, nest = TRUE)\n\n\n\nExamples from srvyr help documentation"
  },
  {
    "objectID": "05-design/slides-05-design.html#example-anes-2020",
    "href": "05-design/slides-05-design.html#example-anes-2020",
    "title": "Sampling Designs in {srvyr}",
    "section": "Example: ANES 2020",
    "text": "Example: ANES 2020\n\nUser Guide and Codebook1 : Section “Data Analysis, Weights, and Variance Estimation” includes information on weights and strata/cluster variables\n\n\nFor analysis of the complete set of cases using pre-election data only, including all cases and representative of the 2020 electorate, use the full sample pre-election weight, V200010a. For analysis including post-election data for the complete set of participants (i.e., analysis of post-election data only or a combination of pre- and post-election data), use the full sample post-election weight, V200010b. Additional weights are provided for analysis of subsets of the data, as follows.\n\n\n\n\nFor weight\nUse variance unit/PSU/cluster\nand use variance stratum\n\n\n\n\nV200010a\nV200010c\nV200010d\n\n\nV200010b\nV200010c\nV200010d\n\n\n\nhttps://electionstudies.org/data-center/2020-time-series-study/"
  },
  {
    "objectID": "05-design/slides-05-design.html#example-anes-2020-syntax",
    "href": "05-design/slides-05-design.html#example-anes-2020-syntax",
    "title": "Sampling Designs in {srvyr}",
    "section": "Example: ANES 2020 Syntax",
    "text": "Example: ANES 2020 Syntax\n\nanes &lt;- anes_2020 %&gt;%\n1  mutate(Weight = V200010b / sum(V200010b) * 231592693)\n\nanes_des &lt;- anes %&gt;%\n  as_survey_design(\n2    weights = Weight,\n3    strata = V200010d,\n4    ids = V200010c,\n    nest = TRUE\n5  )\n\n\n1\n\nAdjust the weight of the ANES data to reflect the national population\n\n2\n\nSpecify the weight variable\n\n3\n\nSpecify the strata variable per documentation\n\n4\n\nSpecify the cluster variable per documentation\n\n5\n\nIndicate that the clusters are nested within strata"
  },
  {
    "objectID": "05-design/slides-05-design.html#example-anes-2020-design",
    "href": "05-design/slides-05-design.html#example-anes-2020-design",
    "title": "Sampling Designs in {srvyr}",
    "section": "Example: ANES 2020 Design",
    "text": "Example: ANES 2020 Design\n\nsummary(anes_des)\n\nStratified 1 - level Cluster Sampling design (with replacement)\nWith (101) clusters.\nCalled via srvyr\nProbabilities:\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n4.839e-06 2.657e-05 4.689e-05 7.688e-05 8.331e-05 3.895e-03 \nStratum Sizes: \n             1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16\nobs        167 148 158 151 147 172 163 159 160 159 137 179 148 160 159 148\ndesign.PSU   3   2   2   2   2   2   2   2   2   2   2   2   2   2   2   2\nactual.PSU   3   2   2   2   2   2   2   2   2   2   2   2   2   2   2   2\n            17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32\nobs        158 156 154 144 170 146 165 147 169 165 172 133 157 167 154 143\ndesign.PSU   2   2   2   2   2   2   2   2   2   2   2   2   2   2   2   2\nactual.PSU   2   2   2   2   2   2   2   2   2   2   2   2   2   2   2   2\n            33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48\nobs        143 124 138 130 136 145 140 125 158 146 130 126 126 135 133 140\ndesign.PSU   2   2   2   2   2   2   2   2   2   2   2   2   2   2   2   2\nactual.PSU   2   2   2   2   2   2   2   2   2   2   2   2   2   2   2   2\n            49  50\nobs        133 130\ndesign.PSU   2   2\nactual.PSU   2   2\nData variables:\n [1] \"V200001\"                 \"CaseID\"                 \n [3] \"V200002\"                 \"InterviewMode\"          \n [5] \"V200010b\"                \"Weight\"                 \n [7] \"V200010c\"                \"VarUnit\"                \n [9] \"V200010d\"                \"Stratum\"                \n[11] \"V201006\"                 \"CampaignInterest\"       \n[13] \"V201023\"                 \"EarlyVote2020\"          \n[15] \"V201024\"                 \"V201025x\"               \n[17] \"V201028\"                 \"V201029\"                \n[19] \"V201101\"                 \"V201102\"                \n[21] \"VotedPres2016\"           \"V201103\"                \n[23] \"VotedPres2016_selection\" \"V201228\"                \n[25] \"V201229\"                 \"V201230\"                \n[27] \"V201231x\"                \"PartyID\"                \n[29] \"V201233\"                 \"TrustGovernment\"        \n[31] \"V201237\"                 \"TrustPeople\"            \n[33] \"V201507x\"                \"Age\"                    \n[35] \"AgeGroup\"                \"V201510\"                \n[37] \"Education\"               \"V201546\"                \n[39] \"V201547a\"                \"V201547b\"               \n[41] \"V201547c\"                \"V201547d\"               \n[43] \"V201547e\"                \"V201547z\"               \n[45] \"V201549x\"                \"RaceEth\"                \n[47] \"V201600\"                 \"Gender\"                 \n[49] \"V201607\"                 \"V201610\"                \n[51] \"V201611\"                 \"V201613\"                \n[53] \"V201615\"                 \"V201616\"                \n[55] \"V201617x\"                \"Income\"                 \n[57] \"Income7\"                 \"V202051\"                \n[59] \"V202066\"                 \"V202072\"                \n[61] \"VotedPres2020\"           \"V202073\"                \n[63] \"V202109x\"                \"V202110x\"               \n[65] \"VotedPres2020_selection\""
  },
  {
    "objectID": "05-design/slides-05-design.html#national-health-and-nutrition-examination-survey-nhanes",
    "href": "05-design/slides-05-design.html#national-health-and-nutrition-examination-survey-nhanes",
    "title": "Sampling Designs in {srvyr}",
    "section": "National Health and Nutrition Examination Survey (NHANES)",
    "text": "National Health and Nutrition Examination Survey (NHANES)\n\nAnalysis weight: WTINT2YR\nVariance Stratum: SDMVSTRA\nVariance Primary Sampling Unit: VPSU\nLarge population\n\n\nFill in the blankSolution\n\n\nnhanes_des &lt;- nhanes %&gt;%\n   as_survey_design(\n      weights = ___________,\n      ids = ___________, \n      strata = ___________, \n      fpc = ___________, \n   )\n\n\nnhanes_des &lt;- nhanes %&gt;%\n   as_survey_design(\n      weights = WTINT2YR,\n      ids = VPSU,\n      strata = SDMVSTRA,\n      fpc = NULL\n   )"
  },
  {
    "objectID": "05-design/slides-05-design.html#replicate-weights-overview",
    "href": "05-design/slides-05-design.html#replicate-weights-overview",
    "title": "Sampling Designs in {srvyr}",
    "section": "Replicate weights overview",
    "text": "Replicate weights overview\nReplicate weights are another method to estimate variability. In general, they are constructed by:\n\nDivide the sample into subsample replicates that mirror the design of the sample\nCalculate weights for each replicate using the same procedures for the full-sample weight (i.e., nonresponse and post-stratification)\nCalculate estimates for each replicate using the same method as the full-sample estimate\nCalculate the estimated variance, which is proportional to the variance of the replicate estimates"
  },
  {
    "objectID": "05-design/slides-05-design.html#common-replicate-weight-methods",
    "href": "05-design/slides-05-design.html#common-replicate-weight-methods",
    "title": "Sampling Designs in {srvyr}",
    "section": "Common replicate weight methods",
    "text": "Common replicate weight methods\n\nBalanced repeated replication (BRR)\nFay’s BRR\nJackknife\nBootstrap"
  },
  {
    "objectID": "05-design/slides-05-design.html#as_survey_rep-syntax",
    "href": "05-design/slides-05-design.html#as_survey_rep-syntax",
    "title": "Sampling Designs in {srvyr}",
    "section": "as_survey_rep(): Syntax",
    "text": "as_survey_rep(): Syntax\n\nas_survey_rep() creates a tbl_svy object that then correctly calculates weighted estimates and SEs\n\n\nas_survey_rep(\n  .data,\n  variables = NULL, # defaults to all in .data\n  repweights = NULL, # Variables specifying the replication weights\n  weights = NULL, # Variable specifying the analytic/main weight\n  type = c(\n    \"BRR\", \"Fay\", \"JK1\", \"JKn\", \"bootstrap\",\n    \"successive-difference\", \"ACS\", \"other\"\n  ), # Type of replication weight\n  combined_weights = TRUE, # TRUE if repweights already include sampling weights, usually TRUE\n  rho = NULL, # Shrinkage factor for Fay's method\n  bootstrap_average = NULL, # For type=\"bootstrap\", if the bootstrap weights have been averaged, gives the number of iterations averaged over\n  scale = NULL, # Scaling constant for variance\n  rscales = NULL, # Scaling constants for variance\n  mse = getOption(\"survey.replicates.mse\"), # If TRUE, compute variance based around point estimates rather than mean of replicates\n  degf = NULL, # Design degrees of freedom, otherwise calculated based on number of replicate weights\n)"
  },
  {
    "objectID": "05-design/slides-05-design.html#syntax-for-common-replicate-methods",
    "href": "05-design/slides-05-design.html#syntax-for-common-replicate-methods",
    "title": "Sampling Designs in {srvyr}",
    "section": "Syntax for common replicate methods",
    "text": "Syntax for common replicate methods\n\nbrr_des &lt;- dat %&gt;%\n  as_survey_rep(\n    weights = WT,\n    repweights = starts_with(\"REPWT\"),\n    type = \"BRR\",\n    mse = TRUE\n  )\n\nfay_des &lt;- dat %&gt;%\n  as_survey_rep(\n    weights = WT0,\n    repweights = num_range(\"WT\", 1:20),\n    type = \"Fay\",\n    mse = TRUE,\n    rho = 0.3\n  )\n\njkn_des &lt;- dat %&gt;%\n  as_survey_rep(\n    weights = WT0,\n    repweights = WT1:WT20,\n    type = \"JKN\",\n    mse = TRUE,\n    rscales = rep(0.1, 20)\n  )\n\nbs_des &lt;- dat %&gt;%\n  as_survey_rep(\n    weights = pw,\n    repweights = pw1:pw50,\n    type = \"bootstrap\",\n    scale = 0.02186589,\n    mse = TRUE\n  )\n\n\nNote: this uses fake data and can’t be run, just syntax examples"
  },
  {
    "objectID": "05-design/slides-05-design.html#example-recs-2020",
    "href": "05-design/slides-05-design.html#example-recs-2020",
    "title": "Sampling Designs in {srvyr}",
    "section": "Example: RECS 2020",
    "text": "Example: RECS 2020\n\nUsing the microdata file to compute estimates and relative standard errors1\n\n\nThe following instructions are examples for calculating any RECS estimate using the final weights (NWEIGHT) and the associated RSE using the replicate weights (NWEIGHT1 – NWEIGHT60).\n\n\nIncludes R syntax for {survey} package which gets us what we need for {srvyr}\n\n\nrepweights &lt;- select(RECS2020, NWEIGHT1:NWEIGHT60)\nRECS &lt;- svrepdesign(\n  data = RECS2020,\n  weight = ~NWEIGHT,\n  repweights = repweights,\n  type = \"JK1\",\n  combined.weights = TRUE,\n  scale = (ncol(repweights) - 1) / ncol(repweights),\n  mse = TRUE\n)\n\nhttps://www.eia.gov/consumption/residential/data/2020/pdf/microdata-guide.pdf"
  },
  {
    "objectID": "05-design/slides-05-design.html#example-recs-2020-syntax",
    "href": "05-design/slides-05-design.html#example-recs-2020-syntax",
    "title": "Sampling Designs in {srvyr}",
    "section": "Example: RECS 2020 Syntax",
    "text": "Example: RECS 2020 Syntax\n\nrecs_des &lt;- recs_2020 %&gt;%\n  as_survey_rep(\n1    weight = NWEIGHT,\n2    repweights = NWEIGHT1:NWEIGHT60,\n3    type = \"JK1\",\n4    scale = 59 / 60,\n5    mse = TRUE\n  )\n\n\n1\n\nSpecify the weight variable\n\n2\n\nSpecify the replicate weight variables\n\n3\n\nSpecify the replicate type per documentation\n\n4\n\nSpecify the scale\n\n5\n\nSpecify using MSE for variance estimation"
  },
  {
    "objectID": "05-design/slides-05-design.html#example-recs-2020-output",
    "href": "05-design/slides-05-design.html#example-recs-2020-output",
    "title": "Sampling Designs in {srvyr}",
    "section": "Example: RECS 2020 Output",
    "text": "Example: RECS 2020 Output\n\nsummary(recs_des)\n\nCall: Called via srvyr\nUnstratified cluster jacknife (JK1) with 60 replicates and MSE variances.\nSampling variables:\n  - repweights: `NWEIGHT1 + NWEIGHT2 + NWEIGHT3 + NWEIGHT4 + NWEIGHT5 +\n    NWEIGHT6 + NWEIGHT7 + NWEIGHT8 + NWEIGHT9 + NWEIGHT10 + NWEIGHT11 +\n    NWEIGHT12 + NWEIGHT13 + NWEIGHT14 + NWEIGHT15 + NWEIGHT16 + NWEIGHT17 +\n    NWEIGHT18 + NWEIGHT19 + NWEIGHT20 + NWEIGHT21 + NWEIGHT22 + NWEIGHT23 +\n    NWEIGHT24 + NWEIGHT25 + NWEIGHT26 + NWEIGHT27 + NWEIGHT28 + NWEIGHT29 +\n    NWEIGHT30 + NWEIGHT31 + NWEIGHT32 + NWEIGHT33 + NWEIGHT34 + NWEIGHT35 +\n    NWEIGHT36 + NWEIGHT37 + NWEIGHT38 + NWEIGHT39 + NWEIGHT40 + NWEIGHT41 +\n    NWEIGHT42 + NWEIGHT43 + NWEIGHT44 + NWEIGHT45 + NWEIGHT46 + NWEIGHT47 +\n    NWEIGHT48 + NWEIGHT49 + NWEIGHT50 + NWEIGHT51 + NWEIGHT52 + NWEIGHT53 +\n    NWEIGHT54 + NWEIGHT55 + NWEIGHT56 + NWEIGHT57 + NWEIGHT58 + NWEIGHT59 +\n    NWEIGHT60` \n  - weights: NWEIGHT \nData variables: \n  - DOEID (dbl), ClimateRegion_BA (fct), Urbanicity (fct), Region (fct),\n    REGIONC (chr), Division (fct), STATE_FIPS (chr), state_postal (fct),\n    state_name (fct), HDD65 (dbl), CDD65 (dbl), HDD30YR (dbl), CDD30YR\n    (dbl), HousingUnitType (fct), YearMade (ord), TOTSQFT_EN (dbl), TOTHSQFT\n    (dbl), TOTCSQFT (dbl), SpaceHeatingUsed (lgl), ACUsed (lgl),\n    HeatingBehavior (fct), WinterTempDay (dbl), WinterTempAway (dbl),\n    WinterTempNight (dbl), ACBehavior (fct), SummerTempDay (dbl),\n    SummerTempAway (dbl), SummerTempNight (dbl), NWEIGHT (dbl), NWEIGHT1\n    (dbl), NWEIGHT2 (dbl), NWEIGHT3 (dbl), NWEIGHT4 (dbl), NWEIGHT5 (dbl),\n    NWEIGHT6 (dbl), NWEIGHT7 (dbl), NWEIGHT8 (dbl), NWEIGHT9 (dbl),\n    NWEIGHT10 (dbl), NWEIGHT11 (dbl), NWEIGHT12 (dbl), NWEIGHT13 (dbl),\n    NWEIGHT14 (dbl), NWEIGHT15 (dbl), NWEIGHT16 (dbl), NWEIGHT17 (dbl),\n    NWEIGHT18 (dbl), NWEIGHT19 (dbl), NWEIGHT20 (dbl), NWEIGHT21 (dbl),\n    NWEIGHT22 (dbl), NWEIGHT23 (dbl), NWEIGHT24 (dbl), NWEIGHT25 (dbl),\n    NWEIGHT26 (dbl), NWEIGHT27 (dbl), NWEIGHT28 (dbl), NWEIGHT29 (dbl),\n    NWEIGHT30 (dbl), NWEIGHT31 (dbl), NWEIGHT32 (dbl), NWEIGHT33 (dbl),\n    NWEIGHT34 (dbl), NWEIGHT35 (dbl), NWEIGHT36 (dbl), NWEIGHT37 (dbl),\n    NWEIGHT38 (dbl), NWEIGHT39 (dbl), NWEIGHT40 (dbl), NWEIGHT41 (dbl),\n    NWEIGHT42 (dbl), NWEIGHT43 (dbl), NWEIGHT44 (dbl), NWEIGHT45 (dbl),\n    NWEIGHT46 (dbl), NWEIGHT47 (dbl), NWEIGHT48 (dbl), NWEIGHT49 (dbl),\n    NWEIGHT50 (dbl), NWEIGHT51 (dbl), NWEIGHT52 (dbl), NWEIGHT53 (dbl),\n    NWEIGHT54 (dbl), NWEIGHT55 (dbl), NWEIGHT56 (dbl), NWEIGHT57 (dbl),\n    NWEIGHT58 (dbl), NWEIGHT59 (dbl), NWEIGHT60 (dbl), BTUEL (dbl), DOLLAREL\n    (dbl), BTUNG (dbl), DOLLARNG (dbl), BTULP (dbl), DOLLARLP (dbl), BTUFO\n    (dbl), DOLLARFO (dbl), BTUWOOD (dbl), TOTALBTU (dbl), TOTALDOL (dbl)\nVariables: \n  [1] \"DOEID\"            \"ClimateRegion_BA\" \"Urbanicity\"      \n  [4] \"Region\"           \"REGIONC\"          \"Division\"        \n  [7] \"STATE_FIPS\"       \"state_postal\"     \"state_name\"      \n [10] \"HDD65\"            \"CDD65\"            \"HDD30YR\"         \n [13] \"CDD30YR\"          \"HousingUnitType\"  \"YearMade\"        \n [16] \"TOTSQFT_EN\"       \"TOTHSQFT\"         \"TOTCSQFT\"        \n [19] \"SpaceHeatingUsed\" \"ACUsed\"           \"HeatingBehavior\" \n [22] \"WinterTempDay\"    \"WinterTempAway\"   \"WinterTempNight\" \n [25] \"ACBehavior\"       \"SummerTempDay\"    \"SummerTempAway\"  \n [28] \"SummerTempNight\"  \"NWEIGHT\"          \"NWEIGHT1\"        \n [31] \"NWEIGHT2\"         \"NWEIGHT3\"         \"NWEIGHT4\"        \n [34] \"NWEIGHT5\"         \"NWEIGHT6\"         \"NWEIGHT7\"        \n [37] \"NWEIGHT8\"         \"NWEIGHT9\"         \"NWEIGHT10\"       \n [40] \"NWEIGHT11\"        \"NWEIGHT12\"        \"NWEIGHT13\"       \n [43] \"NWEIGHT14\"        \"NWEIGHT15\"        \"NWEIGHT16\"       \n [46] \"NWEIGHT17\"        \"NWEIGHT18\"        \"NWEIGHT19\"       \n [49] \"NWEIGHT20\"        \"NWEIGHT21\"        \"NWEIGHT22\"       \n [52] \"NWEIGHT23\"        \"NWEIGHT24\"        \"NWEIGHT25\"       \n [55] \"NWEIGHT26\"        \"NWEIGHT27\"        \"NWEIGHT28\"       \n [58] \"NWEIGHT29\"        \"NWEIGHT30\"        \"NWEIGHT31\"       \n [61] \"NWEIGHT32\"        \"NWEIGHT33\"        \"NWEIGHT34\"       \n [64] \"NWEIGHT35\"        \"NWEIGHT36\"        \"NWEIGHT37\"       \n [67] \"NWEIGHT38\"        \"NWEIGHT39\"        \"NWEIGHT40\"       \n [70] \"NWEIGHT41\"        \"NWEIGHT42\"        \"NWEIGHT43\"       \n [73] \"NWEIGHT44\"        \"NWEIGHT45\"        \"NWEIGHT46\"       \n [76] \"NWEIGHT47\"        \"NWEIGHT48\"        \"NWEIGHT49\"       \n [79] \"NWEIGHT50\"        \"NWEIGHT51\"        \"NWEIGHT52\"       \n [82] \"NWEIGHT53\"        \"NWEIGHT54\"        \"NWEIGHT55\"       \n [85] \"NWEIGHT56\"        \"NWEIGHT57\"        \"NWEIGHT58\"       \n [88] \"NWEIGHT59\"        \"NWEIGHT60\"        \"BTUEL\"           \n [91] \"DOLLAREL\"         \"BTUNG\"            \"DOLLARNG\"        \n [94] \"BTULP\"            \"DOLLARLP\"         \"BTUFO\"           \n [97] \"DOLLARFO\"         \"BTUWOOD\"          \"TOTALBTU\"        \n[100] \"TOTALDOL\""
  },
  {
    "objectID": "05-design/slides-05-design.html#american-community-survey-acs",
    "href": "05-design/slides-05-design.html#american-community-survey-acs",
    "title": "Sampling Designs in {srvyr}",
    "section": "American Community Survey (ACS)",
    "text": "American Community Survey (ACS)\n\nAnalysis weight: PWGTP\nreplicate weights: PWGTP1-PWGTP180\njackknife with scale adjustment of 4/80\n\n\nFill in the blankSolution\n\n\nacs_des &lt;- acs_pums %&gt;%\n   as_survey_rep(\n      weights = ___________,\n      repweights = ___________,\n      type = ___________,\n      scale = _________ \n   )\n\n\nacs_des &lt;- acs_pums %&gt;%\n   as_survey_rep(\n      weights = PWGTP,\n      repweights = num_range(\"PWGTP\", 1:80),\n      type = \"JK1\",\n      scale = 4/80\n   )"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#welcome-to-the-towny-data",
    "href": "02-getting-started/slides-02-getting-started.html#welcome-to-the-towny-data",
    "title": "Getting Started",
    "section": "Welcome to the Towny Data",
    "text": "Welcome to the Towny Data\n\nWe’ll be using the towny data for warm-up exercises\nAvailable in the {gt} package"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#welcome-to-the-towny-data-1",
    "href": "02-getting-started/slides-02-getting-started.html#welcome-to-the-towny-data-1",
    "title": "Getting Started",
    "section": "Welcome to the Towny Data",
    "text": "Welcome to the Towny Data\n\nlibrary(tidyverse)\nlibrary(gt)\nglimpse(towny)\n\nRows: 414\nColumns: 25\n$ name                     &lt;chr&gt; \"Addington Highlands\", \"Adelaide Metcalfe\"…\n$ website                  &lt;chr&gt; \"https://addingtonhighlands.ca\", \"https://…\n$ status                   &lt;chr&gt; \"lower-tier\", \"lower-tier\", \"lower-tier\", …\n$ csd_type                 &lt;chr&gt; \"township\", \"township\", \"township\", \"towns…\n$ census_div               &lt;chr&gt; \"Lennox and Addington\", \"Middlesex\", \"Simc…\n$ latitude                 &lt;dbl&gt; 45.00000, 42.95000, 44.13333, 45.52917, 43…\n$ longitude                &lt;dbl&gt; -77.25000, -81.70000, -79.93333, -76.89694…\n$ land_area_km2            &lt;dbl&gt; 1293.99, 331.11, 371.53, 519.59, 66.64, 11…\n$ population_1996          &lt;int&gt; 2429, 3128, 9359, 2837, 64430, 1027, 8315,…\n$ population_2001          &lt;int&gt; 2402, 3149, 10082, 2824, 73753, 956, 8593,…\n$ population_2006          &lt;int&gt; 2512, 3135, 10695, 2716, 90167, 958, 8654,…\n$ population_2011          &lt;int&gt; 2517, 3028, 10603, 2844, 109600, 864, 9196…\n$ population_2016          &lt;int&gt; 2318, 2990, 10975, 2935, 119677, 969, 9680…\n$ population_2021          &lt;int&gt; 2534, 3011, 10989, 2995, 126666, 954, 9949…\n$ density_1996             &lt;dbl&gt; 1.88, 9.45, 25.19, 5.46, 966.84, 8.81, 21.…\n$ density_2001             &lt;dbl&gt; 1.86, 9.51, 27.14, 5.44, 1106.74, 8.20, 21…\n$ density_2006             &lt;dbl&gt; 1.94, 9.47, 28.79, 5.23, 1353.05, 8.22, 22…\n$ density_2011             &lt;dbl&gt; 1.95, 9.14, 28.54, 5.47, 1644.66, 7.41, 23…\n$ density_2016             &lt;dbl&gt; 1.79, 9.03, 29.54, 5.65, 1795.87, 8.31, 24…\n$ density_2021             &lt;dbl&gt; 1.96, 9.09, 29.58, 5.76, 1900.75, 8.18, 25…\n$ pop_change_1996_2001_pct &lt;dbl&gt; -0.0111, 0.0067, 0.0773, -0.0046, 0.1447, …\n$ pop_change_2001_2006_pct &lt;dbl&gt; 0.0458, -0.0044, 0.0608, -0.0382, 0.2226, …\n$ pop_change_2006_2011_pct &lt;dbl&gt; 0.0020, -0.0341, -0.0086, 0.0471, 0.2155, …\n$ pop_change_2011_2016_pct &lt;dbl&gt; -0.0791, -0.0125, 0.0351, 0.0320, 0.0919, …\n$ pop_change_2016_2021_pct &lt;dbl&gt; 0.0932, 0.0070, 0.0013, 0.0204, 0.0584, -0…"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#posit-cloud",
    "href": "02-getting-started/slides-02-getting-started.html#posit-cloud",
    "title": "Getting Started",
    "section": "Posit Cloud",
    "text": "Posit Cloud\n\nWe will be using Posit Cloud for exercises\nPosit Cloud has the same features and appearance as RStudio for ease of use\nAccess the project and files Posit Cloud\nNavigate to “Complex Survey Analysis in R” under Projects then click name to get started"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#r-packages-for-survey-analysis",
    "href": "02-getting-started/slides-02-getting-started.html#r-packages-for-survey-analysis",
    "title": "Getting Started",
    "section": "R Packages for Survey Analysis",
    "text": "R Packages for Survey Analysis\n\n{survey} package first on CRAN in 2003\n\ndescriptive analysis\nstatistical testing\nmodeling\nweighting\n\n{srvyr} package first on CRAN in 2016\n\n“wrapper” for {survey} with {tidyverse}-style syntax\nonly descriptive analysis"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#install-packages",
    "href": "02-getting-started/slides-02-getting-started.html#install-packages",
    "title": "Getting Started",
    "section": "Install Packages",
    "text": "Install Packages\nInstall packages for data wrangling and survey analysis:\ninstall.packages(c(\"tidyverse\", \"survey\", \"srvyr\"))\n\nInstall {srvyrexploR} to access the survey data for today’s workshop:\ninstall.packages(\"pak\")\npak::pak(\"tidy-survey-r/srvyrexploR\")\n\n\nLoad the packages:\n\nlibrary(tidyverse)\nlibrary(survey)\nlibrary(srvyr)\nlibrary(srvyrexploR)\n\n\n\n\nNote: Installation of packages is already done for you on Posit Cloud"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#todays-data",
    "href": "02-getting-started/slides-02-getting-started.html#todays-data",
    "title": "Getting Started",
    "section": "Today’s Data",
    "text": "Today’s Data\nAmerican National Election Studies (ANES – DeBell 2010)\n\nStored as anes_2020 in {srvyrexploR}\n\nResidential Energy Consumption Survey (RECS – U.S. Energy Information Administration 2023b)\n\nStored as recs_2020 in {srvyrexploR}"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#american-national-election-studies-anes-2020",
    "href": "02-getting-started/slides-02-getting-started.html#american-national-election-studies-anes-2020",
    "title": "Getting Started",
    "section": "American National Election Studies (ANES) 2020",
    "text": "American National Election Studies (ANES) 2020\n\nPre- and post-election surveys fielded almost every 2 years since 1948\nTopics include voter registration status, candidate preference, opinions on country and government, party and ideology affiliation, opinions on policy, news sources, and more\nCollaboration of Stanford, University of Michigan - funding by the National Science Foundation\nTarget Population: US citizens, 18 and older living in US\nMode: Web, videoconference, or telephone\nSample Information: Pseudo-strata and pseudo-cluster included for variance estimation\n\nhttps://electionstudies.org/"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#american-national-election-studies-anes-2020-1",
    "href": "02-getting-started/slides-02-getting-started.html#american-national-election-studies-anes-2020-1",
    "title": "Getting Started",
    "section": "American National Election Studies (ANES) 2020",
    "text": "American National Election Studies (ANES) 2020\n\nanes_2020 %&gt;%\n  select(-matches(\"^V\\\\d\")) %&gt;%\n  glimpse()\n\nRows: 7,453\nColumns: 21\n$ CaseID                  &lt;dbl&gt; 200015, 200022, 200039, 200046, 200053, 200…\n$ InterviewMode           &lt;fct&gt; Web, Web, Web, Web, Web, Web, Web, Web, Web…\n$ Weight                  &lt;dbl&gt; 1.0057375, 1.1634731, 0.7686811, 0.5210195,…\n$ VarUnit                 &lt;fct&gt; 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2…\n$ Stratum                 &lt;fct&gt; 9, 26, 41, 29, 23, 37, 7, 37, 32, 41, 22, 7…\n$ CampaignInterest        &lt;fct&gt; Somewhat interested, Not much interested, S…\n$ EarlyVote2020           &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA, NA, Yes, NA, NA…\n$ VotedPres2016           &lt;fct&gt; Yes, Yes, Yes, Yes, Yes, No, Yes, No, Yes, …\n$ VotedPres2016_selection &lt;fct&gt; Trump, Other, Clinton, Clinton, Trump, NA, …\n$ PartyID                 &lt;fct&gt; Strong republican, Independent, Independent…\n$ TrustGovernment         &lt;fct&gt; Never, Never, Some of the time, About half …\n$ TrustPeople             &lt;fct&gt; About half the time, Some of the time, Some…\n$ Age                     &lt;dbl&gt; 46, 37, 40, 41, 72, 71, 37, 45, 70, 43, 37,…\n$ AgeGroup                &lt;fct&gt; 40-49, 30-39, 40-49, 40-49, 70 or older, 70…\n$ Education               &lt;fct&gt; Bachelor's, Post HS, High school, Post HS, …\n$ RaceEth                 &lt;fct&gt; \"Hispanic\", \"Asian, NH/PI\", \"White\", \"Asian…\n$ Gender                  &lt;fct&gt; Male, Female, Female, Male, Male, Female, F…\n$ Income                  &lt;fct&gt; \"$175,000-249,999\", \"$70,000-74,999\", \"$100…\n$ Income7                 &lt;fct&gt; $125k or more, $60k to &lt; 80k, $100k to &lt; 12…\n$ VotedPres2020           &lt;fct&gt; NA, Yes, Yes, Yes, Yes, Yes, Yes, NA, Yes, …\n$ VotedPres2020_selection &lt;fct&gt; NA, Other, Biden, Biden, Trump, Biden, Trum…"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#residential-energy-consumption-survey-recs-2020",
    "href": "02-getting-started/slides-02-getting-started.html#residential-energy-consumption-survey-recs-2020",
    "title": "Getting Started",
    "section": "Residential Energy Consumption Survey (RECS) 2020",
    "text": "Residential Energy Consumption Survey (RECS) 2020\n\nFielded 14 times between 1950 and 2020\nTopics include appliances, electronics, heating, a/c, temperatures, water heating, lighting, energy bills, respondent demographics, and energy assistance\nEnergy consumption/expenditures collected through energy suppliers\nFunded by the Energy Information Administration\nTarget Population: Primary occupied housing units in the US\nMode: In-person, phone, paper, and web interview mode\nSample Information: Jackknife Replicate weights included for variance estimation\n\nhttps://www.eia.gov/consumption/residential/index.php"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#residential-energy-consumption-survey-recs-2020-1",
    "href": "02-getting-started/slides-02-getting-started.html#residential-energy-consumption-survey-recs-2020-1",
    "title": "Getting Started",
    "section": "Residential Energy Consumption Survey (RECS) 2020",
    "text": "Residential Energy Consumption Survey (RECS) 2020\n\nrecs_2020 %&gt;%\n  select(-matches(\"^NWEIGHT\")) %&gt;%\n  glimpse()\n\nRows: 18,496\nColumns: 39\n$ DOEID            &lt;dbl&gt; 100001, 100002, 100003, 100004, 100005, 100006, 10…\n$ ClimateRegion_BA &lt;fct&gt; Mixed-Dry, Mixed-Humid, Mixed-Dry, Mixed-Humid, Mi…\n$ Urbanicity       &lt;fct&gt; Urban Area, Urban Area, Urban Area, Urban Area, Ur…\n$ Region           &lt;fct&gt; West, South, West, South, Northeast, South, South,…\n$ REGIONC          &lt;chr&gt; \"WEST\", \"SOUTH\", \"WEST\", \"SOUTH\", \"NORTHEAST\", \"SO…\n$ Division         &lt;fct&gt; Mountain South, West South Central, Mountain South…\n$ STATE_FIPS       &lt;chr&gt; \"35\", \"05\", \"35\", \"45\", \"34\", \"48\", \"40\", \"28\", \"1…\n$ state_postal     &lt;fct&gt; NM, AR, NM, SC, NJ, TX, OK, MS, DC, AZ, CA, TX, LA…\n$ state_name       &lt;fct&gt; New Mexico, Arkansas, New Mexico, South Carolina, …\n$ HDD65            &lt;dbl&gt; 3844, 3766, 3819, 2614, 4219, 901, 3148, 1825, 423…\n$ CDD65            &lt;dbl&gt; 1679, 1458, 1696, 1718, 1363, 3558, 2128, 2374, 11…\n$ HDD30YR          &lt;dbl&gt; 4451, 4429, 4500, 3229, 4896, 1150, 3564, 2660, 44…\n$ CDD30YR          &lt;dbl&gt; 1027, 1305, 1010, 1653, 1059, 3588, 2043, 2164, 14…\n$ HousingUnitType  &lt;fct&gt; Single-family detached, Apartment: 5 or more units…\n$ YearMade         &lt;ord&gt; 1970-1979, 1980-1989, 1960-1969, 1980-1989, 1960-1…\n$ TOTSQFT_EN       &lt;dbl&gt; 2100, 590, 900, 2100, 800, 4520, 2100, 900, 750, 7…\n$ TOTHSQFT         &lt;dbl&gt; 2100, 590, 900, 2100, 800, 3010, 1200, 900, 750, 7…\n$ TOTCSQFT         &lt;dbl&gt; 2100, 590, 900, 2100, 800, 3010, 1200, 0, 500, 760…\n$ SpaceHeatingUsed &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TR…\n$ ACUsed           &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, T…\n$ HeatingBehavior  &lt;fct&gt; Set one temp and leave it, Turn on or off as neede…\n$ WinterTempDay    &lt;dbl&gt; 70, 70, 69, 68, 68, 76, 74, 70, 68, 70, 72, 74, 74…\n$ WinterTempAway   &lt;dbl&gt; 70, 65, 68, 68, 68, 76, 65, 70, 60, 70, 70, 74, 74…\n$ WinterTempNight  &lt;dbl&gt; 68, 65, 67, 68, 68, 68, 74, 68, 62, 68, 72, 74, 74…\n$ ACBehavior       &lt;fct&gt; Set one temp and leave it, Turn on or off as neede…\n$ SummerTempDay    &lt;dbl&gt; 71, 68, 70, 72, 72, 69, 68, NA, 72, 74, 77, 77, 74…\n$ SummerTempAway   &lt;dbl&gt; 71, 68, 68, 72, 72, 74, 70, NA, 76, 74, 77, 77, 74…\n$ SummerTempNight  &lt;dbl&gt; 71, 68, 68, 72, 72, 68, 70, NA, 68, 72, 77, 77, 74…\n$ BTUEL            &lt;dbl&gt; 42723.28, 17889.29, 8146.63, 31646.53, 20027.42, 4…\n$ DOLLAREL         &lt;dbl&gt; 1955.06, 713.27, 334.51, 1424.86, 1087.00, 1895.66…\n$ BTUNG            &lt;dbl&gt; 101924.43, 10145.32, 22603.08, 55118.66, 39099.51,…\n$ DOLLARNG         &lt;dbl&gt; 701.8300, 261.7348, 188.1400, 636.9100, 376.0400, …\n$ BTULP            &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.…\n$ DOLLARLP         &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.…\n$ BTUFO            &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.…\n$ DOLLARFO         &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.…\n$ BTUWOOD          &lt;dbl&gt; 0, 0, 0, 0, 0, 3000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ TOTALBTU         &lt;dbl&gt; 144647.71, 28034.61, 30749.71, 86765.19, 59126.93,…\n$ TOTALDOL         &lt;dbl&gt; 2656.8900, 975.0048, 522.6500, 2061.7700, 1463.040…"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#design-objects-1",
    "href": "02-getting-started/slides-02-getting-started.html#design-objects-1",
    "title": "Getting Started",
    "section": "Design Objects",
    "text": "Design Objects\n\nBackbone for survey analysis\nSpecify the sampling design, weights, and other necessary information to account for errors in the data\nSurvey analysis and inference should be performed with the survey design objects, not the original survey data\nWe will be covering survey design in more detail later in the workshop!"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#american-national-election-studies-design-object",
    "href": "02-getting-started/slides-02-getting-started.html#american-national-election-studies-design-object",
    "title": "Getting Started",
    "section": "American National Election Studies Design Object",
    "text": "American National Election Studies Design Object\n\nanes_des &lt;- anes_2020 %&gt;%\n  mutate(Weight = V200010b / sum(V200010b) * 231034125) %&gt;%\n  as_survey_design(\n    weights = Weight,\n    strata = V200010d,\n    ids = V200010c,\n    nest = TRUE\n  )"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#american-national-election-studies-design-object-1",
    "href": "02-getting-started/slides-02-getting-started.html#american-national-election-studies-design-object-1",
    "title": "Getting Started",
    "section": "American National Election Studies Design Object",
    "text": "American National Election Studies Design Object\n\nanes_des\n\nStratified 1 - level Cluster Sampling design (with replacement)\nWith (101) clusters.\nCalled via srvyr\nSampling variables:\n  - ids: V200010c \n  - strata: V200010d \n  - weights: Weight \nData variables: \n  - V200001 (dbl), CaseID (dbl), V200002 (hvn_lbll), InterviewMode (fct),\n    V200010b (dbl), Weight (dbl), V200010c (dbl), VarUnit (fct), V200010d\n    (dbl), Stratum (fct), V201006 (hvn_lbll), CampaignInterest (fct),\n    V201023 (hvn_lbll), EarlyVote2020 (fct), V201024 (hvn_lbll), V201025x\n    (hvn_lbll), V201028 (hvn_lbll), V201029 (hvn_lbll), V201101 (hvn_lbll),\n    V201102 (hvn_lbll), VotedPres2016 (fct), V201103 (hvn_lbll),\n    VotedPres2016_selection (fct), V201228 (hvn_lbll), V201229 (hvn_lbll),\n    V201230 (hvn_lbll), V201231x (hvn_lbll), PartyID (fct), V201233\n    (hvn_lbll), TrustGovernment (fct), V201237 (hvn_lbll), TrustPeople\n    (fct), V201507x (hvn_lbll), Age (dbl), AgeGroup (fct), V201510\n    (hvn_lbll), Education (fct), V201546 (hvn_lbll), V201547a (hvn_lbll),\n    V201547b (hvn_lbll), V201547c (hvn_lbll), V201547d (hvn_lbll), V201547e\n    (hvn_lbll), V201547z (hvn_lbll), V201549x (hvn_lbll), RaceEth (fct),\n    V201600 (hvn_lbll), Gender (fct), V201607 (hvn_lbll), V201610\n    (hvn_lbll), V201611 (hvn_lbll), V201613 (hvn_lbll), V201615 (hvn_lbll),\n    V201616 (hvn_lbll), V201617x (hvn_lbll), Income (fct), Income7 (fct),\n    V202051 (hvn_lbll), V202066 (hvn_lbll), V202072 (hvn_lbll),\n    VotedPres2020 (fct), V202073 (hvn_lbll), V202109x (hvn_lbll), V202110x\n    (hvn_lbll), VotedPres2020_selection (fct)"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#residential-energy-consumption-survey-design-object",
    "href": "02-getting-started/slides-02-getting-started.html#residential-energy-consumption-survey-design-object",
    "title": "Getting Started",
    "section": "Residential Energy Consumption Survey Design Object",
    "text": "Residential Energy Consumption Survey Design Object\n\nrecs_des &lt;- recs_2020 %&gt;%\n  as_survey_rep(\n    weights = NWEIGHT,\n    repweights = NWEIGHT1:NWEIGHT60,\n    type = \"JK1\",\n    scale = 59 / 60,\n    mse = TRUE\n  )"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#residential-energy-consumption-survey-design-object-1",
    "href": "02-getting-started/slides-02-getting-started.html#residential-energy-consumption-survey-design-object-1",
    "title": "Getting Started",
    "section": "Residential Energy Consumption Survey Design Object",
    "text": "Residential Energy Consumption Survey Design Object\n\nrecs_des\n\nCall: Called via srvyr\nUnstratified cluster jacknife (JK1) with 60 replicates and MSE variances.\nSampling variables:\n  - repweights: `NWEIGHT1 + NWEIGHT2 + NWEIGHT3 + NWEIGHT4 + NWEIGHT5 +\n    NWEIGHT6 + NWEIGHT7 + NWEIGHT8 + NWEIGHT9 + NWEIGHT10 + NWEIGHT11 +\n    NWEIGHT12 + NWEIGHT13 + NWEIGHT14 + NWEIGHT15 + NWEIGHT16 + NWEIGHT17 +\n    NWEIGHT18 + NWEIGHT19 + NWEIGHT20 + NWEIGHT21 + NWEIGHT22 + NWEIGHT23 +\n    NWEIGHT24 + NWEIGHT25 + NWEIGHT26 + NWEIGHT27 + NWEIGHT28 + NWEIGHT29 +\n    NWEIGHT30 + NWEIGHT31 + NWEIGHT32 + NWEIGHT33 + NWEIGHT34 + NWEIGHT35 +\n    NWEIGHT36 + NWEIGHT37 + NWEIGHT38 + NWEIGHT39 + NWEIGHT40 + NWEIGHT41 +\n    NWEIGHT42 + NWEIGHT43 + NWEIGHT44 + NWEIGHT45 + NWEIGHT46 + NWEIGHT47 +\n    NWEIGHT48 + NWEIGHT49 + NWEIGHT50 + NWEIGHT51 + NWEIGHT52 + NWEIGHT53 +\n    NWEIGHT54 + NWEIGHT55 + NWEIGHT56 + NWEIGHT57 + NWEIGHT58 + NWEIGHT59 +\n    NWEIGHT60` \n  - weights: NWEIGHT \nData variables: \n  - DOEID (dbl), ClimateRegion_BA (fct), Urbanicity (fct), Region (fct),\n    REGIONC (chr), Division (fct), STATE_FIPS (chr), state_postal (fct),\n    state_name (fct), HDD65 (dbl), CDD65 (dbl), HDD30YR (dbl), CDD30YR\n    (dbl), HousingUnitType (fct), YearMade (ord), TOTSQFT_EN (dbl), TOTHSQFT\n    (dbl), TOTCSQFT (dbl), SpaceHeatingUsed (lgl), ACUsed (lgl),\n    HeatingBehavior (fct), WinterTempDay (dbl), WinterTempAway (dbl),\n    WinterTempNight (dbl), ACBehavior (fct), SummerTempDay (dbl),\n    SummerTempAway (dbl), SummerTempNight (dbl), NWEIGHT (dbl), NWEIGHT1\n    (dbl), NWEIGHT2 (dbl), NWEIGHT3 (dbl), NWEIGHT4 (dbl), NWEIGHT5 (dbl),\n    NWEIGHT6 (dbl), NWEIGHT7 (dbl), NWEIGHT8 (dbl), NWEIGHT9 (dbl),\n    NWEIGHT10 (dbl), NWEIGHT11 (dbl), NWEIGHT12 (dbl), NWEIGHT13 (dbl),\n    NWEIGHT14 (dbl), NWEIGHT15 (dbl), NWEIGHT16 (dbl), NWEIGHT17 (dbl),\n    NWEIGHT18 (dbl), NWEIGHT19 (dbl), NWEIGHT20 (dbl), NWEIGHT21 (dbl),\n    NWEIGHT22 (dbl), NWEIGHT23 (dbl), NWEIGHT24 (dbl), NWEIGHT25 (dbl),\n    NWEIGHT26 (dbl), NWEIGHT27 (dbl), NWEIGHT28 (dbl), NWEIGHT29 (dbl),\n    NWEIGHT30 (dbl), NWEIGHT31 (dbl), NWEIGHT32 (dbl), NWEIGHT33 (dbl),\n    NWEIGHT34 (dbl), NWEIGHT35 (dbl), NWEIGHT36 (dbl), NWEIGHT37 (dbl),\n    NWEIGHT38 (dbl), NWEIGHT39 (dbl), NWEIGHT40 (dbl), NWEIGHT41 (dbl),\n    NWEIGHT42 (dbl), NWEIGHT43 (dbl), NWEIGHT44 (dbl), NWEIGHT45 (dbl),\n    NWEIGHT46 (dbl), NWEIGHT47 (dbl), NWEIGHT48 (dbl), NWEIGHT49 (dbl),\n    NWEIGHT50 (dbl), NWEIGHT51 (dbl), NWEIGHT52 (dbl), NWEIGHT53 (dbl),\n    NWEIGHT54 (dbl), NWEIGHT55 (dbl), NWEIGHT56 (dbl), NWEIGHT57 (dbl),\n    NWEIGHT58 (dbl), NWEIGHT59 (dbl), NWEIGHT60 (dbl), BTUEL (dbl), DOLLAREL\n    (dbl), BTUNG (dbl), DOLLARNG (dbl), BTULP (dbl), DOLLARLP (dbl), BTUFO\n    (dbl), DOLLARFO (dbl), BTUWOOD (dbl), TOTALBTU (dbl), TOTALDOL (dbl)"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#why-use-srvyr-over-survey",
    "href": "02-getting-started/slides-02-getting-started.html#why-use-srvyr-over-survey",
    "title": "Getting Started",
    "section": "Why use {srvyr} over {survey}?",
    "text": "Why use {srvyr} over {survey}?\n\nUse the pipe function %&gt;% or |&gt;\nAbility to use tidy selection\nFunctions follow snake_case convention"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#apply-dplyr-functions-to-survey-objects",
    "href": "02-getting-started/slides-02-getting-started.html#apply-dplyr-functions-to-survey-objects",
    "title": "Getting Started",
    "section": "Apply {dplyr} functions to survey objects",
    "text": "Apply {dplyr} functions to survey objects\n\nA few functions in {srvyr} have counterparts in {dplyr}\n\ndplyr::summarize() and srvyr::summarize()\ndplyr::group_by() and srvyr::group_by()\n\nBased on the object class, R will recognize which package to use"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#using-summarize-to-calculate-mean-and-median",
    "href": "02-getting-started/slides-02-getting-started.html#using-summarize-to-calculate-mean-and-median",
    "title": "Getting Started",
    "section": "Using summarize() to calculate mean and median",
    "text": "Using summarize() to calculate mean and median\nTibble:\n\ntowny %&gt;%\n  summarize(\n    area_mean = mean(land_area_km2)\n  )\n\n# A tibble: 1 × 1\n  area_mean\n      &lt;dbl&gt;\n1      373."
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#using-summarize-to-calculate-mean-and-median-1",
    "href": "02-getting-started/slides-02-getting-started.html#using-summarize-to-calculate-mean-and-median-1",
    "title": "Getting Started",
    "section": "Using summarize() to calculate mean and median",
    "text": "Using summarize() to calculate mean and median\nSurvey object:\n\nrecs_des %&gt;%\n  summarize(\n    TOTHSQFT_mean = survey_mean(TOTHSQFT),\n  )\n\n# A tibble: 1 × 2\n  TOTHSQFT_mean TOTHSQFT_mean_se\n          &lt;dbl&gt;            &lt;dbl&gt;\n1         1614.             7.19"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#using-tidyselect",
    "href": "02-getting-started/slides-02-getting-started.html#using-tidyselect",
    "title": "Getting Started",
    "section": "Using tidyselect",
    "text": "Using tidyselect\nTibble:\n\ntowny %&gt;%\n  summarize(across(\n    starts_with(\"population\"),\n    ~ mean(.x, na.rm = TRUE)\n  ))\n\n# A tibble: 1 × 6\n  population_1996 population_2001 population_2006 population_2011\n            &lt;dbl&gt;           &lt;dbl&gt;           &lt;dbl&gt;           &lt;dbl&gt;\n1          25866.          27538.          29173.          30838.\n# ℹ 2 more variables: population_2016 &lt;dbl&gt;, population_2021 &lt;dbl&gt;"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#using-tidyselect-1",
    "href": "02-getting-started/slides-02-getting-started.html#using-tidyselect-1",
    "title": "Getting Started",
    "section": "Using tidyselect",
    "text": "Using tidyselect\nSurvey object:\n\nrecs_des %&gt;%\n  summarize(across(\n    starts_with(\"TOT\"),\n    ~ survey_mean(.x, na.rm = TRUE)\n  ))\n\n# A tibble: 1 × 10\n  TOTSQFT_EN TOTSQFT_EN_se TOTHSQFT TOTHSQFT_se TOTCSQFT TOTCSQFT_se TOTALBTU\n       &lt;dbl&gt;         &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;\n1      1819.          6.62    1614.        7.19    1335.        6.72   76753.\n# ℹ 3 more variables: TOTALBTU_se &lt;dbl&gt;, TOTALDOL &lt;dbl&gt;, TOTALDOL_se &lt;dbl&gt;"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#using-dplyr-functions",
    "href": "02-getting-started/slides-02-getting-started.html#using-dplyr-functions",
    "title": "Getting Started",
    "section": "Using {dplyr} functions",
    "text": "Using {dplyr} functions\nTibble:\n\ntowny %&gt;%\n  filter(csd_type == \"township\") %&gt;%\n  select(csd_type, name)\n\n# A tibble: 195 × 2\n   csd_type name                  \n   &lt;chr&gt;    &lt;chr&gt;                 \n 1 township Addington Highlands   \n 2 township Adelaide Metcalfe     \n 3 township Adjala-Tosorontio     \n 4 township Admaston/Bromley      \n 5 township Alberton              \n 6 township Alfred and Plantagenet\n 7 township Algonquin Highlands   \n 8 township Alnwick/Haldimand     \n 9 township Amaranth              \n10 township The Archipelago       \n# ℹ 185 more rows"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#using-dplyr-functions-1",
    "href": "02-getting-started/slides-02-getting-started.html#using-dplyr-functions-1",
    "title": "Getting Started",
    "section": "Using {dplyr} functions",
    "text": "Using {dplyr} functions\nSurvey object:\n\nrecs_des_mod &lt;- recs_des %&gt;%\n  filter(Urbanicity == \"Rural\") %&gt;%\n  select(ACUsed)\n\nrecs_des_mod\n\nCall: Called via srvyr\nUnstratified cluster jacknife (JK1) with 60 replicates and MSE variances.\nSampling variables:\n  - repweights: `NWEIGHT1 + NWEIGHT2 + NWEIGHT3 + NWEIGHT4 + NWEIGHT5 +\n    NWEIGHT6 + NWEIGHT7 + NWEIGHT8 + NWEIGHT9 + NWEIGHT10 + NWEIGHT11 +\n    NWEIGHT12 + NWEIGHT13 + NWEIGHT14 + NWEIGHT15 + NWEIGHT16 + NWEIGHT17 +\n    NWEIGHT18 + NWEIGHT19 + NWEIGHT20 + NWEIGHT21 + NWEIGHT22 + NWEIGHT23 +\n    NWEIGHT24 + NWEIGHT25 + NWEIGHT26 + NWEIGHT27 + NWEIGHT28 + NWEIGHT29 +\n    NWEIGHT30 + NWEIGHT31 + NWEIGHT32 + NWEIGHT33 + NWEIGHT34 + NWEIGHT35 +\n    NWEIGHT36 + NWEIGHT37 + NWEIGHT38 + NWEIGHT39 + NWEIGHT40 + NWEIGHT41 +\n    NWEIGHT42 + NWEIGHT43 + NWEIGHT44 + NWEIGHT45 + NWEIGHT46 + NWEIGHT47 +\n    NWEIGHT48 + NWEIGHT49 + NWEIGHT50 + NWEIGHT51 + NWEIGHT52 + NWEIGHT53 +\n    NWEIGHT54 + NWEIGHT55 + NWEIGHT56 + NWEIGHT57 + NWEIGHT58 + NWEIGHT59 +\n    NWEIGHT60` \n  - weights: NWEIGHT \nData variables: \n  - ACUsed (lgl)"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#grouping",
    "href": "02-getting-started/slides-02-getting-started.html#grouping",
    "title": "Getting Started",
    "section": "Grouping",
    "text": "Grouping\nTibble:\n\ntowny %&gt;%\n  group_by(csd_type) %&gt;%\n  summarize(area_mean = mean(land_area_km2))\n\n# A tibble: 5 × 2\n  csd_type     area_mean\n  &lt;chr&gt;            &lt;dbl&gt;\n1 city             498. \n2 municipality     607. \n3 town             183. \n4 township         363. \n5 village           23.0"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#grouping-1",
    "href": "02-getting-started/slides-02-getting-started.html#grouping-1",
    "title": "Getting Started",
    "section": "Grouping",
    "text": "Grouping\nSurvey object:\n\nrecs_des %&gt;%\n  group_by(Urbanicity) %&gt;%\n  summarize(TOTHSQFT_mean = survey_mean(TOTHSQFT))\n\n# A tibble: 3 × 3\n  Urbanicity    TOTHSQFT_mean TOTHSQFT_mean_se\n  &lt;fct&gt;                 &lt;dbl&gt;            &lt;dbl&gt;\n1 Urban Area            1532.             9.24\n2 Urban Cluster         1537.            21.5 \n3 Rural                 1966.            17.7"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#using-srvyr-functions-on-non-survey-objects",
    "href": "02-getting-started/slides-02-getting-started.html#using-srvyr-functions-on-non-survey-objects",
    "title": "Getting Started",
    "section": "Using {srvyr} functions on non-survey objects",
    "text": "Using {srvyr} functions on non-survey objects\n\ntowny %&gt;%\n  summarize(area_mean = survey_mean(land_area_km2))\n\n\n\n\nError in `summarize()`:\nℹ In argument: `area_mean = survey_mean(land_area_km2)`.\nCaused by error in `cur_svy()`:\n! Survey context not set"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#overview-of-survey-analysis-using-srvyr-package",
    "href": "02-getting-started/slides-02-getting-started.html#overview-of-survey-analysis-using-srvyr-package",
    "title": "Getting Started",
    "section": "Overview of Survey Analysis using {srvyr} Package",
    "text": "Overview of Survey Analysis using {srvyr} Package\n\nCreate a tbl_svy object (a survey object) using: as_survey_design() or as_survey_rep()\nSubset data (if needed) using filter() (to create subpopulations)\nSpecify domains of analysis using group_by()\nWithin summarize(), specify variables to calculate, including means, totals, proportions, quantiles, and more"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#wrap-up",
    "href": "02-getting-started/slides-02-getting-started.html#wrap-up",
    "title": "Getting Started",
    "section": "Wrap Up",
    "text": "Wrap Up\n\nWe will be using {tidyverse}, {survey}, and {srvyr} for survey analysis\nOur data is from ANES and RECS"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#wrap-up-1",
    "href": "02-getting-started/slides-02-getting-started.html#wrap-up-1",
    "title": "Getting Started",
    "section": "Wrap Up",
    "text": "Wrap Up\n\n(Survey) design objects are the backbone for survey analysis\nThey are objects with special class tbl_svy\nThey specify the sampling design, weights, and other necessary information to account for errors in the data"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#wrap-up-2",
    "href": "02-getting-started/slides-02-getting-started.html#wrap-up-2",
    "title": "Getting Started",
    "section": "Wrap Up",
    "text": "Wrap Up\n\n{srvyr} wraps {survey} so that we can use friendly, “tidy” syntax\nBased on the object type, R will know whether to use {dplyr} or {srvyr}\nAll functions must be done on the survey design object, not the raw data"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#ex.-1",
    "href": "02-getting-started/slides-02-getting-started.html#ex.-1",
    "title": "Getting Started",
    "section": "Ex. 1",
    "text": "Ex. 1\nHow many different types of CSD are there in the dataset?\n\ntowny %&gt;%\n  count(csd_type)\n\n\nor\n\ntowny %&gt;%\n  group_by(csd_type) %&gt;%\n  summarize(n = n(), .groups = \"drop\")\n\n\n\n\n\n# A tibble: 5 × 2\n  csd_type         n\n  &lt;chr&gt;        &lt;int&gt;\n1 city            52\n2 municipality    68\n3 town            88\n4 township       195\n5 village         11"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#ex.-2",
    "href": "02-getting-started/slides-02-getting-started.html#ex.-2",
    "title": "Getting Started",
    "section": "Ex. 2",
    "text": "Ex. 2\nHow many different types of CSD and status are there in the dataset?\n\ntowny %&gt;%\n  count(csd_type, status)\n\n\nor\n\ntowny %&gt;%\n  group_by(csd_type, status) %&gt;%\n  summarize(n = n(), .groups = \"drop\")\n\n\n\n\n\n# A tibble: 10 × 3\n   csd_type     status          n\n   &lt;chr&gt;        &lt;chr&gt;       &lt;int&gt;\n 1 city         lower-tier     20\n 2 city         single-tier    32\n 3 municipality lower-tier     41\n 4 municipality single-tier    27\n 5 town         lower-tier     61\n 6 town         single-tier    27\n 7 township     lower-tier    113\n 8 township     single-tier    82\n 9 village      lower-tier      6\n10 village      single-tier     5"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#ex.-3",
    "href": "02-getting-started/slides-02-getting-started.html#ex.-3",
    "title": "Getting Started",
    "section": "Ex. 3",
    "text": "Ex. 3\nWhat is the proportion of each type of CSD?\n\ntowny %&gt;%\n  count(csd_type) %&gt;%\n  mutate(p = n / sum(n))\n\n\n\n\n# A tibble: 5 × 3\n  csd_type         n      p\n  &lt;chr&gt;        &lt;int&gt;  &lt;dbl&gt;\n1 city            52 0.126 \n2 municipality    68 0.164 \n3 town            88 0.213 \n4 township       195 0.471 \n5 village         11 0.0266"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#ex.-4",
    "href": "02-getting-started/slides-02-getting-started.html#ex.-4",
    "title": "Getting Started",
    "section": "Ex. 4",
    "text": "Ex. 4\nWhat is the proportion of each status within type of CSD?\n\ntowny %&gt;%\n  count(csd_type, status) %&gt;%\n  group_by(csd_type) %&gt;%\n  mutate(p = n / sum(n))\n\n\n\n\n# A tibble: 10 × 4\n# Groups:   csd_type [5]\n   csd_type     status          n     p\n   &lt;chr&gt;        &lt;chr&gt;       &lt;int&gt; &lt;dbl&gt;\n 1 city         lower-tier     20 0.385\n 2 city         single-tier    32 0.615\n 3 municipality lower-tier     41 0.603\n 4 municipality single-tier    27 0.397\n 5 town         lower-tier     61 0.693\n 6 town         single-tier    27 0.307\n 7 township     lower-tier    113 0.579\n 8 township     single-tier    82 0.421\n 9 village      lower-tier      6 0.545\n10 village      single-tier     5 0.455"
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#ex.-5",
    "href": "02-getting-started/slides-02-getting-started.html#ex.-5",
    "title": "Getting Started",
    "section": "Ex. 5",
    "text": "Ex. 5\nWhat is the mean population of all of the municipalities in 2021?\n\ntowny %&gt;%\n  summarize(mean_pop = mean(population_2021, na.rm = TRUE))\n\n\n\n\n# A tibble: 1 × 1\n  mean_pop\n     &lt;dbl&gt;\n1   34142."
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#ex.-6",
    "href": "02-getting-started/slides-02-getting-started.html#ex.-6",
    "title": "Getting Started",
    "section": "Ex. 6",
    "text": "Ex. 6\nWhat is the mean population by CSD in 2021?\n\ntowny %&gt;%\n  group_by(csd_type) %&gt;%\n  summarize(mean_pop = mean(population_2021, na.rm = TRUE))\n\n\n\n\n# A tibble: 5 × 2\n  csd_type     mean_pop\n  &lt;chr&gt;           &lt;dbl&gt;\n1 city          200005.\n2 municipality   10102.\n3 town           22579.\n4 township        5367.\n5 village         1276."
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#ex.-7",
    "href": "02-getting-started/slides-02-getting-started.html#ex.-7",
    "title": "Getting Started",
    "section": "Ex. 7",
    "text": "Ex. 7\nWhat is the mean population of all of the municipalities in 1996, 2001, 2006, 2011, 2016, and 2021? Try to use the across function.\n\ntowny %&gt;%\n  summarize(across(starts_with(\"population\"), ~ mean(.x, na.rm = TRUE)))\n\n\n\n\n# A tibble: 1 × 6\n  population_1996 population_2001 population_2006 population_2011\n            &lt;dbl&gt;           &lt;dbl&gt;           &lt;dbl&gt;           &lt;dbl&gt;\n1          25866.          27538.          29173.          30838.\n  population_2016 population_2021\n            &lt;dbl&gt;           &lt;dbl&gt;\n1          32264.          34142."
  },
  {
    "objectID": "02-getting-started/slides-02-getting-started.html#ex.-8",
    "href": "02-getting-started/slides-02-getting-started.html#ex.-8",
    "title": "Getting Started",
    "section": "Ex. 8",
    "text": "Ex. 8\nRun a simple t-test to see if the average population in 1996 is different from the average population in 2016.\n\nt.test(towny$population_1996, towny$population_2016, paired = TRUE)\n\n\n\n\n\n    Paired t-test\n\ndata:  towny$population_1996 and towny$population_2016\nt = -4.3204, df = 410, p-value = 1.956e-05\nalternative hypothesis: true mean difference is not equal to 0\n95 percent confidence interval:\n -9593.244 -3593.423\nsample estimates:\nmean difference \n      -6593.333"
  },
  {
    "objectID": "04-stattesting/index.html",
    "href": "04-stattesting/index.html",
    "title": "04 - Statistical Testing",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "04 - Statistical Testing"
    ]
  },
  {
    "objectID": "04-stattesting/index.html#slides",
    "href": "04-stattesting/index.html#slides",
    "title": "04 - Statistical Testing",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "04 - Statistical Testing"
    ]
  },
  {
    "objectID": "04-stattesting/index.html#your-turn",
    "href": "04-stattesting/index.html#your-turn",
    "title": "04 - Statistical Testing",
    "section": "Your Turn",
    "text": "Your Turn\n\nSet-up\n\nLoad necessary packages\n\nlibrary(tidyverse)\nlibrary(survey)\nlibrary(srvyr)\nlibrary(srvyrexploR)\n\n\n\nLoad in data and preview it\n\nglimpse(recs_2020)\n\nRows: 18,496\nColumns: 100\n$ DOEID            &lt;dbl&gt; 100001, 100002, 100003, 100004, 100005, 100006, 10000…\n$ ClimateRegion_BA &lt;fct&gt; Mixed-Dry, Mixed-Humid, Mixed-Dry, Mixed-Humid, Mixed…\n$ Urbanicity       &lt;fct&gt; Urban Area, Urban Area, Urban Area, Urban Area, Urban…\n$ Region           &lt;fct&gt; West, South, West, South, Northeast, South, South, So…\n$ REGIONC          &lt;chr&gt; \"WEST\", \"SOUTH\", \"WEST\", \"SOUTH\", \"NORTHEAST\", \"SOUTH…\n$ Division         &lt;fct&gt; Mountain South, West South Central, Mountain South, S…\n$ STATE_FIPS       &lt;chr&gt; \"35\", \"05\", \"35\", \"45\", \"34\", \"48\", \"40\", \"28\", \"11\",…\n$ state_postal     &lt;fct&gt; NM, AR, NM, SC, NJ, TX, OK, MS, DC, AZ, CA, TX, LA, M…\n$ state_name       &lt;fct&gt; New Mexico, Arkansas, New Mexico, South Carolina, New…\n$ HDD65            &lt;dbl&gt; 3844, 3766, 3819, 2614, 4219, 901, 3148, 1825, 4233, …\n$ CDD65            &lt;dbl&gt; 1679, 1458, 1696, 1718, 1363, 3558, 2128, 2374, 1159,…\n$ HDD30YR          &lt;dbl&gt; 4451, 4429, 4500, 3229, 4896, 1150, 3564, 2660, 4404,…\n$ CDD30YR          &lt;dbl&gt; 1027, 1305, 1010, 1653, 1059, 3588, 2043, 2164, 1407,…\n$ HousingUnitType  &lt;fct&gt; Single-family detached, Apartment: 5 or more units, A…\n$ YearMade         &lt;ord&gt; 1970-1979, 1980-1989, 1960-1969, 1980-1989, 1960-1969…\n$ TOTSQFT_EN       &lt;dbl&gt; 2100, 590, 900, 2100, 800, 4520, 2100, 900, 750, 760,…\n$ TOTHSQFT         &lt;dbl&gt; 2100, 590, 900, 2100, 800, 3010, 1200, 900, 750, 760,…\n$ TOTCSQFT         &lt;dbl&gt; 2100, 590, 900, 2100, 800, 3010, 1200, 0, 500, 760, 1…\n$ SpaceHeatingUsed &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE,…\n$ ACUsed           &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE…\n$ HeatingBehavior  &lt;fct&gt; Set one temp and leave it, Turn on or off as needed, …\n$ WinterTempDay    &lt;dbl&gt; 70, 70, 69, 68, 68, 76, 74, 70, 68, 70, 72, 74, 74, 7…\n$ WinterTempAway   &lt;dbl&gt; 70, 65, 68, 68, 68, 76, 65, 70, 60, 70, 70, 74, 74, 7…\n$ WinterTempNight  &lt;dbl&gt; 68, 65, 67, 68, 68, 68, 74, 68, 62, 68, 72, 74, 74, 6…\n$ ACBehavior       &lt;fct&gt; Set one temp and leave it, Turn on or off as needed, …\n$ SummerTempDay    &lt;dbl&gt; 71, 68, 70, 72, 72, 69, 68, NA, 72, 74, 77, 77, 74, 6…\n$ SummerTempAway   &lt;dbl&gt; 71, 68, 68, 72, 72, 74, 70, NA, 76, 74, 77, 77, 74, 6…\n$ SummerTempNight  &lt;dbl&gt; 71, 68, 68, 72, 72, 68, 70, NA, 68, 72, 77, 77, 74, 6…\n$ NWEIGHT          &lt;dbl&gt; 3284.104, 9007.387, 5669.002, 5294.239, 9935.465, 724…\n$ NWEIGHT1         &lt;dbl&gt; 3273.053, 9019.564, 5793.353, 5361.146, 10047.545, 73…\n$ NWEIGHT2         &lt;dbl&gt; 3349.139, 9081.268, 5913.554, 5361.706, 10261.682, 74…\n$ NWEIGHT3         &lt;dbl&gt; 3344.876, 9020.409, 5762.743, 5371.011, 10036.522, 73…\n$ NWEIGHT4         &lt;dbl&gt; 3437.284, 9213.074, 5870.261, 5392.846, 9960.953, 742…\n$ NWEIGHT5         &lt;dbl&gt; 3415.582, 9117.337, 5720.669, 5327.617, 10107.863, 73…\n$ NWEIGHT6         &lt;dbl&gt; 3354.813, 9178.697, 5662.939, 5353.957, 10298.428, 74…\n$ NWEIGHT7         &lt;dbl&gt; 3372.342, 9095.936, 5699.536, 5325.316, 10064.709, 73…\n$ NWEIGHT8         &lt;dbl&gt; 3364.035, 8920.480, 5704.027, 5375.732, 10096.509, 73…\n$ NWEIGHT9         &lt;dbl&gt; 3361.912, 9188.981, 5667.670, 5391.379, 10321.424, 73…\n$ NWEIGHT10        &lt;dbl&gt; 3301.569, 9060.009, 5793.325, 5500.628, 9943.547, 731…\n$ NWEIGHT11        &lt;dbl&gt; 3211.291, 9127.404, 5806.321, 5427.320, 10266.593, 73…\n$ NWEIGHT12        &lt;dbl&gt; 3500.495, 9264.304, 5650.394, 5384.442, 10127.061, 73…\n$ NWEIGHT13        &lt;dbl&gt; 3313.754, 9222.011, 5648.461, 5302.085, 10240.975, 72…\n$ NWEIGHT14        &lt;dbl&gt; 3359.110, 9199.014, 5828.712, 5362.226, 9871.649, 740…\n$ NWEIGHT15        &lt;dbl&gt; 3423.682, 9143.214, 5641.887, 5383.136, 10275.303, 74…\n$ NWEIGHT16        &lt;dbl&gt; 3383.601, 9042.382, 5717.847, 5380.916, 9921.199, 738…\n$ NWEIGHT17        &lt;dbl&gt; 3312.112, 9416.815, 5968.713, 5418.300, 10311.952, 73…\n$ NWEIGHT18        &lt;dbl&gt; 3324.383, 9162.681, 5828.370, 5356.271, 10004.213, 74…\n$ NWEIGHT19        &lt;dbl&gt; 3366.644, 9191.950, 5814.049, 5343.187, 10437.297, 75…\n$ NWEIGHT20        &lt;dbl&gt; 3326.643, 9091.550, 5697.447, 5360.409, 10100.730, 73…\n$ NWEIGHT21        &lt;dbl&gt; 3339.910, 0.000, 5686.769, 5336.323, 9981.635, 7427.5…\n$ NWEIGHT22        &lt;dbl&gt; 3292.197, 9097.877, 5738.946, 5389.830, 10000.278, 73…\n$ NWEIGHT23        &lt;dbl&gt; 3277.697, 9319.896, 5944.649, 5397.093, 10179.723, 71…\n$ NWEIGHT24        &lt;dbl&gt; 3340.406, 9080.729, 5819.996, 5448.089, 9825.700, 746…\n$ NWEIGHT25        &lt;dbl&gt; 3386.445, 9406.487, 5823.075, 5382.111, 10149.386, 72…\n$ NWEIGHT26        &lt;dbl&gt; 3300.574, 9255.867, 5650.188, 5386.710, 0.000, 7309.1…\n$ NWEIGHT27        &lt;dbl&gt; 3311.546, 9318.078, 5862.116, 5351.082, 10140.604, 72…\n$ NWEIGHT28        &lt;dbl&gt; 3347.637, 9154.189, 5706.909, 5371.439, 9948.403, 750…\n$ NWEIGHT29        &lt;dbl&gt; 3355.638, 9371.695, 5618.615, 5361.572, 10064.708, 73…\n$ NWEIGHT30        &lt;dbl&gt; 3322.423, 9137.197, 5795.544, 5381.218, 10082.927, 73…\n$ NWEIGHT31        &lt;dbl&gt; 3255.840, 9233.363, 5994.544, 5319.728, 10132.977, 73…\n$ NWEIGHT32        &lt;dbl&gt; 3317.937, 9114.608, 0.000, 5338.558, 9978.370, 7302.5…\n$ NWEIGHT33        &lt;dbl&gt; 3401.811, 9176.872, 5637.872, 0.000, 10213.075, 7326.…\n$ NWEIGHT34        &lt;dbl&gt; 3363.592, 9191.207, 5619.040, 5379.523, 9964.337, 724…\n$ NWEIGHT35        &lt;dbl&gt; 3303.528, 9100.344, 5652.289, 5363.277, 10070.847, 0.…\n$ NWEIGHT36        &lt;dbl&gt; 3333.027, 9071.530, 5834.171, 5476.866, 9987.947, 735…\n$ NWEIGHT37        &lt;dbl&gt; 3389.869, 9263.141, 5712.198, 5386.333, 10120.314, 73…\n$ NWEIGHT38        &lt;dbl&gt; 3381.503, 9077.901, 5765.422, 5326.402, 10023.636, 73…\n$ NWEIGHT39        &lt;dbl&gt; 3328.893, 9011.009, 5887.338, 5420.540, 10023.919, 73…\n$ NWEIGHT40        &lt;dbl&gt; 3292.829, 9166.222, 5649.809, 5370.189, 10184.527, 73…\n$ NWEIGHT41        &lt;dbl&gt; 3295.089, 9091.334, 5957.748, 5339.323, 10069.084, 73…\n$ NWEIGHT42        &lt;dbl&gt; 3413.593, 9193.664, 5592.619, 5328.788, 9958.721, 743…\n$ NWEIGHT43        &lt;dbl&gt; 3263.710, 9215.337, 6035.472, 5409.435, 10352.485, 73…\n$ NWEIGHT44        &lt;dbl&gt; 3342.446, 9048.092, 5732.384, 5416.488, 10091.807, 74…\n$ NWEIGHT45        &lt;dbl&gt; 3275.274, 9258.580, 5876.696, 5453.165, 10227.529, 74…\n$ NWEIGHT46        &lt;dbl&gt; 3364.248, 9170.518, 5653.511, 5449.444, 10069.384, 73…\n$ NWEIGHT47        &lt;dbl&gt; 3336.066, 9260.064, 5763.458, 5375.551, 9995.686, 732…\n$ NWEIGHT48        &lt;dbl&gt; 3329.151, 9105.220, 5928.968, 5407.834, 10197.608, 73…\n$ NWEIGHT49        &lt;dbl&gt; 3348.061, 9116.891, 5772.333, 5399.779, 10093.620, 74…\n$ NWEIGHT50        &lt;dbl&gt; 3357.231, 9261.127, 5785.452, 5359.408, 10196.251, 73…\n$ NWEIGHT51        &lt;dbl&gt; 3335.188, 8955.288, 5635.561, 5447.619, 10017.094, 73…\n$ NWEIGHT52        &lt;dbl&gt; 3240.132, 9000.296, 5944.330, 5344.453, 9954.142, 749…\n$ NWEIGHT53        &lt;dbl&gt; 3429.728, 9290.375, 5683.500, 5437.803, 10050.961, 74…\n$ NWEIGHT54        &lt;dbl&gt; 3294.084, 9199.326, 5735.631, 5377.898, 10018.844, 72…\n$ NWEIGHT55        &lt;dbl&gt; 3397.713, 8958.782, 5674.564, 5357.470, 10309.728, 75…\n$ NWEIGHT56        &lt;dbl&gt; 3292.610, 9232.597, 5660.854, 5421.025, 10142.763, 73…\n$ NWEIGHT57        &lt;dbl&gt; 0.000, 9140.427, 5917.193, 5365.230, 10176.828, 7383.…\n$ NWEIGHT58        &lt;dbl&gt; 3369.768, 9306.997, 5571.015, 5402.057, 10043.143, 75…\n$ NWEIGHT59        &lt;dbl&gt; 3358.163, 9061.782, 5887.092, 5402.772, 10247.911, 73…\n$ NWEIGHT60        &lt;dbl&gt; 3404.031, 8957.915, 5837.846, 5350.860, 10110.301, 75…\n$ BTUEL            &lt;dbl&gt; 42723.28, 17889.29, 8146.63, 31646.53, 20027.42, 4896…\n$ DOLLAREL         &lt;dbl&gt; 1955.06, 713.27, 334.51, 1424.86, 1087.00, 1895.66, 1…\n$ BTUNG            &lt;dbl&gt; 101924.43, 10145.32, 22603.08, 55118.66, 39099.51, 36…\n$ DOLLARNG         &lt;dbl&gt; 701.8300, 261.7348, 188.1400, 636.9100, 376.0400, 439…\n$ BTULP            &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ DOLLARLP         &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ BTUFO            &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ DOLLARFO         &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ BTUWOOD          &lt;dbl&gt; 0, 0, 0, 0, 0, 3000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ TOTALBTU         &lt;dbl&gt; 144647.71, 28034.61, 30749.71, 86765.19, 59126.93, 85…\n$ TOTALDOL         &lt;dbl&gt; 2656.8900, 975.0048, 522.6500, 2061.7700, 1463.0400, …\n\nglimpse(anes_2020)\n\nRows: 7,453\nColumns: 65\n$ V200001                 &lt;dbl&gt; 200015, 200022, 200039, 200046, 200053, 200060…\n$ CaseID                  &lt;dbl&gt; 200015, 200022, 200039, 200046, 200053, 200060…\n$ V200002                 &lt;hvn_lbll&gt; 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,…\n$ InterviewMode           &lt;fct&gt; Web, Web, Web, Web, Web, Web, Web, Web, Web, W…\n$ V200010b                &lt;dbl&gt; 1.0057375, 1.1634731, 0.7686811, 0.5210195, 0.…\n$ Weight                  &lt;dbl&gt; 1.0057375, 1.1634731, 0.7686811, 0.5210195, 0.…\n$ V200010c                &lt;dbl&gt; 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2…\n$ VarUnit                 &lt;fct&gt; 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2…\n$ V200010d                &lt;dbl&gt; 9, 26, 41, 29, 23, 37, 7, 37, 32, 41, 22, 7, 3…\n$ Stratum                 &lt;fct&gt; 9, 26, 41, 29, 23, 37, 7, 37, 32, 41, 22, 7, 3…\n$ V201006                 &lt;hvn_lbll&gt; 2, 3, 2, 3, 2, 1, 2, 3, 2, 2, 2, 2, 2, 1,…\n$ CampaignInterest        &lt;fct&gt; Somewhat interested, Not much interested, Some…\n$ V201023                 &lt;hvn_lbll&gt; -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1…\n$ EarlyVote2020           &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA, NA, Yes, NA, NA, N…\n$ V201024                 &lt;hvn_lbll&gt; -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1…\n$ V201025x                &lt;hvn_lbll&gt; 3, 3, 3, 3, 3, 3, 3, 2, 4, 3, 3, 3, 2, 4,…\n$ V201028                 &lt;hvn_lbll&gt; -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1…\n$ V201029                 &lt;hvn_lbll&gt; -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1…\n$ V201101                 &lt;hvn_lbll&gt; -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 2, …\n$ V201102                 &lt;hvn_lbll&gt; 1, 1, 1, 1, 1, 2, 1, 2, -1, -1, -1, 1, 2,…\n$ VotedPres2016           &lt;fct&gt; Yes, Yes, Yes, Yes, Yes, No, Yes, No, Yes, Yes…\n$ V201103                 &lt;hvn_lbll&gt; 2, 5, 1, 1, 2, -1, 5, -1, 1, 1, -1, 1, -1…\n$ VotedPres2016_selection &lt;fct&gt; Trump, Other, Clinton, Clinton, Trump, NA, Oth…\n$ V201228                 &lt;hvn_lbll&gt; 2, 5, 3, 2, 3, 3, 2, 2, 3, 1, 1, 1, 2, 1,…\n$ V201229                 &lt;hvn_lbll&gt; 1, -1, -1, 2, -1, -1, 2, 2, -1, 2, 1, 2, …\n$ V201230                 &lt;hvn_lbll&gt; -1, 2, 3, -1, 2, 3, -1, -1, 2, -1, -1, -1…\n$ V201231x                &lt;hvn_lbll&gt; 7, 4, 3, 6, 4, 3, 6, 6, 4, 2, 1, 2, 7, 2,…\n$ PartyID                 &lt;fct&gt; Strong republican, Independent, Independent-de…\n$ V201233                 &lt;hvn_lbll&gt; 5, 5, 4, 3, 5, 4, 4, 1, 3, 3, 2, 3, 4, 5,…\n$ TrustGovernment         &lt;fct&gt; Never, Never, Some of the time, About half the…\n$ V201237                 &lt;hvn_lbll&gt; 3, 4, 4, 2, 4, 2, 4, 1, 3, 2, 4, 3, 4, 3,…\n$ TrustPeople             &lt;fct&gt; About half the time, Some of the time, Some of…\n$ V201507x                &lt;hvn_lbll&gt; 46, 37, 40, 41, 72, 71, 37, 45, 70, 43, 3…\n$ Age                     &lt;dbl&gt; 46, 37, 40, 41, 72, 71, 37, 45, 70, 43, 37, 55…\n$ AgeGroup                &lt;fct&gt; 40-49, 30-39, 40-49, 40-49, 70 or older, 70 or…\n$ V201510                 &lt;hvn_lbll&gt; 6, 3, 2, 4, 8, 3, 4, 2, 2, 4, 2, 2, 2, 7,…\n$ Education               &lt;fct&gt; Bachelor's, Post HS, High school, Post HS, Gra…\n$ V201546                 &lt;hvn_lbll&gt; 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2,…\n$ V201547a                &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201547b                &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201547c                &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201547d                &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201547e                &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201547z                &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201549x                &lt;hvn_lbll&gt; 3, 4, 1, 4, 5, 1, 1, 1, 1, 3, 3, 1, 1, 4,…\n$ RaceEth                 &lt;fct&gt; \"Hispanic\", \"Asian, NH/PI\", \"White\", \"Asian, N…\n$ V201600                 &lt;hvn_lbll&gt; 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1,…\n$ Gender                  &lt;fct&gt; Male, Female, Female, Male, Male, Female, Fema…\n$ V201607                 &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201610                 &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201611                 &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201613                 &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201615                 &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201616                 &lt;hvn_lbll&gt; -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201617x                &lt;hvn_lbll&gt; 21, 13, 17, 7, 22, 3, 4, 3, 10, 11, 9, 18…\n$ Income                  &lt;fct&gt; \"$175,000-249,999\", \"$70,000-74,999\", \"$100,00…\n$ Income7                 &lt;fct&gt; $125k or more, $60k to &lt; 80k, $100k to &lt; 125k,…\n$ V202051                 &lt;hvn_lbll&gt; -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1…\n$ V202066                 &lt;hvn_lbll&gt; 1, 4, 4, 4, 4, 4, 4, 1, -1, 4, 4, 4, 4, -…\n$ V202072                 &lt;hvn_lbll&gt; -1, 1, 1, 1, 1, 1, 1, -1, -1, 1, 1, 1, 1,…\n$ VotedPres2020           &lt;fct&gt; NA, Yes, Yes, Yes, Yes, Yes, Yes, NA, Yes, Yes…\n$ V202073                 &lt;hvn_lbll&gt; -1, 3, 1, 1, 2, 1, 2, -1, -1, 1, 1, 1, 2,…\n$ V202109x                &lt;hvn_lbll&gt; 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,…\n$ V202110x                &lt;hvn_lbll&gt; -1, 3, 1, 1, 2, 1, 2, -1, 1, 1, 1, 1, 2, …\n$ VotedPres2020_selection &lt;fct&gt; NA, Other, Biden, Biden, Trump, Biden, Trump, …\n\n\nFind codebooks here:\n\nRECS 2020\nANES 2020\n\n\n\nCreate design objects for usage\n\nanes_des &lt;- anes_2020 %&gt;%\n  mutate(Weight = V200010b / sum(V200010b) * 231034125) %&gt;%\n  as_survey_design(\n    weights = Weight,\n    strata = V200010d,\n    ids = V200010c,\n    nest = TRUE\n  )\n\nrecs_des &lt;- recs_2020 %&gt;%\n  as_survey_rep(\n    weights = NWEIGHT,\n    repweights = NWEIGHT1:NWEIGHT60,\n    type = \"JK1\",\n    scale = 59 / 60,\n    mse = TRUE\n  )\n\n\n\n\nExercises - Part 1\n\nFor households that use thermostats, they are asked what temperature they set their home during the daytime in the winter (WinterTempDay) and in the summer (SummerTempDay). Test whether daytime winter and daytime summer temperatures of homes are set the same.\n\n\n# Hint - you'll need the recs_des object\n\n\nIn 2015, the average household spent $1,856 on energy expenditure1. Accounting for inflation, this would be $2,036 in 2020. Test whether energy costs (TOTALDOL) have increased in 2020 from 2015, accounting for inflation.\n\n\n# Hint - you'll need the recs_des object\n\n\nAdvanced bonus exercise Look through the RECS dataset and develop your own hypothesis about a mean or difference of means and test it!\n\n\n\nExercises - Part 2\n\nIs there a relationship between party identification (PartyID) and whether people voted early (EarlyVote2020)?\n\n\n# Hint - you'll need the anes_des object\n\n\nIs there a relationship between party identification (PartyID) and trust in the government (TrustGovernment)? Use Wald as the statistic option.\n\n\n# Hint - you'll need the anes_des object\n\n\nIs there a difference in the distribution of gender (Gender) across early voting status (EarlyVote2020)?\n\n\n# Hint - you'll need the anes_des object\n\n\nAdvanced bonus exercise Look through the ANES dataset and develop your own hypothesis and test it!",
    "crumbs": [
      "04 - Statistical Testing"
    ]
  },
  {
    "objectID": "04-stattesting/index.html#solutions",
    "href": "04-stattesting/index.html#solutions",
    "title": "04 - Statistical Testing",
    "section": "Solutions",
    "text": "Solutions\n\n\nSee the solutions\n\n\nExercises - Part 1\n\nFor households that use thermostats, they are asked what temperature they set their home during the daytime in the winter (WinterTempDay) and in the summer (SummerTempDay). Test whether daytime winter and daytime summer temperatures of homes are set the same.\n\n\n\nShow code\nrecs_des %&gt;%\n  filter(!is.na(SummerTempDay), !is.na(WinterTempDay)) %&gt;%\n  svyttest(WinterTempDay - SummerTempDay ~ 0, design = .)\n\n\n\n    Design-based one-sample t-test\n\ndata:  WinterTempDay - SummerTempDay ~ 0\nt = -43.106, df = 58, p-value &lt; 2.2e-16\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -2.031155 -1.850883\nsample estimates:\n     mean \n-1.941019 \n\n\n\nIn 2015, the average household spent $1,856 on energy expenditure2. Accounting for inflation, this would be $2,036 in 2020. Test whether energy costs (TOTALDOL) have increased in 2020 from 2015, accounting for inflation.\n\n\n\nShow code\nrecs_des %&gt;%\n  svyttest(I(TOTALDOL - 2036) ~ 0, design = .)\n\n\n\n    Design-based one-sample t-test\n\ndata:  I(TOTALDOL - 2036) ~ 0\nt = -23.079, df = 58, p-value &lt; 2.2e-16\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -164.7926 -138.4885\nsample estimates:\n     mean \n-151.6406 \n\n\n\n\nExercises - Part 2\n\nIs there a relationship between party identification (PartyID) and whether people voted early (EarlyVote2020)?\n\n\n\nShow code\nanes_des %&gt;%\n  filter(!is.na(PartyID), !is.na(EarlyVote2020)) %&gt;%\n  group_by(PartyID, EarlyVote2020) %&gt;%\n  summarize(\n    p = survey_mean()\n  )\n\n\n# A tibble: 14 × 4\n# Groups:   PartyID [7]\n   PartyID                    EarlyVote2020     p   p_se\n   &lt;fct&gt;                      &lt;fct&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1 Strong democrat            Yes           0.777 0.0519\n 2 Strong democrat            No            0.223 0.0519\n 3 Not very strong democrat   Yes           0.672 0.134 \n 4 Not very strong democrat   No            0.328 0.134 \n 5 Independent-democrat       Yes           0.665 0.0608\n 6 Independent-democrat       No            0.335 0.0608\n 7 Independent                Yes           0.695 0.0760\n 8 Independent                No            0.305 0.0760\n 9 Independent-republican     Yes           0.776 0.0936\n10 Independent-republican     No            0.224 0.0936\n11 Not very strong republican Yes           0.641 0.112 \n12 Not very strong republican No            0.359 0.112 \n13 Strong republican          Yes           0.703 0.0678\n14 Strong republican          No            0.297 0.0678\n\n\nShow code\nanes_des %&gt;%\n  filter(!is.na(PartyID), !is.na(EarlyVote2020)) %&gt;%\n  svychisq(~ EarlyVote2020 + PartyID, design = .)\n\n\n\n    Pearson's X^2: Rao & Scott adjustment\n\ndata:  NextMethod()\nF = 0.46943, ndf = 4.9476, ddf = 232.5385, p-value = 0.797\n\n\n\nIs there a relationship between party identification (PartyID) and trust in the government (TrustGovernment)? Use Wald as the statistic option.\n\n\n\nShow code\nanes_des %&gt;%\n  filter(!is.na(PartyID), !is.na(TrustGovernment)) %&gt;%\n  group_by(PartyID, TrustGovernment) %&gt;%\n  summarize(\n    p = survey_mean()\n  )\n\n\n# A tibble: 35 × 4\n# Groups:   PartyID [7]\n   PartyID                  TrustGovernment          p    p_se\n   &lt;fct&gt;                    &lt;fct&gt;                &lt;dbl&gt;   &lt;dbl&gt;\n 1 Strong democrat          Always              0.0144 0.00452\n 2 Strong democrat          Most of the time    0.124  0.00977\n 3 Strong democrat          About half the time 0.353  0.0171 \n 4 Strong democrat          Some of the time    0.420  0.0175 \n 5 Strong democrat          Never               0.0888 0.0126 \n 6 Not very strong democrat Always              0.0207 0.00874\n 7 Not very strong democrat Most of the time    0.101  0.0154 \n 8 Not very strong democrat About half the time 0.296  0.0248 \n 9 Not very strong democrat Some of the time    0.466  0.0228 \n10 Not very strong democrat Never               0.116  0.0182 \n# ℹ 25 more rows\n\n\nShow code\nanes_des %&gt;%\n  filter(!is.na(PartyID), !is.na(TrustGovernment)) %&gt;%\n  svychisq(~ TrustGovernment + PartyID, design = ., statistic = \"Wald\")\n\n\n\n    Design-based Wald test of association\n\ndata:  NextMethod()\nF = 15.134, ndf = 24, ddf = 51, p-value = 1.142e-15\n\n\n\nIs there a difference in the distribution of gender (Gender) across early voting status (EarlyVote2020)?\n\n\n\nShow code\n# Hint - you'll need the anes_des object\n\nanes_des %&gt;%\n  filter(!is.na(Gender), !is.na(EarlyVote2020)) %&gt;%\n  group_by(Gender, EarlyVote2020) %&gt;%\n  summarize(\n    p = survey_mean()\n  )\n\n\n# A tibble: 4 × 4\n# Groups:   Gender [2]\n  Gender EarlyVote2020     p   p_se\n  &lt;fct&gt;  &lt;fct&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n1 Male   Yes           0.781 0.0345\n2 Male   No            0.219 0.0345\n3 Female Yes           0.679 0.0331\n4 Female No            0.321 0.0331\n\n\nShow code\nanes_des %&gt;%\n  filter(!is.na(Gender), !is.na(EarlyVote2020)) %&gt;%\n  svychisq(~ Gender + EarlyVote2020, design = ., statistic = \"Wald\")\n\n\n\n    Design-based Wald test of association\n\ndata:  NextMethod()\nF = 4.6322, ndf = 1, ddf = 47, p-value = 0.03655",
    "crumbs": [
      "04 - Statistical Testing"
    ]
  },
  {
    "objectID": "04-stattesting/index.html#footnotes",
    "href": "04-stattesting/index.html#footnotes",
    "title": "04 - Statistical Testing",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nhttps://www.eia.gov/consumption/residential/data/2015/c&e/pdf/ce1.1.pdf↩︎\nhttps://www.eia.gov/consumption/residential/data/2015/c&e/pdf/ce1.1.pdf↩︎",
    "crumbs": [
      "04 - Statistical Testing"
    ]
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#t-tests-1",
    "href": "04-stattesting/slides-04-stattesting.html#t-tests-1",
    "title": "Statistical Testing",
    "section": "t-tests",
    "text": "t-tests\n\nDetermine if one proportion or mean is statistically different from another\n\n\nDifferent types:\n\nOne-Sample: Comparing our data to a set value\nTwo-Sample: Comparing two sets of data\n\nUnpaired: Comparing two values for two different groups\nPaired: Comparing two values for the same unit\n\n\n\n\n\nUnpaired Examples:\n\nA/B testing\ncompare test scores for two different classrooms taught by two different instructors\n\nPaired Examples:\n\ncompare test scores for each student at the beginning and end of class\nwater samples from a river before and after a treatment or environmental change"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#t-test-syntax",
    "href": "04-stattesting/slides-04-stattesting.html#t-test-syntax",
    "title": "Statistical Testing",
    "section": "t-test syntax",
    "text": "t-test syntax\nUse the svyttest() function to compare two proportions or means.\nSyntax:\n\nsvyttest(\n  formula,\n  design,\n  ...\n)\n\n\n\nSimilar to t.test() function in base R with the formula and the data arguments"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#t-test-syntax-1",
    "href": "04-stattesting/slides-04-stattesting.html#t-test-syntax-1",
    "title": "Statistical Testing",
    "section": "t-test syntax",
    "text": "t-test syntax\n\nrecs_des %&gt;%\n  svyttest(SummerTempNight - 68 ~ 0,\n    na.rm = TRUE\n  )\n\nError in formula[[3]] == 1 || formula[[3]] == 0: 'length = 60' in coercion to 'logical(1)'"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#t-test-syntax-2",
    "href": "04-stattesting/slides-04-stattesting.html#t-test-syntax-2",
    "title": "Statistical Testing",
    "section": "t-test syntax",
    "text": "t-test syntax\nUse the svyttest() function to compare two proportions or means.\nSyntax:\n\nsvyttest(\n  formula,\n  design,\n  ...\n)\n\n\n\nas design argument is the second argument, dot notation is needed"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#dot-notation-1",
    "href": "04-stattesting/slides-04-stattesting.html#dot-notation-1",
    "title": "Statistical Testing",
    "section": "Dot notation",
    "text": "Dot notation\nLet’s walk through an example using the towny data.\n\ntowny\n\n# A tibble: 414 × 25\n   name   website status csd_type census_div latitude longitude land_area_km2\n   &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;         &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n 1 Addin… https:… lower… township Lennox an…     45       -77.2        1294. \n 2 Adela… https:… lower… township Middlesex      43.0     -81.7         331. \n 3 Adjal… https:… lower… township Simcoe         44.1     -79.9         372. \n 4 Admas… https:… lower… township Renfrew        45.5     -76.9         520. \n 5 Ajax   https:… lower… town     Durham         43.9     -79.0          66.6\n 6 Alber… https:… singl… township Rainy Riv…     48.6     -93.5         117. \n 7 Alfre… https:… lower… township Prescott …     45.6     -74.9         392. \n 8 Algon… https:… lower… township Haliburton     45.4     -78.8        1000. \n 9 Alnwi… https:… lower… township Northumbe…     44.1     -78.0         398. \n10 Amara… https:… lower… township Dufferin       44.0     -80.2         265. \n# ℹ 404 more rows\n# ℹ 17 more variables: population_1996 &lt;int&gt;, population_2001 &lt;int&gt;,\n#   population_2006 &lt;int&gt;, population_2011 &lt;int&gt;, population_2016 &lt;int&gt;,\n#   population_2021 &lt;int&gt;, density_1996 &lt;dbl&gt;, density_2001 &lt;dbl&gt;,\n#   density_2006 &lt;dbl&gt;, density_2011 &lt;dbl&gt;, density_2016 &lt;dbl&gt;,\n#   density_2021 &lt;dbl&gt;, pop_change_1996_2001_pct &lt;dbl&gt;,\n#   pop_change_2001_2006_pct &lt;dbl&gt;, pop_change_2006_2011_pct &lt;dbl&gt;, …"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#dot-notation-2",
    "href": "04-stattesting/slides-04-stattesting.html#dot-notation-2",
    "title": "Statistical Testing",
    "section": "Dot notation",
    "text": "Dot notation\nUsing the towny data, let’s filter to only cities.\n\nfilter(towny, csd_type == \"city\")\n\n# A tibble: 52 × 25\n   name   website status csd_type census_div latitude longitude land_area_km2\n   &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;         &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n 1 Barrie https:… singl… city     Simcoe         44.4     -79.7          99.0\n 2 Belle… https:… singl… city     Hastings       44.2     -77.4         247. \n 3 Bramp… https:… lower… city     Peel           43.7     -79.8         266. \n 4 Brant  https:… singl… city     Brant          43.1     -80.4         818. \n 5 Brant… https:… singl… city     Brant          43.1     -80.3          98.6\n 6 Brock… https:… singl… city     Leeds and…     44.6     -75.7          20.9\n 7 Burli… https:… lower… city     Halton         43.4     -79.8         186. \n 8 Cambr… https:… lower… city     Waterloo       43.4     -80.3         113. \n 9 Clare… https:… lower… city     Prescott …     45.5     -75.2         297. \n10 Cornw… https:… singl… city     Stormont,…     45.0     -74.7          61.5\n# ℹ 42 more rows\n# ℹ 17 more variables: population_1996 &lt;int&gt;, population_2001 &lt;int&gt;,\n#   population_2006 &lt;int&gt;, population_2011 &lt;int&gt;, population_2016 &lt;int&gt;,\n#   population_2021 &lt;int&gt;, density_1996 &lt;dbl&gt;, density_2001 &lt;dbl&gt;,\n#   density_2006 &lt;dbl&gt;, density_2011 &lt;dbl&gt;, density_2016 &lt;dbl&gt;,\n#   density_2021 &lt;dbl&gt;, pop_change_1996_2001_pct &lt;dbl&gt;,\n#   pop_change_2001_2006_pct &lt;dbl&gt;, pop_change_2006_2011_pct &lt;dbl&gt;, …"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#dot-notation-3",
    "href": "04-stattesting/slides-04-stattesting.html#dot-notation-3",
    "title": "Statistical Testing",
    "section": "Dot notation",
    "text": "Dot notation\nUsing the towny data, let’s filter to only cities.\n\nfilter(towny, csd_type == \"city\")\ntowny %&gt;% filter(csd_type == \"city\")\n\n\n\n# A tibble: 52 × 25\n   name   website status csd_type census_div latitude longitude land_area_km2\n   &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;         &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n 1 Barrie https:… singl… city     Simcoe         44.4     -79.7          99.0\n 2 Belle… https:… singl… city     Hastings       44.2     -77.4         247. \n 3 Bramp… https:… lower… city     Peel           43.7     -79.8         266. \n 4 Brant  https:… singl… city     Brant          43.1     -80.4         818. \n 5 Brant… https:… singl… city     Brant          43.1     -80.3          98.6\n 6 Brock… https:… singl… city     Leeds and…     44.6     -75.7          20.9\n 7 Burli… https:… lower… city     Halton         43.4     -79.8         186. \n 8 Cambr… https:… lower… city     Waterloo       43.4     -80.3         113. \n 9 Clare… https:… lower… city     Prescott …     45.5     -75.2         297. \n10 Cornw… https:… singl… city     Stormont,…     45.0     -74.7          61.5\n# ℹ 42 more rows\n# ℹ 17 more variables: population_1996 &lt;int&gt;, population_2001 &lt;int&gt;,\n#   population_2006 &lt;int&gt;, population_2011 &lt;int&gt;, population_2016 &lt;int&gt;,\n#   population_2021 &lt;int&gt;, density_1996 &lt;dbl&gt;, density_2001 &lt;dbl&gt;,\n#   density_2006 &lt;dbl&gt;, density_2011 &lt;dbl&gt;, density_2016 &lt;dbl&gt;,\n#   density_2021 &lt;dbl&gt;, pop_change_1996_2001_pct &lt;dbl&gt;,\n#   pop_change_2001_2006_pct &lt;dbl&gt;, pop_change_2006_2011_pct &lt;dbl&gt;, …"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#dot-notation-4",
    "href": "04-stattesting/slides-04-stattesting.html#dot-notation-4",
    "title": "Statistical Testing",
    "section": "Dot notation",
    "text": "Dot notation\nUsing the towny data, let’s filter to only cities.\n\nfilter(towny, csd_type == \"city\")\ntowny %&gt;% filter(csd_type == \"city\")\ntowny %&gt;% filter(., csd_type == \"city\")\n\n\n\n# A tibble: 52 × 25\n   name   website status csd_type census_div latitude longitude land_area_km2\n   &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;         &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n 1 Barrie https:… singl… city     Simcoe         44.4     -79.7          99.0\n 2 Belle… https:… singl… city     Hastings       44.2     -77.4         247. \n 3 Bramp… https:… lower… city     Peel           43.7     -79.8         266. \n 4 Brant  https:… singl… city     Brant          43.1     -80.4         818. \n 5 Brant… https:… singl… city     Brant          43.1     -80.3          98.6\n 6 Brock… https:… singl… city     Leeds and…     44.6     -75.7          20.9\n 7 Burli… https:… lower… city     Halton         43.4     -79.8         186. \n 8 Cambr… https:… lower… city     Waterloo       43.4     -80.3         113. \n 9 Clare… https:… lower… city     Prescott …     45.5     -75.2         297. \n10 Cornw… https:… singl… city     Stormont,…     45.0     -74.7          61.5\n# ℹ 42 more rows\n# ℹ 17 more variables: population_1996 &lt;int&gt;, population_2001 &lt;int&gt;,\n#   population_2006 &lt;int&gt;, population_2011 &lt;int&gt;, population_2016 &lt;int&gt;,\n#   population_2021 &lt;int&gt;, density_1996 &lt;dbl&gt;, density_2001 &lt;dbl&gt;,\n#   density_2006 &lt;dbl&gt;, density_2011 &lt;dbl&gt;, density_2016 &lt;dbl&gt;,\n#   density_2021 &lt;dbl&gt;, pop_change_1996_2001_pct &lt;dbl&gt;,\n#   pop_change_2001_2006_pct &lt;dbl&gt;, pop_change_2006_2011_pct &lt;dbl&gt;, …"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#dot-notation-5",
    "href": "04-stattesting/slides-04-stattesting.html#dot-notation-5",
    "title": "Statistical Testing",
    "section": "Dot notation",
    "text": "Dot notation\nUsing the towny data, let’s filter to only cities.\n\nfilter(towny, csd_type == \"city\")\ntowny %&gt;% filter(csd_type == \"city\")\ntowny %&gt;% filter(., csd_type == \"city\")\ntowny %&gt;% filter(.data = ., csd_type == \"city\")\n\n\n\n# A tibble: 52 × 25\n   name   website status csd_type census_div latitude longitude land_area_km2\n   &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;         &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n 1 Barrie https:… singl… city     Simcoe         44.4     -79.7          99.0\n 2 Belle… https:… singl… city     Hastings       44.2     -77.4         247. \n 3 Bramp… https:… lower… city     Peel           43.7     -79.8         266. \n 4 Brant  https:… singl… city     Brant          43.1     -80.4         818. \n 5 Brant… https:… singl… city     Brant          43.1     -80.3          98.6\n 6 Brock… https:… singl… city     Leeds and…     44.6     -75.7          20.9\n 7 Burli… https:… lower… city     Halton         43.4     -79.8         186. \n 8 Cambr… https:… lower… city     Waterloo       43.4     -80.3         113. \n 9 Clare… https:… lower… city     Prescott …     45.5     -75.2         297. \n10 Cornw… https:… singl… city     Stormont,…     45.0     -74.7          61.5\n# ℹ 42 more rows\n# ℹ 17 more variables: population_1996 &lt;int&gt;, population_2001 &lt;int&gt;,\n#   population_2006 &lt;int&gt;, population_2011 &lt;int&gt;, population_2016 &lt;int&gt;,\n#   population_2021 &lt;int&gt;, density_1996 &lt;dbl&gt;, density_2001 &lt;dbl&gt;,\n#   density_2006 &lt;dbl&gt;, density_2011 &lt;dbl&gt;, density_2016 &lt;dbl&gt;,\n#   density_2021 &lt;dbl&gt;, pop_change_1996_2001_pct &lt;dbl&gt;,\n#   pop_change_2001_2006_pct &lt;dbl&gt;, pop_change_2006_2011_pct &lt;dbl&gt;, …"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#example-one-sample-t-test-1",
    "href": "04-stattesting/slides-04-stattesting.html#example-one-sample-t-test-1",
    "title": "Statistical Testing",
    "section": "Example: one-sample t-test",
    "text": "Example: one-sample t-test\n\none sample t-tests compare data against a single value\nStephanie usually sets her home to 68°F at night during the summer. Is this different from the average household in the U.S.?\nUse SummerTempNight"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#example-one-sample-t-test-2",
    "href": "04-stattesting/slides-04-stattesting.html#example-one-sample-t-test-2",
    "title": "Statistical Testing",
    "section": "Example: one-sample t-test",
    "text": "Example: one-sample t-test\nTest if the average U.S. household sets its temperature at a value different from 68°F using svyttest():\n\nrecs_des %&gt;%\n  svyttest(\n    formula = SummerTempNight - 68 ~ 0,\n    design = .,\n    na.rm = TRUE\n  )\n\n\nFormula to test if the true mean of SummerTempNight variable minus 68°F is equal to 0\nDot notation . that passes the recs_des object into the design argument"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#results-one-sample-t-test",
    "href": "04-stattesting/slides-04-stattesting.html#results-one-sample-t-test",
    "title": "Statistical Testing",
    "section": "Results: one-sample t-test",
    "text": "Results: one-sample t-test\nTest if the average U.S. household sets its temperature at a value different from 68°F using svyttest():\n\nrecs_des %&gt;%\n  svyttest(\n    formula = SummerTempNight - 68 ~ 0,\n    design = .,\n    na.rm = TRUE\n  )\n\n\n    Design-based one-sample t-test\n\ndata:  SummerTempNight - 68 ~ 0\nt = 84.788, df = 58, p-value &lt; 2.2e-16\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n 3.287816 3.446810\nsample estimates:\n    mean \n3.367313 \n\n\n\n\nSample estimate mean is the difference between the U.S. average and Stephanie’s house\nResult: Stephanie keeps her house cold in the summer!"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#example-unpaired-two-sample-t-test-1",
    "href": "04-stattesting/slides-04-stattesting.html#example-unpaired-two-sample-t-test-1",
    "title": "Statistical Testing",
    "section": "Example: unpaired two-sample t-test",
    "text": "Example: unpaired two-sample t-test\n\nTwo-sample t-test compares data from two populations\nOn average, is there a significant different electric bill for households with and without air-conditioning?\nUsing DOLLAREL for the electricity bill and ACUsed to determine if households have air-conditioning"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#example-unpaired-two-sample-t-test-2",
    "href": "04-stattesting/slides-04-stattesting.html#example-unpaired-two-sample-t-test-2",
    "title": "Statistical Testing",
    "section": "Example: unpaired two-sample t-test",
    "text": "Example: unpaired two-sample t-test\nTest if the electricity expenditure is significantly different for homes with and without air-conditioning.\n\nrecs_des %&gt;%\n  svyttest(\n    formula = DOLLAREL ~ ACUsed,\n    design = .,\n    na.rm = TRUE\n  )\n\n\nFormula with electricity expenditure on the left and air-conditioning usage on the right\nDot notation . that passes the recs_des object into the design argument"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#results-unpaired-two-sample-t-test",
    "href": "04-stattesting/slides-04-stattesting.html#results-unpaired-two-sample-t-test",
    "title": "Statistical Testing",
    "section": "Results: unpaired two-sample t-test",
    "text": "Results: unpaired two-sample t-test\nTest if the electricity expenditure is significantly different for homes with and without air-conditioning:\n\nrecs_des %&gt;%\n  svyttest(\n    formula = DOLLAREL ~ ACUsed,\n    design = .,\n    na.rm = TRUE\n  )\n\n\n    Design-based t-test\n\ndata:  DOLLAREL ~ ACUsed\nt = 21.29, df = 58, p-value &lt; 2.2e-16\nalternative hypothesis: true difference in mean is not equal to 0\n95 percent confidence interval:\n 331.3343 400.1054\nsample estimates:\ndifference in mean \n          365.7199 \n\n\n\n\nHousehold with AC have higher electrical bill"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#example-paired-t-test",
    "href": "04-stattesting/slides-04-stattesting.html#example-paired-t-test",
    "title": "Statistical Testing",
    "section": "Example: paired t-test",
    "text": "Example: paired t-test\nDo U.S. households set their thermostat differently at night in the summer and winter?\n\nrecs_des %&gt;%\n  svyttest(\n    formula = SummerTempNight - WinterTempNight ~ 0,\n    design = .,\n    na.rm = TRUE\n  )\n\n\n    Design-based one-sample t-test\n\ndata:  SummerTempNight - WinterTempNight ~ 0\nt = 50.833, df = 58, p-value &lt; 2.2e-16\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n 2.739403 2.963995\nsample estimates:\n    mean \n2.851699"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#chi-square-tests-1",
    "href": "04-stattesting/slides-04-stattesting.html#chi-square-tests-1",
    "title": "Statistical Testing",
    "section": "Chi-square tests",
    "text": "Chi-square tests\n\nCompare multiple proportions to see if they are statistically different from each other\n\n\nDifferent types:\n\nGoodness-of-fit tests compare observed data to expected data\nTests of independence compare two types of observed data to see if there is a relationship\nTests of homogeneity compare two distributions to see if they match"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#chi-square-syntax",
    "href": "04-stattesting/slides-04-stattesting.html#chi-square-syntax",
    "title": "Statistical Testing",
    "section": "Chi-square syntax",
    "text": "Chi-square syntax\nThere are two functions that we use to compare proportions:\n\nsvygofchisq(): For goodness-of-fit tests\nsvychisq(): For tests of independence and homogeneity"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#syntax-for-goodness-of-fit-tests",
    "href": "04-stattesting/slides-04-stattesting.html#syntax-for-goodness-of-fit-tests",
    "title": "Statistical Testing",
    "section": "Syntax for goodness-of-fit tests",
    "text": "Syntax for goodness-of-fit tests\n\nsvygofchisq(formula,\n  p,\n  design,\n  na.rm = TRUE,\n  ...\n)"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#syntax-for-tests-of-independence-and-homogeneity",
    "href": "04-stattesting/slides-04-stattesting.html#syntax-for-tests-of-independence-and-homogeneity",
    "title": "Statistical Testing",
    "section": "Syntax for tests of independence and homogeneity",
    "text": "Syntax for tests of independence and homogeneity\n\nsvychisq(formula,\n  design,\n  statistic = c(\n    \"F\", \"Chisq\", \"Wald\", \"adjWald\",\n    \"lincom\", \"saddlepoint\"\n  ),\n  na.rm = TRUE,\n  ...\n)"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#example-goodness-of-fit-test-1",
    "href": "04-stattesting/slides-04-stattesting.html#example-goodness-of-fit-test-1",
    "title": "Statistical Testing",
    "section": "Example: goodness-of-fit test",
    "text": "Example: goodness-of-fit test\n\nLet’s check to see if the education levels from the ANES match the levels from the ACS\nHere is the education breakdown from the ACS in 2020\n\n11% had less than a high school degree\n27% had a high school degree\n29% had some college or an associate’s degree\n33% had a bachelor’s degree or higher"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#example-goodness-of-fit-test-2",
    "href": "04-stattesting/slides-04-stattesting.html#example-goodness-of-fit-test-2",
    "title": "Statistical Testing",
    "section": "Example: goodness-of-fit test",
    "text": "Example: goodness-of-fit test\n\nLet’s check to see if the education levels from the ANES match the levels from the ACS\nHere is the education breakdown from our survey data\n\n\nanes_des %&gt;%\n  drop_na(Education) %&gt;%\n  group_by(Education) %&gt;%\n  summarize(p = survey_mean())\n\n# A tibble: 5 × 3\n  Education         p    p_se\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt;\n1 Less than HS 0.0805 0.00568\n2 High school  0.277  0.0102 \n3 Post HS      0.290  0.00713\n4 Bachelor's   0.226  0.00633\n5 Graduate     0.126  0.00499\n\n\n\n\nUse drop_na() to first remove any missing data from the Education variable\nUse group_by() and summarize() to get the proportions by Education level"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#example-goodness-of-fit-test-3",
    "href": "04-stattesting/slides-04-stattesting.html#example-goodness-of-fit-test-3",
    "title": "Statistical Testing",
    "section": "Example: goodness-of-fit test",
    "text": "Example: goodness-of-fit test\nLet’s collapse Bachelor’s and Graduate degrees into a single category for comparison.\n\nanes_des_educ &lt;- anes_des %&gt;%\n  mutate(\n    Education2 =\n      fct_collapse(Education,\n        \"Bachelor or Higher\" = c(\"Bachelor's\", \"Graduate\")\n      )\n  )"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#example-goodness-of-fit-test-4",
    "href": "04-stattesting/slides-04-stattesting.html#example-goodness-of-fit-test-4",
    "title": "Statistical Testing",
    "section": "Example: goodness-of-fit test",
    "text": "Example: goodness-of-fit test\n\nanes_des_educ %&gt;%\n  drop_na(Education2) %&gt;%\n  group_by(Education2) %&gt;%\n  summarize(p = survey_mean())\n\n# A tibble: 4 × 3\n  Education2              p    p_se\n  &lt;fct&gt;               &lt;dbl&gt;   &lt;dbl&gt;\n1 Less than HS       0.0805 0.00568\n2 High school        0.277  0.0102 \n3 Post HS            0.290  0.00713\n4 Bachelor or Higher 0.352  0.00732"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#results-goodness-of-fit-test",
    "href": "04-stattesting/slides-04-stattesting.html#results-goodness-of-fit-test",
    "title": "Statistical Testing",
    "section": "Results: goodness-of-fit test",
    "text": "Results: goodness-of-fit test\nTest to see if the ANES education matches the population percentages\n\nanes_des_educ %&gt;%\n  svygofchisq(\n    formula = ~Education2,\n    p = c(0.11, 0.27, 0.29, 0.33),\n    design = .,\n    na.rm = TRUE\n  )\n\n\n    Design-based chi-squared test for given probabilities\n\ndata:  ~Education2\nX-squared = 2177472, scale = 1.1203e+05, df = 2.2629e+00, p-value =\n8.745e-05"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#results-goodness-of-fit-test-1",
    "href": "04-stattesting/slides-04-stattesting.html#results-goodness-of-fit-test-1",
    "title": "Statistical Testing",
    "section": "Results: goodness-of-fit test",
    "text": "Results: goodness-of-fit test\n\n\nCode\nanes_des_educ %&gt;%\n  drop_na(Education2) %&gt;%\n  group_by(Education2) %&gt;%\n  summarize(Observed = survey_mean(vartype = \"ci\")) %&gt;%\n  rename(Education = Education2) %&gt;%\n  mutate(Expected = c(0.11, 0.27, 0.29, 0.33)) %&gt;%\n  select(Education, Expected, everything()) %&gt;%\n  pivot_longer(\n    cols = c(\"Expected\", \"Observed\"),\n    names_to = \"Names\",\n    values_to = \"Proportion\"\n  ) %&gt;%\n  mutate(\n    Observed_low = if_else(Names == \"Observed\", Observed_low, NA_real_),\n    Observed_upp = if_else(Names == \"Observed\", Observed_upp, NA_real_),\n    Names = if_else(Names == \"Observed\",\n      \"ANES (observed)\", \"ACS (expected)\"\n    )\n  ) %&gt;%\n  ggplot(aes(x = Education, y = Proportion, color = Names)) +\n  geom_point(alpha = 0.75, size = 2) +\n  geom_errorbar(aes(ymin = Observed_low, ymax = Observed_upp),\n    width = 0.25\n  ) +\n  theme_bw() +\n  scale_color_manual(name = \"Type\", values = c(\"#ff8484\", \"#0b3954\")) +\n  theme(legend.position = \"bottom\", legend.title = element_blank())"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#example-test-of-independence-1",
    "href": "04-stattesting/slides-04-stattesting.html#example-test-of-independence-1",
    "title": "Statistical Testing",
    "section": "Example: test of independence",
    "text": "Example: test of independence\nANES asked respondents two questions about trust:\n\nQuestion text: “How often can you trust the federal government to do what is right?”\nQuestion text: “How often can you trust other people?”\n\nRun a test of independence to see if there is a relationship between these two questions."
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#example-test-of-independence-2",
    "href": "04-stattesting/slides-04-stattesting.html#example-test-of-independence-2",
    "title": "Statistical Testing",
    "section": "Example: test of independence",
    "text": "Example: test of independence\nRun a test of independence to see if there is a relationship between these two questions.\n\nanes_des %&gt;%\n  svychisq(\n    formula = ~ TrustGovernment + TrustPeople,\n    design = .,\n    statistic = \"Wald\",\n    na.rm = TRUE\n  )\n\n\n    Design-based Wald test of association\n\ndata:  NextMethod()\nF = 20.876, ndf = 16, ddf = 51, p-value &lt; 2.2e-16"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#anova",
    "href": "04-stattesting/slides-04-stattesting.html#anova",
    "title": "Statistical Testing",
    "section": "ANOVA",
    "text": "ANOVA\nUse Analysis of Variance (ANOVA) to compare two or more means."
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#anova-syntax",
    "href": "04-stattesting/slides-04-stattesting.html#anova-syntax",
    "title": "Statistical Testing",
    "section": "ANOVA syntax",
    "text": "ANOVA syntax\nUse Analysis of Variance (ANOVA) to compare two or more means.\nSyntax:\n\nsvyglm(\n  formula = outcome ~ group,\n  design = .,\n  na.action = na.omit,\n  df.resid = NULL\n)"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#example-anova",
    "href": "04-stattesting/slides-04-stattesting.html#example-anova",
    "title": "Statistical Testing",
    "section": "Example: ANOVA",
    "text": "Example: ANOVA\n\nDoes the temperature that U.S. households set their AC during summer nights vary by region?\nUse svyglm() function and variables SummerTempNight and Region\n\n\nrecs_des %&gt;%\n  svyglm(\n    formula = SummerTempNight ~ Region,\n    design = .\n  ) %&gt;%\n  tidy()"
  },
  {
    "objectID": "04-stattesting/slides-04-stattesting.html#example-anova-1",
    "href": "04-stattesting/slides-04-stattesting.html#example-anova-1",
    "title": "Statistical Testing",
    "section": "Example: ANOVA",
    "text": "Example: ANOVA\n\nrecs_des %&gt;%\n  svyglm(\n    formula = SummerTempNight ~ Region,\n    design = .\n  ) %&gt;%\n  tidy()\n\n# A tibble: 4 × 5\n  term          estimate std.error statistic   p.value\n  &lt;chr&gt;            &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 (Intercept)      69.7      0.103    674.   3.69e-111\n2 RegionMidwest     1.34     0.138      9.68 1.46e- 13\n3 RegionSouth       2.05     0.128     16.0  1.36e- 22\n4 RegionWest        2.80     0.177     15.9  2.27e- 22"
  },
  {
    "objectID": "02-getting-started/index.html",
    "href": "02-getting-started/index.html",
    "title": "02 - Getting Started",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "02 - Getting Started"
    ]
  },
  {
    "objectID": "02-getting-started/index.html#slides",
    "href": "02-getting-started/index.html#slides",
    "title": "02 - Getting Started",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "02 - Getting Started"
    ]
  },
  {
    "objectID": "02-getting-started/index.html#your-turn",
    "href": "02-getting-started/index.html#your-turn",
    "title": "02 - Getting Started",
    "section": "Your Turn",
    "text": "Your Turn\n\nSet-up\n\nLoad necessary packages\n\nlibrary(tidyverse)\nlibrary(gt)\n\n\n\nPreview data\n\nglimpse(towny)\n\nRows: 414\nColumns: 25\n$ name                     &lt;chr&gt; \"Addington Highlands\", \"Adelaide Metcalfe\", \"…\n$ website                  &lt;chr&gt; \"https://addingtonhighlands.ca\", \"https://ade…\n$ status                   &lt;chr&gt; \"lower-tier\", \"lower-tier\", \"lower-tier\", \"lo…\n$ csd_type                 &lt;chr&gt; \"township\", \"township\", \"township\", \"township…\n$ census_div               &lt;chr&gt; \"Lennox and Addington\", \"Middlesex\", \"Simcoe\"…\n$ latitude                 &lt;dbl&gt; 45.00000, 42.95000, 44.13333, 45.52917, 43.85…\n$ longitude                &lt;dbl&gt; -77.25000, -81.70000, -79.93333, -76.89694, -…\n$ land_area_km2            &lt;dbl&gt; 1293.99, 331.11, 371.53, 519.59, 66.64, 116.6…\n$ population_1996          &lt;int&gt; 2429, 3128, 9359, 2837, 64430, 1027, 8315, 16…\n$ population_2001          &lt;int&gt; 2402, 3149, 10082, 2824, 73753, 956, 8593, 18…\n$ population_2006          &lt;int&gt; 2512, 3135, 10695, 2716, 90167, 958, 8654, 19…\n$ population_2011          &lt;int&gt; 2517, 3028, 10603, 2844, 109600, 864, 9196, 2…\n$ population_2016          &lt;int&gt; 2318, 2990, 10975, 2935, 119677, 969, 9680, 2…\n$ population_2021          &lt;int&gt; 2534, 3011, 10989, 2995, 126666, 954, 9949, 2…\n$ density_1996             &lt;dbl&gt; 1.88, 9.45, 25.19, 5.46, 966.84, 8.81, 21.22,…\n$ density_2001             &lt;dbl&gt; 1.86, 9.51, 27.14, 5.44, 1106.74, 8.20, 21.93…\n$ density_2006             &lt;dbl&gt; 1.94, 9.47, 28.79, 5.23, 1353.05, 8.22, 22.09…\n$ density_2011             &lt;dbl&gt; 1.95, 9.14, 28.54, 5.47, 1644.66, 7.41, 23.47…\n$ density_2016             &lt;dbl&gt; 1.79, 9.03, 29.54, 5.65, 1795.87, 8.31, 24.71…\n$ density_2021             &lt;dbl&gt; 1.96, 9.09, 29.58, 5.76, 1900.75, 8.18, 25.39…\n$ pop_change_1996_2001_pct &lt;dbl&gt; -0.0111, 0.0067, 0.0773, -0.0046, 0.1447, -0.…\n$ pop_change_2001_2006_pct &lt;dbl&gt; 0.0458, -0.0044, 0.0608, -0.0382, 0.2226, 0.0…\n$ pop_change_2006_2011_pct &lt;dbl&gt; 0.0020, -0.0341, -0.0086, 0.0471, 0.2155, -0.…\n$ pop_change_2011_2016_pct &lt;dbl&gt; -0.0791, -0.0125, 0.0351, 0.0320, 0.0919, 0.1…\n$ pop_change_2016_2021_pct &lt;dbl&gt; 0.0932, 0.0070, 0.0013, 0.0204, 0.0584, -0.01…\n\n\n\n\nExercises\n\nHow many different types of CSD (csd_type) are there in the dataset?\n\n\nHow many different types of CSD and status (status) are there in the dataset?\n\n\nWhat is the proportion of each type of CSD?\n\n\nWhat is the proportion of each status within type of CSD?\n\n\nWhat is the mean population of all of the municipalities in 2021?\n\n\nWhat is the mean population by CSD Type in 2021?\n\n\nWhat is the mean population of all of the municipalities in 1996, 2001, 2006, 2011, 2016, and 2021? Try to use the across function.\n\n\nAdvanced bonus exercise Run a t-test to see if the average population in 1996 is different from the average population in 2016.",
    "crumbs": [
      "02 - Getting Started"
    ]
  },
  {
    "objectID": "02-getting-started/index.html#solutions",
    "href": "02-getting-started/index.html#solutions",
    "title": "02 - Getting Started",
    "section": "Solutions",
    "text": "Solutions\n\n\nSee the solutions\n\n\nHow many different types of CSD (csd_type) are there in the dataset?\n\n\n\nShow code\ntowny %&gt;%\n  count(csd_type)\n\n\n# A tibble: 5 × 2\n  csd_type         n\n  &lt;chr&gt;        &lt;int&gt;\n1 city            52\n2 municipality    68\n3 town            88\n4 township       195\n5 village         11\n\n\n\nHow many different types of CSD and status (status) are there in the dataset?\n\n\n\nShow code\ntowny %&gt;%\n  count(csd_type, status)\n\n\n# A tibble: 10 × 3\n   csd_type     status          n\n   &lt;chr&gt;        &lt;chr&gt;       &lt;int&gt;\n 1 city         lower-tier     20\n 2 city         single-tier    32\n 3 municipality lower-tier     41\n 4 municipality single-tier    27\n 5 town         lower-tier     61\n 6 town         single-tier    27\n 7 township     lower-tier    113\n 8 township     single-tier    82\n 9 village      lower-tier      6\n10 village      single-tier     5\n\n\n\nWhat is the proportion of each type of CSD?\n\n\n\nShow code\ntowny %&gt;%\n  count(csd_type) %&gt;%\n  mutate(p = n / sum(n))\n\n\n# A tibble: 5 × 3\n  csd_type         n      p\n  &lt;chr&gt;        &lt;int&gt;  &lt;dbl&gt;\n1 city            52 0.126 \n2 municipality    68 0.164 \n3 town            88 0.213 \n4 township       195 0.471 \n5 village         11 0.0266\n\n\n\nWhat is the proportion of each status within type of CSD?\n\n\n\nShow code\ntowny %&gt;%\n  count(csd_type, status) %&gt;%\n  group_by(csd_type) %&gt;%\n  mutate(p = n / sum(n))\n\n\n# A tibble: 10 × 4\n# Groups:   csd_type [5]\n   csd_type     status          n     p\n   &lt;chr&gt;        &lt;chr&gt;       &lt;int&gt; &lt;dbl&gt;\n 1 city         lower-tier     20 0.385\n 2 city         single-tier    32 0.615\n 3 municipality lower-tier     41 0.603\n 4 municipality single-tier    27 0.397\n 5 town         lower-tier     61 0.693\n 6 town         single-tier    27 0.307\n 7 township     lower-tier    113 0.579\n 8 township     single-tier    82 0.421\n 9 village      lower-tier      6 0.545\n10 village      single-tier     5 0.455\n\n\n\nWhat is the mean population of all of the municipalities in 2021?\n\n\n\nShow code\ntowny %&gt;%\n  summarize(mean_pop = mean(population_2021, na.rm = TRUE))\n\n\n# A tibble: 1 × 1\n  mean_pop\n     &lt;dbl&gt;\n1   34142.\n\n\n\nWhat is the mean population by CSD Type in 2021?\n\n\n\nShow code\ntowny %&gt;%\n  group_by(csd_type) %&gt;%\n  summarize(mean_pop = mean(population_2021, na.rm = TRUE))\n\n\n# A tibble: 5 × 2\n  csd_type     mean_pop\n  &lt;chr&gt;           &lt;dbl&gt;\n1 city          200005.\n2 municipality   10102.\n3 town           22579.\n4 township        5367.\n5 village         1276.\n\n\n\nWhat is the mean population of all of the municipalities in 1996, 2001, 2006, 2011, 2016, and 2021? Try to use the across function.\n\n\n\nShow code\ntowny %&gt;%\n  summarize(across(starts_with(\"population\"), ~ mean(.x, na.rm = TRUE)))\n\n\n# A tibble: 1 × 6\n  population_1996 population_2001 population_2006 population_2011\n            &lt;dbl&gt;           &lt;dbl&gt;           &lt;dbl&gt;           &lt;dbl&gt;\n1          25866.          27538.          29173.          30838.\n# ℹ 2 more variables: population_2016 &lt;dbl&gt;, population_2021 &lt;dbl&gt;\n\n\n\nRun a t-test to see if the average population in 1996 is different from the average population in 2016.\n\n\n\nShow code\nt.test(towny$population_1996, towny$population_2016, paired = TRUE)\n\n\n\n    Paired t-test\n\ndata:  towny$population_1996 and towny$population_2016\nt = -4.3204, df = 410, p-value = 1.956e-05\nalternative hypothesis: true mean difference is not equal to 0\n95 percent confidence interval:\n -9593.244 -3593.423\nsample estimates:\nmean difference \n      -6593.333 \n\n\nor\n\n\nShow code (another way)\nt.test(population_1996 - population_2016 ~ 1, data = towny)\n\n\n\n    One Sample t-test\n\ndata:  population_1996 - population_2016\nt = -4.3204, df = 410, p-value = 1.956e-05\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -9593.244 -3593.423\nsample estimates:\nmean of x \n-6593.333",
    "crumbs": [
      "02 - Getting Started"
    ]
  },
  {
    "objectID": "05-design/index.html",
    "href": "05-design/index.html",
    "title": "05 - Sampling Designs in {srvyr}",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "05 - Sampling Designs"
    ]
  },
  {
    "objectID": "05-design/index.html#slides",
    "href": "05-design/index.html#slides",
    "title": "05 - Sampling Designs in {srvyr}",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "05 - Sampling Designs"
    ]
  },
  {
    "objectID": "05-design/index.html#your-turn",
    "href": "05-design/index.html#your-turn",
    "title": "05 - Sampling Designs in {srvyr}",
    "section": "Your Turn",
    "text": "Your Turn\n\nSet-up\n\nLoad necessary packages\n\nlibrary(dplyr)\nlibrary(srvyr)\nlibrary(srvyrexploR)\n\n\n\nLoad in data and preview it\n\nglimpse(chis_2023)\n\nRows: 21,671\nColumns: 98\n$ PUF1Y_ID    &lt;chr&gt; \"23021436\", \"23009146\", \"23005039\", \"23025815\", \"23010158\"…\n$ AH1V2       &lt;fct&gt; Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes…\n$ AH22        &lt;fct&gt; No, No, No, Yes, No, No, No, No, No, Yes, No, No, No, No, …\n$ SMKCUR30    &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, No, No, No, No, No…\n$ AB1         &lt;fct&gt; Very good, Excellent, Good, Fair, Good, Excellent, Fair, E…\n$ DIABETES    &lt;fct&gt; No, No, No, No, Yes, No, No, No, No, No, No, No, Yes, No, …\n$ BMI_P       &lt;dbl&gt; 35.55, 22.96, 25.61, 42.52, 24.71, 19.14, 34.19, 31.89, 24…\n$ RBMI        &lt;fct&gt; Obese 30.0+, Normal 18.5-24.99, Overweight 25.0-29.99, Obe…\n$ AB17        &lt;fct&gt; No, No, Yes, No, No, No, No, No, No, No, No, No, No, No, N…\n$ DSTRS12     &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, No, No, No, No, No…\n$ AB29V2      &lt;fct&gt; No, No, Borderline hypertension, Borderline hypertension, …\n$ SPK_ENG     &lt;fct&gt; Speak only English, Speak only English, Speak English very…\n$ POVLL2_P1V2 &lt;dbl&gt; 1.91, 6.00, 6.00, 3.31, 6.00, 6.00, 3.64, 1.21, 6.00, 1.78…\n$ POVLL       &lt;fct&gt; 100-199% FPL, 300% FPL and above, 300% FPL and above, 300%…\n$ SRAGE_P1    &lt;ord&gt; 35-39, 30-34, 40-44, 60-64, 60-64, 70-74, 60-64, 80-84, 55…\n$ SRSEX       &lt;fct&gt; Female, Male, Female, Male, Male, Female, Male, Female, Fe…\n$ OMBSRR_P1   &lt;fct&gt; \"White, NH\", \"White, NH\", \"White, NH\", \"Hispanic\", \"Asian,…\n$ RAKEDW0     &lt;dbl&gt; 377.76342, 5440.82230, 1510.73568, 189.35127, 816.45231, 1…\n$ RAKEDW1     &lt;dbl&gt; 379.67385, 5423.54632, 1524.34483, 189.04169, 823.97981, 1…\n$ RAKEDW2     &lt;dbl&gt; 377.67206, 5501.09481, 1518.55832, 189.20316, 813.52862, 1…\n$ RAKEDW3     &lt;dbl&gt; 391.87241, 5422.38467, 1518.87859, 189.67529, 812.89534, 1…\n$ RAKEDW4     &lt;dbl&gt; 383.52718, 5498.89734, 1501.34474, 187.64245, 811.32652, 1…\n$ RAKEDW5     &lt;dbl&gt; 379.36716, 5426.12142, 1497.12070, 189.18938, 797.03189, 1…\n$ RAKEDW6     &lt;dbl&gt; 372.56373, 5456.04102, 1525.81079, 188.55471, 807.12411, 1…\n$ RAKEDW7     &lt;dbl&gt; 373.88851, 5518.54856, 1507.19963, 191.93340, 814.08142, 1…\n$ RAKEDW8     &lt;dbl&gt; 386.89715, 5481.25082, 1532.46184, 185.18966, 829.15080, 1…\n$ RAKEDW9     &lt;dbl&gt; 380.30036, 5393.13753, 1482.86902, 192.35734, 799.39751, 1…\n$ RAKEDW10    &lt;dbl&gt; 396.80874, 5520.21994, 1512.59631, 188.96238, 823.09128, 1…\n$ RAKEDW11    &lt;dbl&gt; 381.20852, 5560.46991, 1513.11707, 191.01037, 809.26274, 1…\n$ RAKEDW12    &lt;dbl&gt; 370.08881, 5471.17062, 1490.55583, 190.17599, 828.57677, 1…\n$ RAKEDW13    &lt;dbl&gt; 381.63377, 5539.08920, 1503.27857, 190.02121, 825.39467, 1…\n$ RAKEDW14    &lt;dbl&gt; 387.73313, 5531.07340, 1518.70073, 185.98445, 816.56755, 1…\n$ RAKEDW15    &lt;dbl&gt; 373.96319, 5461.81096, 1488.12767, 186.04791, 1643.84520, …\n$ RAKEDW16    &lt;dbl&gt; 375.63387, 5425.88871, 1539.72594, 185.85065, 821.55347, 1…\n$ RAKEDW17    &lt;dbl&gt; 375.90868, 5413.12792, 1532.15331, 190.06499, 817.35716, 1…\n$ RAKEDW18    &lt;dbl&gt; 374.06907, 5409.66538, 1533.86418, 188.83553, 812.23683, 1…\n$ RAKEDW19    &lt;dbl&gt; 370.70155, 5335.39076, 3030.67675, 190.35148, 816.76742, 1…\n$ RAKEDW20    &lt;dbl&gt; 376.16361, 5542.36138, 1520.98004, 190.40463, 795.17561, 1…\n$ RAKEDW21    &lt;dbl&gt; 376.66374, 5438.99627, 1529.29484, 188.40847, 836.53256, 1…\n$ RAKEDW22    &lt;dbl&gt; 372.88810, 5407.19403, 1512.71368, 194.52411, 815.79660, 1…\n$ RAKEDW23    &lt;dbl&gt; 377.08123, 5511.05350, 1501.40871, 187.07666, 822.90284, 1…\n$ RAKEDW24    &lt;dbl&gt; 378.14045, 5447.60615, 1532.24763, 191.06993, 819.86697, 1…\n$ RAKEDW25    &lt;dbl&gt; 376.63905, 5469.76063, 1499.22198, 190.37025, 826.91579, 1…\n$ RAKEDW26    &lt;dbl&gt; 381.21627, 5424.59692, 1503.23199, 184.82446, 821.61634, 1…\n$ RAKEDW27    &lt;dbl&gt; 736.12313, 5392.15220, 1508.96013, 189.40821, 812.01521, 1…\n$ RAKEDW28    &lt;dbl&gt; 374.87207, 5399.98490, 1502.29676, 189.41890, 825.64499, 1…\n$ RAKEDW29    &lt;dbl&gt; 370.48273, 5609.82334, 1504.46387, 193.33981, 822.45949, 1…\n$ RAKEDW30    &lt;dbl&gt; 374.08421, 5478.56452, 1529.79756, 190.29283, 823.20287, 1…\n$ RAKEDW31    &lt;dbl&gt; 375.93944, 5531.46321, 1517.66913, 187.70034, 831.32689, 1…\n$ RAKEDW32    &lt;dbl&gt; 376.77720, 5454.02908, 1523.81288, 190.89860, 818.75318, 1…\n$ RAKEDW33    &lt;dbl&gt; 373.90451, 5359.04687, 1496.22835, 187.71859, 808.17450, 1…\n$ RAKEDW34    &lt;dbl&gt; 384.70325, 5372.82318, 1513.76344, 0.00000, 804.31669, 108…\n$ RAKEDW35    &lt;dbl&gt; 385.93101, 5540.75364, 1515.22343, 189.41755, 841.06640, 1…\n$ RAKEDW36    &lt;dbl&gt; 380.05346, 5367.44428, 1540.28237, 189.23365, 807.56729, 1…\n$ RAKEDW37    &lt;dbl&gt; 383.44112, 5499.94872, 1514.47617, 185.00184, 816.35734, 1…\n$ RAKEDW38    &lt;dbl&gt; 380.96955, 5365.76141, 1533.75380, 190.40014, 803.55967, 1…\n$ RAKEDW39    &lt;dbl&gt; 378.53806, 5408.72203, 1509.70452, 190.37006, 820.94697, 1…\n$ RAKEDW40    &lt;dbl&gt; 373.32674, 5618.84749, 1512.48396, 185.96514, 835.63063, 1…\n$ RAKEDW41    &lt;dbl&gt; 375.60203, 5442.86619, 1507.47738, 188.91416, 797.63435, 1…\n$ RAKEDW42    &lt;dbl&gt; 388.49579, 5468.25392, 1514.51889, 192.55026, 831.84420, 1…\n$ RAKEDW43    &lt;dbl&gt; 379.04804, 5657.00804, 1504.12435, 187.34036, 821.21227, 1…\n$ RAKEDW44    &lt;dbl&gt; 372.79291, 5412.42624, 1510.57340, 189.99224, 811.94509, 1…\n$ RAKEDW45    &lt;dbl&gt; 387.31702, 5380.19192, 1524.80976, 189.34965, 796.24619, 1…\n$ RAKEDW46    &lt;dbl&gt; 378.68040, 5455.72685, 1499.24639, 190.23263, 804.89197, 0…\n$ RAKEDW47    &lt;dbl&gt; 379.80074, 5479.65824, 1491.39890, 189.03908, 816.88308, 1…\n$ RAKEDW48    &lt;dbl&gt; 377.62516, 5370.25650, 1513.32532, 190.51240, 817.18117, 1…\n$ RAKEDW49    &lt;dbl&gt; 370.27108, 5374.99529, 1534.30372, 195.08625, 819.42334, 1…\n$ RAKEDW50    &lt;dbl&gt; 381.09146, 5623.57965, 1529.57536, 191.14493, 799.42589, 1…\n$ RAKEDW51    &lt;dbl&gt; 372.93695, 5609.68675, 1518.73015, 185.10356, 810.56250, 1…\n$ RAKEDW52    &lt;dbl&gt; 376.83386, 5416.01179, 1502.63013, 190.52319, 825.65017, 1…\n$ RAKEDW53    &lt;dbl&gt; 389.22721, 5464.54688, 1510.69820, 191.24272, 856.36362, 1…\n$ RAKEDW54    &lt;dbl&gt; 375.42718, 5516.58306, 1487.37912, 190.05101, 801.45826, 1…\n$ RAKEDW55    &lt;dbl&gt; 384.84576, 5492.52884, 1505.72717, 187.44860, 811.25627, 1…\n$ RAKEDW56    &lt;dbl&gt; 383.56347, 5647.00544, 1511.08240, 191.69014, 831.28855, 1…\n$ RAKEDW57    &lt;dbl&gt; 380.48633, 5606.80831, 1511.94020, 192.65707, 794.17496, 1…\n$ RAKEDW58    &lt;dbl&gt; 373.62795, 5757.47977, 1512.46551, 187.94741, 815.14317, 1…\n$ RAKEDW59    &lt;dbl&gt; 378.91924, 5477.69162, 1507.52377, 197.38367, 817.99470, 1…\n$ RAKEDW60    &lt;dbl&gt; 379.50452, 5477.71051, 1544.63224, 183.65976, 816.89856, 1…\n$ RAKEDW61    &lt;dbl&gt; 376.64977, 5452.65149, 1514.34498, 188.45472, 814.88040, 1…\n$ RAKEDW62    &lt;dbl&gt; 383.56295, 5491.55744, 1501.05195, 190.40998, 800.40138, 1…\n$ RAKEDW63    &lt;dbl&gt; 373.75339, 5419.57694, 1516.86197, 190.99482, 781.46844, 1…\n$ RAKEDW64    &lt;dbl&gt; 377.09404, 5438.36416, 1476.57247, 190.49051, 821.19084, 1…\n$ RAKEDW65    &lt;dbl&gt; 382.93142, 5410.64353, 1528.48797, 187.00515, 825.62659, 1…\n$ RAKEDW66    &lt;dbl&gt; 371.80213, 5483.77954, 1508.08229, 194.32258, 824.90959, 1…\n$ RAKEDW67    &lt;dbl&gt; 376.80663, 5494.01669, 1506.71439, 192.39086, 814.74078, 1…\n$ RAKEDW68    &lt;dbl&gt; 376.07679, 5382.78726, 1502.21384, 186.68741, 802.94914, 1…\n$ RAKEDW69    &lt;dbl&gt; 378.27932, 5393.35827, 1514.61013, 190.74435, 810.13806, 1…\n$ RAKEDW70    &lt;dbl&gt; 369.99802, 5501.78894, 1521.28708, 186.60201, 830.13613, 1…\n$ RAKEDW71    &lt;dbl&gt; 374.53516, 5499.46675, 1512.58341, 191.23757, 805.99356, 1…\n$ RAKEDW72    &lt;dbl&gt; 387.86304, 5404.68519, 1492.87434, 190.87869, 815.55435, 1…\n$ RAKEDW73    &lt;dbl&gt; 374.74585, 5491.12022, 1498.81821, 187.83433, 819.17877, 1…\n$ RAKEDW74    &lt;dbl&gt; 379.83108, 5413.06749, 1508.31555, 189.78261, 815.79475, 1…\n$ RAKEDW75    &lt;dbl&gt; 382.49719, 5487.47759, 1551.93120, 186.79749, 823.61018, 1…\n$ RAKEDW76    &lt;dbl&gt; 380.05337, 5418.50610, 1520.87989, 184.52873, 814.85938, 1…\n$ RAKEDW77    &lt;dbl&gt; 379.98450, 5434.79433, 1480.95731, 190.16368, 812.64372, 1…\n$ RAKEDW78    &lt;dbl&gt; 382.62349, 5523.48197, 1491.87493, 186.64661, 814.11781, 1…\n$ RAKEDW79    &lt;dbl&gt; 372.87396, 5462.95628, 1516.71710, 189.64531, 813.59217, 1…\n$ RAKEDW80    &lt;dbl&gt; 382.94937, 5420.72648, 1523.64843, 185.78273, 811.93065, 1…\n\nglimpse(nsduh_2023)\n\nRows: 56,705\nColumns: 22\n$ QUESTID2    &lt;dbl&gt; 10000053, 10000679, 10001208, 10001260, 10001588, 10004996…\n$ ANALWT2_C   &lt;dbl&gt; 3276.46987, 15630.08295, 4018.17239, 10711.70954, 8195.104…\n$ VESTR_C     &lt;dbl&gt; 40031, 40021, 40043, 40030, 40023, 40048, 40003, 40038, 40…\n$ VEREP       &lt;dbl&gt; 2, 2, 1, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 1…\n$ NICVAPMON   &lt;int&gt; 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ TOBMON      &lt;int&gt; 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1…\n$ ALCMON      &lt;int&gt; 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0…\n$ ILLMON      &lt;int&gt; 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1…\n$ ILTOBVAPALC &lt;int&gt; 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1…\n$ BNGDRKMON   &lt;int&gt; 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ IRPYUD5ALC  &lt;int&gt; 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ UD5ILLANY   &lt;int&gt; 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1…\n$ UD5ILALANY  &lt;int&gt; 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1…\n$ YMDELT      &lt;fct&gt; NA, NA, NA, No, NA, NA, NA, NA, NA, Yes, NA, NA, Yes, No, …\n$ YMDEYR      &lt;fct&gt; NA, NA, NA, No, NA, NA, NA, NA, NA, No, NA, NA, Yes, No, N…\n$ MDEIMPY     &lt;fct&gt; NA, NA, NA, No, NA, NA, NA, NA, NA, No, NA, NA, Yes, No, N…\n$ AMIPY       &lt;int&gt; 0, 1, 1, NA, 0, 0, 0, 0, 0, NA, 0, 0, NA, NA, 1, 0, 1, 0, …\n$ SMIPY       &lt;int&gt; 0, 0, 0, NA, 0, 0, 0, 0, 0, NA, 0, 0, NA, NA, 0, 0, 1, 0, …\n$ AGE3        &lt;fct&gt; 50-64, 35-49, 35-49, 12-13, 50-64, 18-20, 30-34, 65+, 30-3…\n$ NEWRACE2    &lt;fct&gt; \"Other\", \"White, NH\", \"Native HI/PI, NH\", \"Other\", \"More t…\n$ IRSEX       &lt;fct&gt; Male, Male, Female, Male, Male, Male, Male, Male, Female, …\n$ POVERTY3    &lt;fct&gt; 201%+ FPL, 201%+ FPL, 0-100% FPL, 0-100% FPL, 201%+ FPL, 2…\n\n\n\n\n\nExercises\nIn these exercises, you will be given a study and the data. How would you create the survey object with design variables or replicate weights, as applicable?\n\nCalifornia Health Interview Survey (CHIS) - 2023\n\nCHIS Design\nCHIS Resources\nCreate the survey object using the data.\n\n\n\n# Start with chis_2023\n\n\nNational Survey on Drug Use and Health (NSDUH) - 2023\n\nNSDUH Methodology\nNSDUH Download Data Files\nCreate the survey object using the data.\n\n\n\n# Start with nsduh_2023\n\n\nAdvanced bonus exercise\n\nFind a public use file of your own\nDownload the data\nRead in the data\nCreate the survey object",
    "crumbs": [
      "05 - Sampling Designs"
    ]
  },
  {
    "objectID": "05-design/index.html#solutions",
    "href": "05-design/index.html#solutions",
    "title": "05 - Sampling Designs in {srvyr}",
    "section": "Solutions",
    "text": "Solutions\n\n\nSee the solutions\n\nIn these exercises, you will be given a study and the data. How would you create the survey object with design variables or replicate weights, as applicable?\n\nCalifornia Health Interview Survey (CHIS) - 2023\n\nCHIS Design\nCHIS Resources\nCreate the survey object using the data.\n\n\n\n\nShow code\nchis_des &lt;-\n  chis_2023 %&gt;%\n  as_survey_rep(weights = RAKEDW0, repweights = RAKEDW1:RAKEDW80, type = \"other\", scale = 1, rscales = 1, mse = TRUE)\n\n# or\nchis_des2 &lt;-\n  chis_2023 %&gt;%\n  as_survey_rep(weights = RAKEDW0, repweights = RAKEDW1:RAKEDW80, type = \"JKn\", scale = 1, rscales = 1, mse = TRUE)\n\nchis_des\n\n\nCall: Called via srvyr\nwith 80 replicates and MSE variances.\nSampling variables:\n  - repweights: `RAKEDW1 + RAKEDW2 + RAKEDW3 + RAKEDW4 + RAKEDW5 + RAKEDW6 +\n    RAKEDW7 + RAKEDW8 + RAKEDW9 + RAKEDW10 + RAKEDW11 + RAKEDW12 + RAKEDW13 +\n    RAKEDW14 + RAKEDW15 + RAKEDW16 + RAKEDW17 + RAKEDW18 + RAKEDW19 + RAKEDW20\n    + RAKEDW21 + RAKEDW22 + RAKEDW23 + RAKEDW24 + RAKEDW25 + RAKEDW26 +\n    RAKEDW27 + RAKEDW28 + RAKEDW29 + RAKEDW30 + RAKEDW31 + RAKEDW32 + RAKEDW33\n    + RAKEDW34 + RAKEDW35 + RAKEDW36 + RAKEDW37 + RAKEDW38 + RAKEDW39 +\n    RAKEDW40 + RAKEDW41 + RAKEDW42 + RAKEDW43 + RAKEDW44 + RAKEDW45 + RAKEDW46\n    + RAKEDW47 + RAKEDW48 + RAKEDW49 + RAKEDW50 + RAKEDW51 + RAKEDW52 +\n    RAKEDW53 + RAKEDW54 + RAKEDW55 + RAKEDW56 + RAKEDW57 + RAKEDW58 + RAKEDW59\n    + RAKEDW60 + RAKEDW61 + RAKEDW62 + RAKEDW63 + RAKEDW64 + RAKEDW65 +\n    RAKEDW66 + RAKEDW67 + RAKEDW68 + RAKEDW69 + RAKEDW70 + RAKEDW71 + RAKEDW72\n    + RAKEDW73 + RAKEDW74 + RAKEDW75 + RAKEDW76 + RAKEDW77 + RAKEDW78 +\n    RAKEDW79 + RAKEDW80` \n  - weights: RAKEDW0 \nData variables: \n  - PUF1Y_ID (chr), AH1V2 (fct), AH22 (fct), SMKCUR30 (fct), AB1 (fct),\n    DIABETES (fct), BMI_P (dbl), RBMI (fct), AB17 (fct), DSTRS12 (fct), AB29V2\n    (fct), SPK_ENG (fct), POVLL2_P1V2 (dbl), POVLL (fct), SRAGE_P1 (ord), SRSEX\n    (fct), OMBSRR_P1 (fct), RAKEDW0 (dbl), RAKEDW1 (dbl), RAKEDW2 (dbl),\n    RAKEDW3 (dbl), RAKEDW4 (dbl), RAKEDW5 (dbl), RAKEDW6 (dbl), RAKEDW7 (dbl),\n    RAKEDW8 (dbl), RAKEDW9 (dbl), RAKEDW10 (dbl), RAKEDW11 (dbl), RAKEDW12\n    (dbl), RAKEDW13 (dbl), RAKEDW14 (dbl), RAKEDW15 (dbl), RAKEDW16 (dbl),\n    RAKEDW17 (dbl), RAKEDW18 (dbl), RAKEDW19 (dbl), RAKEDW20 (dbl), RAKEDW21\n    (dbl), RAKEDW22 (dbl), RAKEDW23 (dbl), RAKEDW24 (dbl), RAKEDW25 (dbl),\n    RAKEDW26 (dbl), RAKEDW27 (dbl), RAKEDW28 (dbl), RAKEDW29 (dbl), RAKEDW30\n    (dbl), RAKEDW31 (dbl), RAKEDW32 (dbl), RAKEDW33 (dbl), RAKEDW34 (dbl),\n    RAKEDW35 (dbl), RAKEDW36 (dbl), RAKEDW37 (dbl), RAKEDW38 (dbl), RAKEDW39\n    (dbl), RAKEDW40 (dbl), RAKEDW41 (dbl), RAKEDW42 (dbl), RAKEDW43 (dbl),\n    RAKEDW44 (dbl), RAKEDW45 (dbl), RAKEDW46 (dbl), RAKEDW47 (dbl), RAKEDW48\n    (dbl), RAKEDW49 (dbl), RAKEDW50 (dbl), RAKEDW51 (dbl), RAKEDW52 (dbl),\n    RAKEDW53 (dbl), RAKEDW54 (dbl), RAKEDW55 (dbl), RAKEDW56 (dbl), RAKEDW57\n    (dbl), RAKEDW58 (dbl), RAKEDW59 (dbl), RAKEDW60 (dbl), RAKEDW61 (dbl),\n    RAKEDW62 (dbl), RAKEDW63 (dbl), RAKEDW64 (dbl), RAKEDW65 (dbl), RAKEDW66\n    (dbl), RAKEDW67 (dbl), RAKEDW68 (dbl), RAKEDW69 (dbl), RAKEDW70 (dbl),\n    RAKEDW71 (dbl), RAKEDW72 (dbl), RAKEDW73 (dbl), RAKEDW74 (dbl), RAKEDW75\n    (dbl), RAKEDW76 (dbl), RAKEDW77 (dbl), RAKEDW78 (dbl), RAKEDW79 (dbl),\n    RAKEDW80 (dbl)\n\n\n\nNational Survey on Drug Use and Health (NSDUH) - 2023\n\nNSDUH Methodology\nNSDUH Download Data Files\nCreate the survey object using the data.\n\n\n\n\nShow code\nnsduh_des &lt;-\n  nsduh_2023 %&gt;%\n  as_survey_design(weights = ANALWT2_C, strata = VESTR_C, ids = VEREP, nest = TRUE)\n\nnsduh_des\n\n\nStratified 1 - level Cluster Sampling design (with replacement)\nWith (100) clusters.\nCalled via srvyr\nSampling variables:\n  - ids: VEREP \n  - strata: VESTR_C \n  - weights: ANALWT2_C \nData variables: \n  - QUESTID2 (dbl), ANALWT2_C (dbl), VESTR_C (dbl), VEREP (dbl), NICVAPMON\n    (int), TOBMON (int), ALCMON (int), ILLMON (int), ILTOBVAPALC (int),\n    BNGDRKMON (int), IRPYUD5ALC (int), UD5ILLANY (int), UD5ILALANY (int),\n    YMDELT (fct), YMDEYR (fct), MDEIMPY (fct), AMIPY (int), SMIPY (int), AGE3\n    (fct), NEWRACE2 (fct), IRSEX (fct), POVERTY3 (fct)",
    "crumbs": [
      "05 - Sampling Designs"
    ]
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#introduction",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#introduction",
    "title": "Descriptive Analysis",
    "section": "Introduction",
    "text": "Introduction\nDescriptive analyses lay the groundwork for the next steps of running statistical tests or developing models.\n\nCalculate point estimates of…\n\nUnknown population parameters, such as mean.\n\n\n\n\nUncertainty estimates, such as confidence intervals."
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#types-of-data-1",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#types-of-data-1",
    "title": "Descriptive Analysis",
    "section": "Types of data",
    "text": "Types of data\n\nCategorical/nominal data: variables with levels or descriptions that cannot be ordered, such as the region of the country (North, South, East, and West)\nOrdinal data: variables that can be ordered, such as those from a Likert scale (strongly disagree, disagree, agree, and strongly agree)\nDiscrete data: variables that are counted or measured, such as number of children\nContinuous data: variables that are measured and whose values can lie anywhere on an interval, such as income"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#measures-of-distribution",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#measures-of-distribution",
    "title": "Descriptive Analysis",
    "section": "Measures of distribution",
    "text": "Measures of distribution\nMeasures of distribution describe how often an event or response occurs.\nWe cover the following functions:\n\nCount of observations (survey_count() and survey_tally())\nSummation of variables (survey_total())"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#measures-of-central-tendency",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#measures-of-central-tendency",
    "title": "Descriptive Analysis",
    "section": "Measures of central tendency",
    "text": "Measures of central tendency\nMeasures of central tendency find the central (or average) responses. These measures include means and medians.\n\nMeans and proportions (survey_mean() and survey_prop())\nQuantiles and medians (survey_quantile() and survey_median())"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#measures-of-dispersion",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#measures-of-dispersion",
    "title": "Descriptive Analysis",
    "section": "Measures of dispersion",
    "text": "Measures of dispersion\nMeasures of dispersion describe how data spread around the central tendency for continuous variables. These measures include standard deviations and variances.\n\nVariances and standard deviations (survey_var() and survey_sd())"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#measure-of-relationships",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#measure-of-relationships",
    "title": "Descriptive Analysis",
    "section": "Measure of relationships",
    "text": "Measure of relationships\nMeasures of relationship describe how variables relate to each other. These measures include correlations and ratios.\n\nCorrelations (survey_corr())\nRatios (survey_ratio())"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#overview-of-survey-analysis-using-the-srvyr-package",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#overview-of-survey-analysis-using-the-srvyr-package",
    "title": "Descriptive Analysis",
    "section": "Overview of survey analysis using the {srvyr} package",
    "text": "Overview of survey analysis using the {srvyr} package\n\nCreate a tbl_svy object (a survey design object) using: as_survey_design() or as_survey_rep()"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#overview-of-survey-analysis-using-the-srvyr-package-1",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#overview-of-survey-analysis-using-the-srvyr-package-1",
    "title": "Descriptive Analysis",
    "section": "Overview of survey analysis using the {srvyr} package",
    "text": "Overview of survey analysis using the {srvyr} package\n\n\nFor ANES:\n\nanes_des &lt;- anes_adjwgt %&gt;%\n  as_survey_design(\n    weights = Weight,\n    strata = Stratum,\n    ids = VarUnit,\n    nest = TRUE\n  )\n\n\nFor RECS:\n\nrecs_des &lt;- recs_2020 %&gt;%\n  as_survey_rep(\n    weights = NWEIGHT,\n    repweights = NWEIGHT1:NWEIGHT60,\n    type = \"JK1\",\n    scale = 59 / 60,\n    mse = TRUE\n  )"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#overview-of-survey-analysis-using-the-srvyr-package-2",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#overview-of-survey-analysis-using-the-srvyr-package-2",
    "title": "Descriptive Analysis",
    "section": "Overview of survey analysis using the {srvyr} package",
    "text": "Overview of survey analysis using the {srvyr} package\n\n\nCreate a tbl_svy object (a survey object) using: as_survey_design() or as_survey_rep()\n\n\n\n\nSubset data (if needed) using filter() (to create subpopulations)\nSpecify domains of analysis using group_by()\n\n\n\nSpecify variables to calculate, including means, totals, proportions, quantiles, and more"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_count",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_count",
    "title": "Descriptive Analysis",
    "section": "survey_count()",
    "text": "survey_count()\n\nCalculate the estimated observation counts for a given variable or combination of variables\nApplied to categorical data\nSometimes called “cross-tabulations” or “cross-tabs”\nsurvey_count() functions similarly to dplyr::count() in that it is NOT called within summarize()"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_count-syntax",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_count-syntax",
    "title": "Descriptive Analysis",
    "section": "survey_count(): syntax",
    "text": "survey_count(): syntax\n\nsurvey_count(\n  x,\n  ...,\n  wt = NULL,\n  sort = FALSE,\n  name = \"n\",\n  .drop = dplyr::group_by_drop_default(x),\n  vartype = c(\"se\", \"ci\", \"var\", \"cv\")\n)"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_count-example",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_count-example",
    "title": "Descriptive Analysis",
    "section": "survey_count: example",
    "text": "survey_count: example\nCalculate the estimated number of households in the U.S. using (RECS) data:\n\nrecs_des %&gt;%\n  survey_count()\n\n\n\n\n# A tibble: 1 × 2\n           n  n_se\n       &lt;dbl&gt; &lt;dbl&gt;\n1 123529025. 0.148"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_count-subgroup-example",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_count-subgroup-example",
    "title": "Descriptive Analysis",
    "section": "survey_count: subgroup example",
    "text": "survey_count: subgroup example\nCalculate the estimated number of observations for Region and Division:\n\nrecs_des %&gt;%\n  survey_count(Region, Division, \n               name = \"N\")\n\n\n\n\n# A tibble: 10 × 4\n   Region    Division                   N         N_se\n   &lt;fct&gt;     &lt;fct&gt;                  &lt;dbl&gt;        &lt;dbl&gt;\n 1 Northeast New England         5876166  0.0000000137\n 2 Northeast Middle Atlantic    16043503  0.0000000487\n 3 Midwest   East North Central 18546912  0.000000437 \n 4 Midwest   West North Central  8495815  0.0000000177\n 5 South     South Atlantic     24843261  0.0000000418\n 6 South     East South Central  7380717. 0.114       \n 7 South     West South Central 14619094  0.000488    \n 8 West      Mountain North      4615844  0.119       \n 9 West      Mountain South      4602070  0.0000000492\n10 West      Pacific            18505643. 0.00000295"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_total",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_total",
    "title": "Descriptive Analysis",
    "section": "survey_total()",
    "text": "survey_total()\n\nCalculate the estimated total quantity in a population\nApplied to continuous data\nMust be called within summarize()\nIf used with no x-variable, survey_total() calculates a population count estimate within summarize()"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_total-syntax",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_total-syntax",
    "title": "Descriptive Analysis",
    "section": "survey_total(): syntax",
    "text": "survey_total(): syntax\n\nsurvey_total(\n  x,\n  na.rm = FALSE,\n  vartype = c(\"se\", \"ci\", \"var\", \"cv\"),\n  level = 0.95,\n  deff = FALSE,\n  df = NULL\n)"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_total-example",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_total-example",
    "title": "Descriptive Analysis",
    "section": "survey_total(): example",
    "text": "survey_total(): example\nCalculate the U.S. population count estimate:\n\nrecs_des %&gt;%\n  summarize(Tot = survey_total())\n\n\n\n\n# A tibble: 1 × 2\n         Tot Tot_se\n       &lt;dbl&gt;  &lt;dbl&gt;\n1 123529025.  0.148"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_total-continuous-data-example",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_total-continuous-data-example",
    "title": "Descriptive Analysis",
    "section": "survey_total(): continuous data example",
    "text": "survey_total(): continuous data example\nCalculate the total cost of electricity in whole dollars:\n\nrecs_des %&gt;%\n  summarize(elec_bill = survey_total(DOLLAREL))\n\n\n\n\n# A tibble: 1 × 2\n      elec_bill elec_bill_se\n          &lt;dbl&gt;        &lt;dbl&gt;\n1 170473527909.   664893504."
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_total-group_by-example",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_total-group_by-example",
    "title": "Descriptive Analysis",
    "section": "survey_total(): group_by() example",
    "text": "survey_total(): group_by() example\nCalculate the variation in the cost of electricity in whole dollars across regions:\n\nrecs_des %&gt;%\n  group_by(Region) %&gt;%\n  summarize(elec_bill = survey_total(DOLLAREL,\n    vartype = \"ci\"\n  ))\n\n\n\n\n# A tibble: 4 × 4\n  Region       elec_bill elec_bill_low elec_bill_upp\n  &lt;fct&gt;            &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;\n1 Northeast 29430369947.  28788987554.  30071752341.\n2 Midwest   34972544751.  34339576041.  35605513460.\n3 South     72496840204.  71534780902.  73458899506.\n4 West      33573773008.  32909111702.  34238434313."
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#unweighted",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#unweighted",
    "title": "Descriptive Analysis",
    "section": "unweighted()",
    "text": "unweighted()\n\nSometimes, it is helpful to calculate an unweighted estimate of a given variable\nunweighted() does not extrapolate to a population estimate\nUsed in conjunction with any {dplyr} functions"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#unweighted-example-1",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#unweighted-example-1",
    "title": "Descriptive Analysis",
    "section": "unweighted(): example",
    "text": "unweighted(): example\nCalculate the unweighted average household electricity cost:\n\nrecs_des %&gt;%\n  summarize(\n    elec_bill = survey_mean(DOLLAREL),\n    elec_unweight = unweighted(mean(DOLLAREL))\n  )\n\n\n\n\n# A tibble: 1 × 3\n  elec_bill elec_bill_se elec_unweight\n      &lt;dbl&gt;        &lt;dbl&gt;         &lt;dbl&gt;\n1     1380.         5.38         1425."
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_mean-and-survey_prop",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_mean-and-survey_prop",
    "title": "Descriptive Analysis",
    "section": "survey_mean() and survey_prop()",
    "text": "survey_mean() and survey_prop()\n\nCalculate the estimated observation counts for a given variable or combination of variables\nsurvey_mean() applies to continuous data, survey_prop() to categorical data\nMust be called within summarize()"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_mean-syntax",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_mean-syntax",
    "title": "Descriptive Analysis",
    "section": "survey_mean(): syntax",
    "text": "survey_mean(): syntax\n\nsurvey_mean(\n  x,\n  na.rm = FALSE,\n  vartype = c(\"se\", \"ci\", \"var\", \"cv\"),\n  level = 0.95,\n  proportion = FALSE,\n  prop_method = c(\"logit\", \"likelihood\", \"asin\", \"beta\", \"mean\"),\n  deff = FALSE,\n  df = NULL\n)"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_prop-syntax",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_prop-syntax",
    "title": "Descriptive Analysis",
    "section": "survey_prop(): syntax",
    "text": "survey_prop(): syntax\n\nsurvey_prop(\n  na.rm = FALSE,\n  vartype = c(\"se\", \"ci\", \"var\", \"cv\"),\n  level = 0.95,\n  proportion = TRUE,\n  prop_method =\n    c(\"logit\", \"likelihood\", \"asin\", \"beta\", \"mean\", \"xlogit\"),\n  deff = FALSE,\n  df = NULL\n)"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_prop-one-variable-proportion-example",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_prop-one-variable-proportion-example",
    "title": "Descriptive Analysis",
    "section": "survey_prop(): one variable proportion example",
    "text": "survey_prop(): one variable proportion example\nCalculate the proportion of households in each region in the RECS data:\n\nrecs_des %&gt;%\n  group_by(Region) %&gt;%\n  summarize(p = survey_prop())\n\n\n\n\n# A tibble: 4 × 3\n  Region        p     p_se\n  &lt;fct&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 Northeast 0.177 2.12e-10\n2 Midwest   0.219 2.62e-10\n3 South     0.379 7.40e-10\n4 West      0.224 8.16e-10"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_mean-one-variable-proportion-example",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_mean-one-variable-proportion-example",
    "title": "Descriptive Analysis",
    "section": "survey_mean(): one variable proportion example",
    "text": "survey_mean(): one variable proportion example\nCalculate the proportion of people in each region in the RECS data:\n\nrecs_des %&gt;%\n  group_by(Region) %&gt;%\n  summarize(p = survey_mean())\n\n\n\n# A tibble: 4 × 3\n  Region        p     p_se\n  &lt;fct&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 Northeast 0.177 2.12e-10\n2 Midwest   0.219 2.62e-10\n3 South     0.379 7.40e-10\n4 West      0.224 8.16e-10"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_prop-conditional-proportions-example",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_prop-conditional-proportions-example",
    "title": "Descriptive Analysis",
    "section": "survey_prop(): conditional proportions example",
    "text": "survey_prop(): conditional proportions example\nCalculate the proportion of housing units by Region and whether air conditioning (A/C) is used:\n\nrecs_des %&gt;%\n  group_by(Region, ACUsed) %&gt;%\n  summarize(p = survey_prop())\n\n\n\n\n# A tibble: 8 × 4\n# Groups:   Region [4]\n  Region    ACUsed      p    p_se\n  &lt;fct&gt;     &lt;lgl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 Northeast FALSE  0.110  0.00590\n2 Northeast TRUE   0.890  0.00590\n3 Midwest   FALSE  0.0666 0.00508\n4 Midwest   TRUE   0.933  0.00508\n5 South     FALSE  0.0581 0.00278\n6 South     TRUE   0.942  0.00278\n7 West      FALSE  0.255  0.00759\n8 West      TRUE   0.745  0.00759"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_prop-joint-proportions-example",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_prop-joint-proportions-example",
    "title": "Descriptive Analysis",
    "section": "survey_prop(): joint proportions example",
    "text": "survey_prop(): joint proportions example\nCalculate the joint proportion for each combination using interact():\n\nrecs_des %&gt;%\n  group_by(interact(Region, ACUsed)) %&gt;%\n  summarize(p = survey_prop())\n\n\n\n\n# A tibble: 8 × 4\n  Region    ACUsed      p    p_se\n  &lt;fct&gt;     &lt;lgl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 Northeast FALSE  0.0196 0.00105\n2 Northeast TRUE   0.158  0.00105\n3 Midwest   FALSE  0.0146 0.00111\n4 Midwest   TRUE   0.204  0.00111\n5 South     FALSE  0.0220 0.00106\n6 South     TRUE   0.357  0.00106\n7 West      FALSE  0.0573 0.00170\n8 West      TRUE   0.167  0.00170"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_mean-overall-mean-example",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_mean-overall-mean-example",
    "title": "Descriptive Analysis",
    "section": "survey_mean(): overall mean example",
    "text": "survey_mean(): overall mean example\nCalculate the estimated average cost of electricity in the U.S.:\n\nrecs_des %&gt;%\n  summarize(\n    elec_bill = survey_mean(DOLLAREL, vartype = c(\"se\", \"ci\")\n  ))\n\n\n\n\n# A tibble: 1 × 4\n  elec_bill elec_bill_se elec_bill_low elec_bill_upp\n      &lt;dbl&gt;        &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;\n1     1380.         5.38         1369.         1391."
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_mean-mean-by-subgroup-example",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_mean-mean-by-subgroup-example",
    "title": "Descriptive Analysis",
    "section": "survey_mean(): mean by subgroup example",
    "text": "survey_mean(): mean by subgroup example\nCalculate the estimated average cost of electricity in the U.S. by each region:\n\nrecs_des %&gt;%\n  group_by(Region) %&gt;%\n  summarize(elec_bill = survey_mean(DOLLAREL))\n\n\n\n\n# A tibble: 4 × 3\n  Region    elec_bill elec_bill_se\n  &lt;fct&gt;         &lt;dbl&gt;        &lt;dbl&gt;\n1 Northeast     1343.         14.6\n2 Midwest       1293.         11.7\n3 South         1548.         10.3\n4 West          1211.         12.0"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_quantile-and-survey_median-quantiles-and-medians",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_quantile-and-survey_median-quantiles-and-medians",
    "title": "Descriptive Analysis",
    "section": "survey_quantile() and survey_median(): Quantiles and Medians",
    "text": "survey_quantile() and survey_median(): Quantiles and Medians\n\nCalculate quantiles at specific points\nBecause median is a special, common case of quantiles, there is the survey_median() function\nMust be called within summarize()"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_quantile-syntax",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_quantile-syntax",
    "title": "Descriptive Analysis",
    "section": "survey_quantile(): syntax",
    "text": "survey_quantile(): syntax\n\nsurvey_quantile(\n  x,\n  quantiles,\n  na.rm = FALSE,\n  vartype = c(\"se\", \"ci\", \"var\", \"cv\"),\n  level = 0.95,\n  interval_type = \n    c(\"mean\", \"beta\", \"xlogit\", \"asin\", \"score\", \"quantile\"),\n  qrule = c(\"math\", \"school\", \"shahvaish\", \"hf1\", \"hf2\", \"hf3\", \n            \"hf4\", \"hf5\", \"hf6\", \"hf7\", \"hf8\", \"hf9\"),\n  df = NULL\n)"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_quantile-example",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_quantile-example",
    "title": "Descriptive Analysis",
    "section": "survey_quantile(): example",
    "text": "survey_quantile(): example\nCalculate the first quartile (p=0.25), the median (p=0.5), and the third quartile (p=0.75) of electric bills:\n\nrecs_des %&gt;%\n  summarize(elec_bill = survey_quantile(DOLLAREL,\n    quantiles = c(0.25, 0.5, 0.75)\n  ))\n\n\n\n\n# A tibble: 1 × 6\n  elec_bill_q25 elec_bill_q50 elec_bill_q75 elec_bill_q25_se elec_bill_q50_se\n          &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;            &lt;dbl&gt;\n1          795.         1215.         1770.             5.69             6.33\n# ℹ 1 more variable: elec_bill_q75_se &lt;dbl&gt;"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_median-example",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_median-example",
    "title": "Descriptive Analysis",
    "section": "survey_median(): example",
    "text": "survey_median(): example\nCalculate the estimated median cost of electricity in the U.S.:\n\nrecs_des %&gt;%\n  summarize(elec_bill = survey_median(DOLLAREL))\n\n\n\n\n# A tibble: 1 × 2\n  elec_bill elec_bill_se\n      &lt;dbl&gt;        &lt;dbl&gt;\n1     1215.         6.33"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#filter",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#filter",
    "title": "Descriptive Analysis",
    "section": "filter()",
    "text": "filter()\n\nSubpopulation analysis\nUse filter() to subset a survey object for analysis\nMust be done after creating the survey design object"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#filter-example-1",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#filter-example-1",
    "title": "Descriptive Analysis",
    "section": "filter(): example",
    "text": "filter(): example\nCalculate an estimate of the average amount spent on natural gas among housing units using natural gas:\n\nrecs_des %&gt;%\n  filter(BTUNG &gt; 0) %&gt;%\n  summarize(NG_mean = survey_mean(DOLLARNG,\n    vartype = c(\"se\", \"ci\")\n  ))\n\n\n\n\n# A tibble: 1 × 4\n  NG_mean NG_mean_se NG_mean_low NG_mean_upp\n    &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt;       &lt;dbl&gt;\n1    631.       4.64        621.        640."
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#cascade",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#cascade",
    "title": "Descriptive Analysis",
    "section": "cascade()",
    "text": "cascade()\n\nCreates a summary row for the estimate representing the entire population\nThe {srvyr} package has the convenient cascade() function\nUsed instead of summarize()"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#cascade-syntax",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#cascade-syntax",
    "title": "Descriptive Analysis",
    "section": "cascade(): syntax",
    "text": "cascade(): syntax\ncascade(\n  .data, \n  ..., \n  .fill = NA, \n  .fill_level_top = FALSE, \n  .groupings = NULL\n)"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#cascade-example",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#cascade-example",
    "title": "Descriptive Analysis",
    "section": "cascade(): example",
    "text": "cascade(): example\nCalculate the average household electricity cost. Let’s build on it to show the features of cascade():\n\nrecs_des %&gt;%\n  cascade(DOLLAREL_mn = survey_mean(DOLLAREL))\n\n\n\n\n# A tibble: 1 × 2\n  DOLLAREL_mn DOLLAREL_mn_se\n        &lt;dbl&gt;          &lt;dbl&gt;\n1       1380.           5.38"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#cascade-example-1",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#cascade-example-1",
    "title": "Descriptive Analysis",
    "section": "cascade(): example",
    "text": "cascade(): example\nGroup by region:\n\nrecs_des %&gt;%\n  group_by(Region) %&gt;%\n  cascade(DOLLAREL_mn = survey_mean(DOLLAREL))\n\n\n\n\n# A tibble: 5 × 3\n  Region    DOLLAREL_mn DOLLAREL_mn_se\n  &lt;fct&gt;           &lt;dbl&gt;          &lt;dbl&gt;\n1 Northeast       1343.          14.6 \n2 Midwest         1293.          11.7 \n3 South           1548.          10.3 \n4 West            1211.          12.0 \n5 &lt;NA&gt;            1380.           5.38"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#cascade-example-2",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#cascade-example-2",
    "title": "Descriptive Analysis",
    "section": "cascade(): example",
    "text": "cascade(): example\nGive the summary row a better name with .fill:\n\nrecs_des %&gt;%\n  group_by(Region) %&gt;%\n  cascade(\n    DOLLAREL_mn = survey_mean(DOLLAREL),\n    .fill = \"National\"\n  )\n\n\n\n\n# A tibble: 5 × 3\n  Region    DOLLAREL_mn DOLLAREL_mn_se\n  &lt;fct&gt;           &lt;dbl&gt;          &lt;dbl&gt;\n1 Northeast       1343.          14.6 \n2 Midwest         1293.          11.7 \n3 South           1548.          10.3 \n4 West            1211.          12.0 \n5 National        1380.           5.38"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#cascade-example-3",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#cascade-example-3",
    "title": "Descriptive Analysis",
    "section": "cascade(): example",
    "text": "cascade(): example\nMove the summary row to the top with .fill_level_top = TRUE:\n\nrecs_des %&gt;%\n  group_by(Region) %&gt;%\n  cascade(\n    DOLLAREL_mn = survey_mean(DOLLAREL),\n    .fill = \"National\",\n    .fill_level_top = TRUE\n  )\n\n\n\n\n# A tibble: 5 × 3\n  Region    DOLLAREL_mn DOLLAREL_mn_se\n  &lt;fct&gt;           &lt;dbl&gt;          &lt;dbl&gt;\n1 National        1380.           5.38\n2 Northeast       1343.          14.6 \n3 Midwest         1293.          11.7 \n4 South           1548.          10.3 \n5 West            1211.          12.0"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#summary",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#summary",
    "title": "Descriptive Analysis",
    "section": "Summary",
    "text": "Summary\nDescriptive analyses…\n\nlay the groundwork for the next steps of running statistical tests or developing models\nhelp us glean insight into the data, the underlying population, and any unique aspects of the data or population"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#summary-1",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#summary-1",
    "title": "Descriptive Analysis",
    "section": "Summary",
    "text": "Summary\nThe {srvyr} package has functions for calculating measures of distribution, central tendency, relationship, and dispersion.\n\nDepending on the type of data, we determine what statistics to calculate"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#summary-2",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#summary-2",
    "title": "Descriptive Analysis",
    "section": "Summary",
    "text": "Summary\n\nWe create variables after creating the design object, running the functions on the tbl_svy object\nfilter() and group_by() precede the calculation functions, but still follow the design object\nThere are additional functions for unweighted analyses and calculating summary rows"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_corr",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_corr",
    "title": "Descriptive Analysis",
    "section": "survey_corr()",
    "text": "survey_corr()\n\nMeasure the linear relationship between two continuous variables\nThe most commonly used method is Pearson’s correlation\nRanges between –1 and 1"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_corr-syntax",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_corr-syntax",
    "title": "Descriptive Analysis",
    "section": "survey_corr(): syntax",
    "text": "survey_corr(): syntax\nsurvey_corr(\n  x,\n  y,\n  na.rm = FALSE,\n  vartype = c(\"se\", \"ci\", \"var\", \"cv\"),\n  level = 0.95,\n  df = NULL\n)"
  },
  {
    "objectID": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_corr-example",
    "href": "03-descriptive-analysis/slides-03-descriptive-analysis.html#survey_corr-example",
    "title": "Descriptive Analysis",
    "section": "survey_corr(): example",
    "text": "survey_corr(): example\nCalculate the correlation between the total square footage of homes and electricity consumption:\n\nrecs_des %&gt;%\n  summarize(SQFT_Elec_Corr = survey_corr(TOTSQFT_EN, BTUEL))\n\n\n\n\n# A tibble: 1 × 2\n  SQFT_Elec_Corr SQFT_Elec_Corr_se\n           &lt;dbl&gt;             &lt;dbl&gt;\n1          0.417           0.00689"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Complex Survey Data Analysis: A Tidy Introduction with {srvyr} and {survey}",
    "section": "",
    "text": "🗓️ Date: 8 August 2025\n🕗 Time: 13:00 - 16:30 ET",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#abstract",
    "href": "index.html#abstract",
    "title": "Complex Survey Data Analysis: A Tidy Introduction with {srvyr} and {survey}",
    "section": "Abstract",
    "text": "Abstract\nThis interactive tutorial will introduce how to conduct analysis of survey data in R. We will first introduce a unifying workflow of tidy survey analysis in R for analysis of survey microdata with weights. We will cover topics of descriptive analysis, including functions to obtain weighted proportions, means, quantiles, and correlations from survey data. Then, we will discuss some statistical testing, including t-tests for comparing means and χ-squared tests for comparing proportions. Finally, we will discuss common probability sampling designs and how to create the survey design objects in R to account for the sampling design. The tutorial will include time for exercises using data from the 2020 American National Election Study and the 2020 Residential Energy Consumption Survey, so you can get hands-on experience with the functions. We will be using Posit Cloud, so you do not need to have R or RStudio preinstalled on your computer. For the best learning experience, we recommend you have some prior experience with R and the tidyverse, including familiarity with mutate(), summarize(), count(), and group_by().",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#instructors",
    "href": "index.html#instructors",
    "title": "Complex Survey Data Analysis: A Tidy Introduction with {srvyr} and {survey}",
    "section": "Instructors",
    "text": "Instructors\nDr. Stephanie Zimmer is a senior survey statistician with 10 years experience in survey sampling and design, survey weighting and analysis, and data management. She is an expert statistical programmer in R, SAS, and SUDAAN. She earned her PhD in Statistics from Iowa State University and her BS in Statistics from NC State. After earning the RStudio Tidyverse Trainer certification, she co-taught two courses on tidy survey analysis in R. She is currently a Senior Research Statistician at RTI International.\n  \nDr. Rebecca Powell is the director of Data & Research Operations at Fors Marsh. Her research interests focus on visual design of questionnaires and contact materials. Dr. Powell is a Certified RStudio Tidyverse Trainer and has taught courses and webinars on data management in R and tidy survey analysis in R at both AAPOR and MAPOR. She has a PhD in Survey Research and Methodology from the University of Nebraska-Lincoln and a BS and MS in Applied Statistics from Rochester Institute of Technology.\n \nIsabella Velásquez is a Senior Product Marketing Manager at Posit, PBC. She is also a content strategist, data enthusiast, and author. Her goal is to drive engagement around all the awesome things happening at Posit.\n  \n\n This work is licensed under a Creative Commons Attribution 4.0 International License.\nThe website is based on a template by Mine Çetinkaya-Rundel, used with appreciation and adapted for this workshop.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "01-introduction/index.html",
    "href": "01-introduction/index.html",
    "title": "01 - Introduction",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "01 - Introduction"
    ]
  },
  {
    "objectID": "01-introduction/index.html#slides",
    "href": "01-introduction/index.html#slides",
    "title": "01 - Introduction",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "01 - Introduction"
    ]
  }
]