{
  "hash": "e675fea8b30a90cdd19e9f47f455de65",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"04 - Statistical Testing\"\nbackgroundcolor: \"white\"\n---\n\n\n\n\n## Slides\n\n[View slides in full screen](slides-04-stattesting.html){target=\"_blank\"}\n\n\n\n\n```{=html}\n<iframe class=\"slide-deck\" src=\"slides-04-stattesting.html\" height=\"420\" width=\"747\" style=\"border: 1px solid #2e3846;\"></iframe>\n```\n\n\n\n\n## Your Turn\n\n\n### Set-up\n\n#### Load necessary packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(survey)\nlibrary(srvyr)\nlibrary(srvyrexploR)\n```\n:::\n\n\n\n#### Load in data and preview it\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(recs_2020)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 18,496\nColumns: 100\n$ DOEID            <dbl> 100001, 100002, 100003, 100004, 100005, 100006, 10000…\n$ ClimateRegion_BA <fct> Mixed-Dry, Mixed-Humid, Mixed-Dry, Mixed-Humid, Mixed…\n$ Urbanicity       <fct> Urban Area, Urban Area, Urban Area, Urban Area, Urban…\n$ Region           <fct> West, South, West, South, Northeast, South, South, So…\n$ REGIONC          <chr> \"WEST\", \"SOUTH\", \"WEST\", \"SOUTH\", \"NORTHEAST\", \"SOUTH…\n$ Division         <fct> Mountain South, West South Central, Mountain South, S…\n$ STATE_FIPS       <chr> \"35\", \"05\", \"35\", \"45\", \"34\", \"48\", \"40\", \"28\", \"11\",…\n$ state_postal     <fct> NM, AR, NM, SC, NJ, TX, OK, MS, DC, AZ, CA, TX, LA, M…\n$ state_name       <fct> New Mexico, Arkansas, New Mexico, South Carolina, New…\n$ HDD65            <dbl> 3844, 3766, 3819, 2614, 4219, 901, 3148, 1825, 4233, …\n$ CDD65            <dbl> 1679, 1458, 1696, 1718, 1363, 3558, 2128, 2374, 1159,…\n$ HDD30YR          <dbl> 4451, 4429, 4500, 3229, 4896, 1150, 3564, 2660, 4404,…\n$ CDD30YR          <dbl> 1027, 1305, 1010, 1653, 1059, 3588, 2043, 2164, 1407,…\n$ HousingUnitType  <fct> Single-family detached, Apartment: 5 or more units, A…\n$ YearMade         <ord> 1970-1979, 1980-1989, 1960-1969, 1980-1989, 1960-1969…\n$ TOTSQFT_EN       <dbl> 2100, 590, 900, 2100, 800, 4520, 2100, 900, 750, 760,…\n$ TOTHSQFT         <dbl> 2100, 590, 900, 2100, 800, 3010, 1200, 900, 750, 760,…\n$ TOTCSQFT         <dbl> 2100, 590, 900, 2100, 800, 3010, 1200, 0, 500, 760, 1…\n$ SpaceHeatingUsed <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE,…\n$ ACUsed           <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE…\n$ HeatingBehavior  <fct> Set one temp and leave it, Turn on or off as needed, …\n$ WinterTempDay    <dbl> 70, 70, 69, 68, 68, 76, 74, 70, 68, 70, 72, 74, 74, 7…\n$ WinterTempAway   <dbl> 70, 65, 68, 68, 68, 76, 65, 70, 60, 70, 70, 74, 74, 7…\n$ WinterTempNight  <dbl> 68, 65, 67, 68, 68, 68, 74, 68, 62, 68, 72, 74, 74, 6…\n$ ACBehavior       <fct> Set one temp and leave it, Turn on or off as needed, …\n$ SummerTempDay    <dbl> 71, 68, 70, 72, 72, 69, 68, NA, 72, 74, 77, 77, 74, 6…\n$ SummerTempAway   <dbl> 71, 68, 68, 72, 72, 74, 70, NA, 76, 74, 77, 77, 74, 6…\n$ SummerTempNight  <dbl> 71, 68, 68, 72, 72, 68, 70, NA, 68, 72, 77, 77, 74, 6…\n$ NWEIGHT          <dbl> 3284.104, 9007.387, 5669.002, 5294.239, 9935.465, 724…\n$ NWEIGHT1         <dbl> 3273.053, 9019.564, 5793.353, 5361.146, 10047.545, 73…\n$ NWEIGHT2         <dbl> 3349.139, 9081.268, 5913.554, 5361.706, 10261.682, 74…\n$ NWEIGHT3         <dbl> 3344.876, 9020.409, 5762.743, 5371.011, 10036.522, 73…\n$ NWEIGHT4         <dbl> 3437.284, 9213.074, 5870.261, 5392.846, 9960.953, 742…\n$ NWEIGHT5         <dbl> 3415.582, 9117.337, 5720.669, 5327.617, 10107.863, 73…\n$ NWEIGHT6         <dbl> 3354.813, 9178.697, 5662.939, 5353.957, 10298.428, 74…\n$ NWEIGHT7         <dbl> 3372.342, 9095.936, 5699.536, 5325.316, 10064.709, 73…\n$ NWEIGHT8         <dbl> 3364.035, 8920.480, 5704.027, 5375.732, 10096.509, 73…\n$ NWEIGHT9         <dbl> 3361.912, 9188.981, 5667.670, 5391.379, 10321.424, 73…\n$ NWEIGHT10        <dbl> 3301.569, 9060.009, 5793.325, 5500.628, 9943.547, 731…\n$ NWEIGHT11        <dbl> 3211.291, 9127.404, 5806.321, 5427.320, 10266.593, 73…\n$ NWEIGHT12        <dbl> 3500.495, 9264.304, 5650.394, 5384.442, 10127.061, 73…\n$ NWEIGHT13        <dbl> 3313.754, 9222.011, 5648.461, 5302.085, 10240.975, 72…\n$ NWEIGHT14        <dbl> 3359.110, 9199.014, 5828.712, 5362.226, 9871.649, 740…\n$ NWEIGHT15        <dbl> 3423.682, 9143.214, 5641.887, 5383.136, 10275.303, 74…\n$ NWEIGHT16        <dbl> 3383.601, 9042.382, 5717.847, 5380.916, 9921.199, 738…\n$ NWEIGHT17        <dbl> 3312.112, 9416.815, 5968.713, 5418.300, 10311.952, 73…\n$ NWEIGHT18        <dbl> 3324.383, 9162.681, 5828.370, 5356.271, 10004.213, 74…\n$ NWEIGHT19        <dbl> 3366.644, 9191.950, 5814.049, 5343.187, 10437.297, 75…\n$ NWEIGHT20        <dbl> 3326.643, 9091.550, 5697.447, 5360.409, 10100.730, 73…\n$ NWEIGHT21        <dbl> 3339.910, 0.000, 5686.769, 5336.323, 9981.635, 7427.5…\n$ NWEIGHT22        <dbl> 3292.197, 9097.877, 5738.946, 5389.830, 10000.278, 73…\n$ NWEIGHT23        <dbl> 3277.697, 9319.896, 5944.649, 5397.093, 10179.723, 71…\n$ NWEIGHT24        <dbl> 3340.406, 9080.729, 5819.996, 5448.089, 9825.700, 746…\n$ NWEIGHT25        <dbl> 3386.445, 9406.487, 5823.075, 5382.111, 10149.386, 72…\n$ NWEIGHT26        <dbl> 3300.574, 9255.867, 5650.188, 5386.710, 0.000, 7309.1…\n$ NWEIGHT27        <dbl> 3311.546, 9318.078, 5862.116, 5351.082, 10140.604, 72…\n$ NWEIGHT28        <dbl> 3347.637, 9154.189, 5706.909, 5371.439, 9948.403, 750…\n$ NWEIGHT29        <dbl> 3355.638, 9371.695, 5618.615, 5361.572, 10064.708, 73…\n$ NWEIGHT30        <dbl> 3322.423, 9137.197, 5795.544, 5381.218, 10082.927, 73…\n$ NWEIGHT31        <dbl> 3255.840, 9233.363, 5994.544, 5319.728, 10132.977, 73…\n$ NWEIGHT32        <dbl> 3317.937, 9114.608, 0.000, 5338.558, 9978.370, 7302.5…\n$ NWEIGHT33        <dbl> 3401.811, 9176.872, 5637.872, 0.000, 10213.075, 7326.…\n$ NWEIGHT34        <dbl> 3363.592, 9191.207, 5619.040, 5379.523, 9964.337, 724…\n$ NWEIGHT35        <dbl> 3303.528, 9100.344, 5652.289, 5363.277, 10070.847, 0.…\n$ NWEIGHT36        <dbl> 3333.027, 9071.530, 5834.171, 5476.866, 9987.947, 735…\n$ NWEIGHT37        <dbl> 3389.869, 9263.141, 5712.198, 5386.333, 10120.314, 73…\n$ NWEIGHT38        <dbl> 3381.503, 9077.901, 5765.422, 5326.402, 10023.636, 73…\n$ NWEIGHT39        <dbl> 3328.893, 9011.009, 5887.338, 5420.540, 10023.919, 73…\n$ NWEIGHT40        <dbl> 3292.829, 9166.222, 5649.809, 5370.189, 10184.527, 73…\n$ NWEIGHT41        <dbl> 3295.089, 9091.334, 5957.748, 5339.323, 10069.084, 73…\n$ NWEIGHT42        <dbl> 3413.593, 9193.664, 5592.619, 5328.788, 9958.721, 743…\n$ NWEIGHT43        <dbl> 3263.710, 9215.337, 6035.472, 5409.435, 10352.485, 73…\n$ NWEIGHT44        <dbl> 3342.446, 9048.092, 5732.384, 5416.488, 10091.807, 74…\n$ NWEIGHT45        <dbl> 3275.274, 9258.580, 5876.696, 5453.165, 10227.529, 74…\n$ NWEIGHT46        <dbl> 3364.248, 9170.518, 5653.511, 5449.444, 10069.384, 73…\n$ NWEIGHT47        <dbl> 3336.066, 9260.064, 5763.458, 5375.551, 9995.686, 732…\n$ NWEIGHT48        <dbl> 3329.151, 9105.220, 5928.968, 5407.834, 10197.608, 73…\n$ NWEIGHT49        <dbl> 3348.061, 9116.891, 5772.333, 5399.779, 10093.620, 74…\n$ NWEIGHT50        <dbl> 3357.231, 9261.127, 5785.452, 5359.408, 10196.251, 73…\n$ NWEIGHT51        <dbl> 3335.188, 8955.288, 5635.561, 5447.619, 10017.094, 73…\n$ NWEIGHT52        <dbl> 3240.132, 9000.296, 5944.330, 5344.453, 9954.142, 749…\n$ NWEIGHT53        <dbl> 3429.728, 9290.375, 5683.500, 5437.803, 10050.961, 74…\n$ NWEIGHT54        <dbl> 3294.084, 9199.326, 5735.631, 5377.898, 10018.844, 72…\n$ NWEIGHT55        <dbl> 3397.713, 8958.782, 5674.564, 5357.470, 10309.728, 75…\n$ NWEIGHT56        <dbl> 3292.610, 9232.597, 5660.854, 5421.025, 10142.763, 73…\n$ NWEIGHT57        <dbl> 0.000, 9140.427, 5917.193, 5365.230, 10176.828, 7383.…\n$ NWEIGHT58        <dbl> 3369.768, 9306.997, 5571.015, 5402.057, 10043.143, 75…\n$ NWEIGHT59        <dbl> 3358.163, 9061.782, 5887.092, 5402.772, 10247.911, 73…\n$ NWEIGHT60        <dbl> 3404.031, 8957.915, 5837.846, 5350.860, 10110.301, 75…\n$ BTUEL            <dbl> 42723.28, 17889.29, 8146.63, 31646.53, 20027.42, 4896…\n$ DOLLAREL         <dbl> 1955.06, 713.27, 334.51, 1424.86, 1087.00, 1895.66, 1…\n$ BTUNG            <dbl> 101924.43, 10145.32, 22603.08, 55118.66, 39099.51, 36…\n$ DOLLARNG         <dbl> 701.8300, 261.7348, 188.1400, 636.9100, 376.0400, 439…\n$ BTULP            <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ DOLLARLP         <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ BTUFO            <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ DOLLARFO         <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ BTUWOOD          <dbl> 0, 0, 0, 0, 0, 3000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ TOTALBTU         <dbl> 144647.71, 28034.61, 30749.71, 86765.19, 59126.93, 85…\n$ TOTALDOL         <dbl> 2656.8900, 975.0048, 522.6500, 2061.7700, 1463.0400, …\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(anes_2020)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 7,453\nColumns: 65\n$ V200001                 <dbl> 200015, 200022, 200039, 200046, 200053, 200060…\n$ CaseID                  <dbl> 200015, 200022, 200039, 200046, 200053, 200060…\n$ V200002                 <hvn_lbll> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,…\n$ InterviewMode           <fct> Web, Web, Web, Web, Web, Web, Web, Web, Web, W…\n$ V200010b                <dbl> 1.0057375, 1.1634731, 0.7686811, 0.5210195, 0.…\n$ Weight                  <dbl> 1.0057375, 1.1634731, 0.7686811, 0.5210195, 0.…\n$ V200010c                <dbl> 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2…\n$ VarUnit                 <fct> 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2…\n$ V200010d                <dbl> 9, 26, 41, 29, 23, 37, 7, 37, 32, 41, 22, 7, 3…\n$ Stratum                 <fct> 9, 26, 41, 29, 23, 37, 7, 37, 32, 41, 22, 7, 3…\n$ V201006                 <hvn_lbll> 2, 3, 2, 3, 2, 1, 2, 3, 2, 2, 2, 2, 2, 1,…\n$ CampaignInterest        <fct> Somewhat interested, Not much interested, Some…\n$ V201023                 <hvn_lbll> -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1…\n$ EarlyVote2020           <fct> NA, NA, NA, NA, NA, NA, NA, NA, Yes, NA, NA, N…\n$ V201024                 <hvn_lbll> -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1…\n$ V201025x                <hvn_lbll> 3, 3, 3, 3, 3, 3, 3, 2, 4, 3, 3, 3, 2, 4,…\n$ V201028                 <hvn_lbll> -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1…\n$ V201029                 <hvn_lbll> -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1…\n$ V201101                 <hvn_lbll> -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 2, …\n$ V201102                 <hvn_lbll> 1, 1, 1, 1, 1, 2, 1, 2, -1, -1, -1, 1, 2,…\n$ VotedPres2016           <fct> Yes, Yes, Yes, Yes, Yes, No, Yes, No, Yes, Yes…\n$ V201103                 <hvn_lbll> 2, 5, 1, 1, 2, -1, 5, -1, 1, 1, -1, 1, -1…\n$ VotedPres2016_selection <fct> Trump, Other, Clinton, Clinton, Trump, NA, Oth…\n$ V201228                 <hvn_lbll> 2, 5, 3, 2, 3, 3, 2, 2, 3, 1, 1, 1, 2, 1,…\n$ V201229                 <hvn_lbll> 1, -1, -1, 2, -1, -1, 2, 2, -1, 2, 1, 2, …\n$ V201230                 <hvn_lbll> -1, 2, 3, -1, 2, 3, -1, -1, 2, -1, -1, -1…\n$ V201231x                <hvn_lbll> 7, 4, 3, 6, 4, 3, 6, 6, 4, 2, 1, 2, 7, 2,…\n$ PartyID                 <fct> Strong republican, Independent, Independent-de…\n$ V201233                 <hvn_lbll> 5, 5, 4, 3, 5, 4, 4, 1, 3, 3, 2, 3, 4, 5,…\n$ TrustGovernment         <fct> Never, Never, Some of the time, About half the…\n$ V201237                 <hvn_lbll> 3, 4, 4, 2, 4, 2, 4, 1, 3, 2, 4, 3, 4, 3,…\n$ TrustPeople             <fct> About half the time, Some of the time, Some of…\n$ V201507x                <hvn_lbll> 46, 37, 40, 41, 72, 71, 37, 45, 70, 43, 3…\n$ Age                     <dbl> 46, 37, 40, 41, 72, 71, 37, 45, 70, 43, 37, 55…\n$ AgeGroup                <fct> 40-49, 30-39, 40-49, 40-49, 70 or older, 70 or…\n$ V201510                 <hvn_lbll> 6, 3, 2, 4, 8, 3, 4, 2, 2, 4, 2, 2, 2, 7,…\n$ Education               <fct> Bachelor's, Post HS, High school, Post HS, Gra…\n$ V201546                 <hvn_lbll> 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2,…\n$ V201547a                <hvn_lbll> -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201547b                <hvn_lbll> -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201547c                <hvn_lbll> -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201547d                <hvn_lbll> -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201547e                <hvn_lbll> -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201547z                <hvn_lbll> -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201549x                <hvn_lbll> 3, 4, 1, 4, 5, 1, 1, 1, 1, 3, 3, 1, 1, 4,…\n$ RaceEth                 <fct> \"Hispanic\", \"Asian, NH/PI\", \"White\", \"Asian, N…\n$ V201600                 <hvn_lbll> 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1,…\n$ Gender                  <fct> Male, Female, Female, Male, Male, Female, Fema…\n$ V201607                 <hvn_lbll> -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201610                 <hvn_lbll> -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201611                 <hvn_lbll> -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201613                 <hvn_lbll> -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201615                 <hvn_lbll> -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201616                 <hvn_lbll> -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -…\n$ V201617x                <hvn_lbll> 21, 13, 17, 7, 22, 3, 4, 3, 10, 11, 9, 18…\n$ Income                  <fct> \"$175,000-249,999\", \"$70,000-74,999\", \"$100,00…\n$ Income7                 <fct> $125k or more, $60k to < 80k, $100k to < 125k,…\n$ V202051                 <hvn_lbll> -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1…\n$ V202066                 <hvn_lbll> 1, 4, 4, 4, 4, 4, 4, 1, -1, 4, 4, 4, 4, -…\n$ V202072                 <hvn_lbll> -1, 1, 1, 1, 1, 1, 1, -1, -1, 1, 1, 1, 1,…\n$ VotedPres2020           <fct> NA, Yes, Yes, Yes, Yes, Yes, Yes, NA, Yes, Yes…\n$ V202073                 <hvn_lbll> -1, 3, 1, 1, 2, 1, 2, -1, -1, 1, 1, 1, 2,…\n$ V202109x                <hvn_lbll> 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,…\n$ V202110x                <hvn_lbll> -1, 3, 1, 1, 2, 1, 2, -1, 1, 1, 1, 1, 2, …\n$ VotedPres2020_selection <fct> NA, Other, Biden, Biden, Trump, Biden, Trump, …\n```\n\n\n:::\n:::\n\n\n\nFind codebooks here:\n\n  - [RECS 2020](https://tidy-survey-r.github.io/tidy-survey-book/recs-cb.html)\n  - [ANES 2020](https://tidy-survey-r.github.io/tidy-survey-book/anes-cb.html)\n\n#### Create design objects for usage\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanes_des <- anes_2020 %>%\n  mutate(Weight = V200010b / sum(V200010b) * 231034125) %>%\n  as_survey_design(\n    weights = Weight,\n    strata = V200010d,\n    ids = V200010c,\n    nest = TRUE\n  )\n\nrecs_des <- recs_2020 %>%\n  as_survey_rep(\n    weights = NWEIGHT,\n    repweights = NWEIGHT1:NWEIGHT60,\n    type = \"JK1\",\n    scale = 59 / 60,\n    mse = TRUE\n  )\n```\n:::\n\n\n\n### Exercises - Part 1\n\n1. For households that use thermostats, they are asked what temperature they set their home during the daytime in the winter (`WinterTempDay`) and in the summer (`SummerTempDay`). Test whether daytime winter and daytime summer temperatures of homes are set the same.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Hint - you'll need the recs_des object\n```\n:::\n\n\n\n2. In 2015, the average household spent $1,856 on energy expenditure^[<https://www.eia.gov/consumption/residential/data/2015/c&e/pdf/ce1.1.pdf>]. Accounting for inflation, this would be $2,036 in 2020. Test whether energy costs (`TOTALDOL`) have increased in 2020 from 2015, accounting for inflation.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Hint - you'll need the recs_des object\n```\n:::\n\n\n\n3. **Advanced bonus exercise** Look through the RECS dataset and develop your own hypothesis about a mean or difference of means and test it!\n\n### Exercises - Part 2\n\n4. Is there a relationship between party identification (`PartyID`) and whether people voted early (`EarlyVote2020`)?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Hint - you'll need the anes_des object\n```\n:::\n\n\n\n5. Is there a relationship between party identification (`PartyID`) and trust in the government (`TrustGovernment`)? Use Wald as the `statistic` option.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Hint - you'll need the anes_des object\n```\n:::\n\n\n\n6. Is there a difference in the distribution of gender (`Gender`) across early voting status (`EarlyVote2020`)?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Hint - you'll need the anes_des object\n```\n:::\n\n\n\n7. **Advanced bonus exercise** Look through the ANES dataset and develop your own hypothesis and test it!\n\n\n### Exercises - Part 3\n\n8. Test whether average electric bill (`DOLLAREL`) varies by region (`Region`).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Hint - you'll need the recs_des object\n```\n:::\n\n\n\n\n\n## Solutions\n\n<details>\n  <summary>See the solutions</summary>\n\n\n\n\n\n\n\n\n\n### Exercises - Part 1\n\n1. For households that use thermostats, they are asked what temperature they set their home during the daytime in the winter (`WinterTempDay`) and in the summer (`SummerTempDay`). Test whether daytime winter and daytime summer temperatures of homes are set the same.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the solution\"}\nrecs_des %>%\n  filter(!is.na(SummerTempDay), !is.na(WinterTempDay)) %>%\n  svyttest(WinterTempDay - SummerTempDay ~ 0, design = .)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tDesign-based one-sample t-test\n\ndata:  WinterTempDay - SummerTempDay ~ 0\nt = -43.106, df = 58, p-value < 2.2e-16\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -2.031155 -1.850883\nsample estimates:\n     mean \n-1.941019 \n```\n\n\n:::\n:::\n\n\n\n2. In 2015, the average household spent $1,856 on energy expenditure^[<https://www.eia.gov/consumption/residential/data/2015/c&e/pdf/ce1.1.pdf>]. Accounting for inflation, this would be $2,036 in 2020. Test whether energy costs (`TOTALDOL`) have increased in 2020 from 2015, accounting for inflation.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the solution\"}\nrecs_des %>%\n  svyttest(I(TOTALDOL - 2036) ~ 0, design = .)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tDesign-based one-sample t-test\n\ndata:  I(TOTALDOL - 2036) ~ 0\nt = -23.079, df = 58, p-value < 2.2e-16\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -164.7926 -138.4885\nsample estimates:\n     mean \n-151.6406 \n```\n\n\n:::\n:::\n\n\n\n### Exercises - Part 2\n\n4. Is there a relationship between party identification (`PartyID`) and whether people voted early (`EarlyVote2020`)?\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the solution\"}\nanes_des %>%\n  filter(!is.na(PartyID), !is.na(EarlyVote2020)) %>%\n  group_by(PartyID, EarlyVote2020) %>%\n  summarize(\n    p = survey_mean()\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 14 × 4\n# Groups:   PartyID [7]\n   PartyID                    EarlyVote2020     p   p_se\n   <fct>                      <fct>         <dbl>  <dbl>\n 1 Strong democrat            Yes           0.777 0.0519\n 2 Strong democrat            No            0.223 0.0519\n 3 Not very strong democrat   Yes           0.672 0.134 \n 4 Not very strong democrat   No            0.328 0.134 \n 5 Independent-democrat       Yes           0.665 0.0608\n 6 Independent-democrat       No            0.335 0.0608\n 7 Independent                Yes           0.695 0.0760\n 8 Independent                No            0.305 0.0760\n 9 Independent-republican     Yes           0.776 0.0936\n10 Independent-republican     No            0.224 0.0936\n11 Not very strong republican Yes           0.641 0.112 \n12 Not very strong republican No            0.359 0.112 \n13 Strong republican          Yes           0.703 0.0678\n14 Strong republican          No            0.297 0.0678\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the solution\"}\nanes_des %>%\n  filter(!is.na(PartyID), !is.na(EarlyVote2020)) %>%\n  svychisq(~ EarlyVote2020 + PartyID, design = .)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's X^2: Rao & Scott adjustment\n\ndata:  NextMethod()\nF = 0.46943, ndf = 4.9476, ddf = 232.5385, p-value = 0.797\n```\n\n\n:::\n:::\n\n\n\n5. Is there a relationship between party identification (`PartyID`) and trust in the government (`TrustGovernment`)? Use Wald as the `statistic` option.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the solution\"}\nanes_des %>%\n  filter(!is.na(PartyID), !is.na(TrustGovernment)) %>%\n  group_by(PartyID, TrustGovernment) %>%\n  summarize(\n    p = survey_mean()\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 35 × 4\n# Groups:   PartyID [7]\n   PartyID                  TrustGovernment          p    p_se\n   <fct>                    <fct>                <dbl>   <dbl>\n 1 Strong democrat          Always              0.0144 0.00452\n 2 Strong democrat          Most of the time    0.124  0.00977\n 3 Strong democrat          About half the time 0.353  0.0171 \n 4 Strong democrat          Some of the time    0.420  0.0175 \n 5 Strong democrat          Never               0.0888 0.0126 \n 6 Not very strong democrat Always              0.0207 0.00874\n 7 Not very strong democrat Most of the time    0.101  0.0154 \n 8 Not very strong democrat About half the time 0.296  0.0248 \n 9 Not very strong democrat Some of the time    0.466  0.0228 \n10 Not very strong democrat Never               0.116  0.0182 \n# ℹ 25 more rows\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the solution\"}\nanes_des %>%\n  filter(!is.na(PartyID), !is.na(TrustGovernment)) %>%\n  svychisq(~ TrustGovernment + PartyID, design = ., statistic = \"Wald\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tDesign-based Wald test of association\n\ndata:  NextMethod()\nF = 15.134, ndf = 24, ddf = 51, p-value = 1.142e-15\n```\n\n\n:::\n:::\n\n\n\n6. Is there a difference in the distribution of gender (`Gender`) across early voting status (`EarlyVote2020`)?\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the solution\"}\n# Hint - you'll need the anes_des object\n\nanes_des %>%\n  filter(!is.na(Gender), !is.na(EarlyVote2020)) %>%\n  group_by(Gender, EarlyVote2020) %>%\n  summarize(\n    p = survey_mean()\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 4\n# Groups:   Gender [2]\n  Gender EarlyVote2020     p   p_se\n  <fct>  <fct>         <dbl>  <dbl>\n1 Male   Yes           0.781 0.0345\n2 Male   No            0.219 0.0345\n3 Female Yes           0.679 0.0331\n4 Female No            0.321 0.0331\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the solution\"}\nanes_des %>%\n  filter(!is.na(Gender), !is.na(EarlyVote2020)) %>%\n  svychisq(~ Gender + EarlyVote2020, design = ., statistic = \"Wald\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tDesign-based Wald test of association\n\ndata:  NextMethod()\nF = 4.6322, ndf = 1, ddf = 47, p-value = 0.03655\n```\n\n\n:::\n:::\n\n\n\n### Exercises - Part 3\n\n8. Test whether average electric bill (`DOLLAREL`) varies by region (`Region`).\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the solution\"}\n#|\nrecs_des %>%\n  group_by(Region) %>%\n  cascade(\n    ElecBill = survey_mean(DOLLAREL), .fill = \"US\"\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  Region    ElecBill ElecBill_se\n  <fct>        <dbl>       <dbl>\n1 Northeast    1343.       14.6 \n2 Midwest      1293.       11.7 \n3 South        1548.       10.3 \n4 West         1211.       12.0 \n5 US           1380.        5.38\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the solution\"}\nrecs_des %>%\n  svyglm(DOLLAREL ~ Region, design = .)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall: Called via srvyr\nUnstratified cluster jacknife (JK1) with 60 replicates and MSE variances.\nSampling variables:\n  - repweights: `NWEIGHT1 + NWEIGHT2 + NWEIGHT3 + NWEIGHT4 + NWEIGHT5 +\n    NWEIGHT6 + NWEIGHT7 + NWEIGHT8 + NWEIGHT9 + NWEIGHT10 + NWEIGHT11 +\n    NWEIGHT12 + NWEIGHT13 + NWEIGHT14 + NWEIGHT15 + NWEIGHT16 + NWEIGHT17 +\n    NWEIGHT18 + NWEIGHT19 + NWEIGHT20 + NWEIGHT21 + NWEIGHT22 + NWEIGHT23 +\n    NWEIGHT24 + NWEIGHT25 + NWEIGHT26 + NWEIGHT27 + NWEIGHT28 + NWEIGHT29 +\n    NWEIGHT30 + NWEIGHT31 + NWEIGHT32 + NWEIGHT33 + NWEIGHT34 + NWEIGHT35 +\n    NWEIGHT36 + NWEIGHT37 + NWEIGHT38 + NWEIGHT39 + NWEIGHT40 + NWEIGHT41 +\n    NWEIGHT42 + NWEIGHT43 + NWEIGHT44 + NWEIGHT45 + NWEIGHT46 + NWEIGHT47 +\n    NWEIGHT48 + NWEIGHT49 + NWEIGHT50 + NWEIGHT51 + NWEIGHT52 + NWEIGHT53 +\n    NWEIGHT54 + NWEIGHT55 + NWEIGHT56 + NWEIGHT57 + NWEIGHT58 + NWEIGHT59 +\n    NWEIGHT60` \n  - weights: NWEIGHT \n\nCall:  svyglm(formula = DOLLAREL ~ Region, design = .)\n\nCoefficients:\n  (Intercept)  RegionMidwest    RegionSouth     RegionWest  \n      1342.65         -49.41         205.01        -131.63  \n\nDegrees of Freedom: 18495 Total (i.e. Null);  56 Residual\nNull Deviance:\t    1.304e+10 \nResidual Deviance: 1.269e+10 \tAIC: 304800\n```\n\n\n:::\n:::\n\n\n\n\n</details>\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}