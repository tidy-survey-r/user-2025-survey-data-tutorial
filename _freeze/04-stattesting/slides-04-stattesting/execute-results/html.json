{
  "hash": "88c1d33603d593d78ae336533606f678",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Statistical Testing\"\nformat: revealjs\nslide-number: true\ntitle-slide-attributes:\n      data-background: \"#087e8b\"\n---\n\n::: {.cell}\n\n:::\n\n\n\n# t-tests {background-color='{{< brand color secondary >}}'}\n\n## t-tests\n\n- Determine if one proportion or mean is statistically different from another\n\n::: {.incremental}\n- Different types:\n  - One-Sample: Comparing our data to a set value\n  - Two-Sample: Comparing two sets of data\n    - Unpaired: Comparing two values for two different groups\n    - Paired: Comparing two values for the same unit\n\n:::\n\n::: {.notes}\n- Unpaired Examples: \n  - A/B testing\n  - compare test scores for two different classrooms taught by two different instructors\n- Paired Examples: \n  - compare test scores for each student at the beginning and end of class\n  - water samples from a river before and after a treatment or environmental change\n\n:::\n\n## t-test syntax\n\nUse the `svyttest()` function to compare two proportions or means.\n\nSyntax:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsvyttest(\n  formula,\n  design,\n  ...\n)\n```\n:::\n\n\n\n::: {.notes}\n- Similar to `t.test()` function in base R with the formula and the data arguments\n:::\n\n## t-test syntax\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrecs_des %>%\n  svyttest(SummerTempNight - 68 ~ 0,\n    na.rm = TRUE\n  )\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in formula[[3]] == 1 || formula[[3]] == 0: 'length = 60' in coercion to 'logical(1)'\n```\n\n\n:::\n:::\n\n\n\n## t-test syntax\n\nUse the `svyttest()` function to compare two proportions or means.\n\nSyntax:\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nsvyttest(\n  formula,\n  design,\n  ...\n)\n```\n:::\n\n\n\n::: {.notes}\n- as `design` argument is the second argument, dot notation is needed\n:::\n\n# Dot notation {background-color='{{< brand color secondary >}}'}\n\n## Dot notation\n\nLet's walk through an example using the `towny` data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntowny\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 414 × 25\n   name   website status csd_type census_div latitude longitude land_area_km2\n   <chr>  <chr>   <chr>  <chr>    <chr>         <dbl>     <dbl>         <dbl>\n 1 Addin… https:… lower… township Lennox an…     45       -77.2        1294. \n 2 Adela… https:… lower… township Middlesex      43.0     -81.7         331. \n 3 Adjal… https:… lower… township Simcoe         44.1     -79.9         372. \n 4 Admas… https:… lower… township Renfrew        45.5     -76.9         520. \n 5 Ajax   https:… lower… town     Durham         43.9     -79.0          66.6\n 6 Alber… https:… singl… township Rainy Riv…     48.6     -93.5         117. \n 7 Alfre… https:… lower… township Prescott …     45.6     -74.9         392. \n 8 Algon… https:… lower… township Haliburton     45.4     -78.8        1000. \n 9 Alnwi… https:… lower… township Northumbe…     44.1     -78.0         398. \n10 Amara… https:… lower… township Dufferin       44.0     -80.2         265. \n# ℹ 404 more rows\n# ℹ 17 more variables: population_1996 <int>, population_2001 <int>,\n#   population_2006 <int>, population_2011 <int>, population_2016 <int>,\n#   population_2021 <int>, density_1996 <dbl>, density_2001 <dbl>,\n#   density_2006 <dbl>, density_2011 <dbl>, density_2016 <dbl>,\n#   density_2021 <dbl>, pop_change_1996_2001_pct <dbl>,\n#   pop_change_2001_2006_pct <dbl>, pop_change_2006_2011_pct <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n## Dot notation \n\nUsing the `towny` data, let's filter to only cities.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(towny, csd_type == \"city\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 52 × 25\n   name   website status csd_type census_div latitude longitude land_area_km2\n   <chr>  <chr>   <chr>  <chr>    <chr>         <dbl>     <dbl>         <dbl>\n 1 Barrie https:… singl… city     Simcoe         44.4     -79.7          99.0\n 2 Belle… https:… singl… city     Hastings       44.2     -77.4         247. \n 3 Bramp… https:… lower… city     Peel           43.7     -79.8         266. \n 4 Brant  https:… singl… city     Brant          43.1     -80.4         818. \n 5 Brant… https:… singl… city     Brant          43.1     -80.3          98.6\n 6 Brock… https:… singl… city     Leeds and…     44.6     -75.7          20.9\n 7 Burli… https:… lower… city     Halton         43.4     -79.8         186. \n 8 Cambr… https:… lower… city     Waterloo       43.4     -80.3         113. \n 9 Clare… https:… lower… city     Prescott …     45.5     -75.2         297. \n10 Cornw… https:… singl… city     Stormont,…     45.0     -74.7          61.5\n# ℹ 42 more rows\n# ℹ 17 more variables: population_1996 <int>, population_2001 <int>,\n#   population_2006 <int>, population_2011 <int>, population_2016 <int>,\n#   population_2021 <int>, density_1996 <dbl>, density_2001 <dbl>,\n#   density_2006 <dbl>, density_2011 <dbl>, density_2016 <dbl>,\n#   density_2021 <dbl>, pop_change_1996_2001_pct <dbl>,\n#   pop_change_2001_2006_pct <dbl>, pop_change_2006_2011_pct <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n## Dot notation\n\nUsing the `towny` data, let's filter to only cities.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nfilter(towny, csd_type == \"city\")\ntowny %>% filter(csd_type == \"city\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 52 × 25\n   name   website status csd_type census_div latitude longitude land_area_km2\n   <chr>  <chr>   <chr>  <chr>    <chr>         <dbl>     <dbl>         <dbl>\n 1 Barrie https:… singl… city     Simcoe         44.4     -79.7          99.0\n 2 Belle… https:… singl… city     Hastings       44.2     -77.4         247. \n 3 Bramp… https:… lower… city     Peel           43.7     -79.8         266. \n 4 Brant  https:… singl… city     Brant          43.1     -80.4         818. \n 5 Brant… https:… singl… city     Brant          43.1     -80.3          98.6\n 6 Brock… https:… singl… city     Leeds and…     44.6     -75.7          20.9\n 7 Burli… https:… lower… city     Halton         43.4     -79.8         186. \n 8 Cambr… https:… lower… city     Waterloo       43.4     -80.3         113. \n 9 Clare… https:… lower… city     Prescott …     45.5     -75.2         297. \n10 Cornw… https:… singl… city     Stormont,…     45.0     -74.7          61.5\n# ℹ 42 more rows\n# ℹ 17 more variables: population_1996 <int>, population_2001 <int>,\n#   population_2006 <int>, population_2011 <int>, population_2016 <int>,\n#   population_2021 <int>, density_1996 <dbl>, density_2001 <dbl>,\n#   density_2006 <dbl>, density_2011 <dbl>, density_2016 <dbl>,\n#   density_2021 <dbl>, pop_change_1996_2001_pct <dbl>,\n#   pop_change_2001_2006_pct <dbl>, pop_change_2006_2011_pct <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n## Dot notation \n\nUsing the `towny` data, let's filter to only cities.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nfilter(towny, csd_type == \"city\")\ntowny %>% filter(csd_type == \"city\")\ntowny %>% filter(., csd_type == \"city\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 52 × 25\n   name   website status csd_type census_div latitude longitude land_area_km2\n   <chr>  <chr>   <chr>  <chr>    <chr>         <dbl>     <dbl>         <dbl>\n 1 Barrie https:… singl… city     Simcoe         44.4     -79.7          99.0\n 2 Belle… https:… singl… city     Hastings       44.2     -77.4         247. \n 3 Bramp… https:… lower… city     Peel           43.7     -79.8         266. \n 4 Brant  https:… singl… city     Brant          43.1     -80.4         818. \n 5 Brant… https:… singl… city     Brant          43.1     -80.3          98.6\n 6 Brock… https:… singl… city     Leeds and…     44.6     -75.7          20.9\n 7 Burli… https:… lower… city     Halton         43.4     -79.8         186. \n 8 Cambr… https:… lower… city     Waterloo       43.4     -80.3         113. \n 9 Clare… https:… lower… city     Prescott …     45.5     -75.2         297. \n10 Cornw… https:… singl… city     Stormont,…     45.0     -74.7          61.5\n# ℹ 42 more rows\n# ℹ 17 more variables: population_1996 <int>, population_2001 <int>,\n#   population_2006 <int>, population_2011 <int>, population_2016 <int>,\n#   population_2021 <int>, density_1996 <dbl>, density_2001 <dbl>,\n#   density_2006 <dbl>, density_2011 <dbl>, density_2016 <dbl>,\n#   density_2021 <dbl>, pop_change_1996_2001_pct <dbl>,\n#   pop_change_2001_2006_pct <dbl>, pop_change_2006_2011_pct <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n## Dot notation \n\nUsing the `towny` data, let's filter to only cities.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nfilter(towny, csd_type == \"city\")\ntowny %>% filter(csd_type == \"city\")\ntowny %>% filter(., csd_type == \"city\")\ntowny %>% filter(.data = ., csd_type == \"city\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 52 × 25\n   name   website status csd_type census_div latitude longitude land_area_km2\n   <chr>  <chr>   <chr>  <chr>    <chr>         <dbl>     <dbl>         <dbl>\n 1 Barrie https:… singl… city     Simcoe         44.4     -79.7          99.0\n 2 Belle… https:… singl… city     Hastings       44.2     -77.4         247. \n 3 Bramp… https:… lower… city     Peel           43.7     -79.8         266. \n 4 Brant  https:… singl… city     Brant          43.1     -80.4         818. \n 5 Brant… https:… singl… city     Brant          43.1     -80.3          98.6\n 6 Brock… https:… singl… city     Leeds and…     44.6     -75.7          20.9\n 7 Burli… https:… lower… city     Halton         43.4     -79.8         186. \n 8 Cambr… https:… lower… city     Waterloo       43.4     -80.3         113. \n 9 Clare… https:… lower… city     Prescott …     45.5     -75.2         297. \n10 Cornw… https:… singl… city     Stormont,…     45.0     -74.7          61.5\n# ℹ 42 more rows\n# ℹ 17 more variables: population_1996 <int>, population_2001 <int>,\n#   population_2006 <int>, population_2011 <int>, population_2016 <int>,\n#   population_2021 <int>, density_1996 <dbl>, density_2001 <dbl>,\n#   density_2006 <dbl>, density_2011 <dbl>, density_2016 <dbl>,\n#   density_2021 <dbl>, pop_change_1996_2001_pct <dbl>,\n#   pop_change_2001_2006_pct <dbl>, pop_change_2006_2011_pct <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n# Example <br>one-sample t-test {background-color='{{< brand color blue >}}'}\n\n## Example: one-sample t-test\n\n::: {.incremental}\n- one sample t-tests compare data against a single value\n- Stephanie usually sets her home to 68&deg;F at night during the summer. Is this different from the average household in the U.S.?\n- Use `SummerTempNight`\n:::\n\n## Example: one-sample t-test\n\nTest if the average U.S. household sets its temperature at a value different from 68&deg;F using `svyttest()`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|3|4\"}\nrecs_des %>%\n  svyttest(\n    formula = SummerTempNight - 68 ~ 0,\n    design = .,\n    na.rm = TRUE\n  )\n```\n:::\n\n\n\n- Formula to test if the true mean of `SummerTempNight` variable minus 68&deg;F is equal to 0\n- Dot notation `.` that passes the `recs_des` object into the `design` argument\n\n## Results: one-sample t-test\n\nTest if the average U.S. household sets its temperature at a value different from 68&deg;F using `svyttest()`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrecs_des %>%\n  svyttest(\n    formula = SummerTempNight - 68 ~ 0,\n    design = .,\n    na.rm = TRUE\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tDesign-based one-sample t-test\n\ndata:  SummerTempNight - 68 ~ 0\nt = 84.788, df = 58, p-value < 2.2e-16\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n 3.287816 3.446810\nsample estimates:\n    mean \n3.367313 \n```\n\n\n:::\n:::\n\n\n\n::: {.notes}\n- Sample estimate mean is the difference between the U.S. average and Stephanie's house\n- Result: Stephanie keeps her house cold in the summer!\n:::\n\n# Example <br>unpaired two-sample t-test {background-color='{{< brand color blue >}}'}\n\n## Example: unpaired two-sample t-test \n\n::: {.incremental}\n- Two-sample t-test compares data from two populations\n- On average, is there a significant different electric bill for households with and without air-conditioning?\n- Using `DOLLAREL` for the electricity bill and `ACUsed` to determine if households have air-conditioning\n:::\n\n## Example: unpaired two-sample t-test\n\nTest if the electricity expenditure is significantly different for homes with and without air-conditioning.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|3|4\"}\nrecs_des %>%\n  svyttest(\n    formula = DOLLAREL ~ ACUsed,\n    design = .,\n    na.rm = TRUE\n  )\n```\n:::\n\n\n\n- Formula with electricity expenditure on the left and air-conditioning usage on the right\n- Dot notation `.` that passes the `recs_des` object into the `design` argument\n\n## Results: unpaired two-sample t-test\n\nTest if the electricity expenditure is significantly different for homes with and without air-conditioning:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrecs_des %>%\n  svyttest(\n    formula = DOLLAREL ~ ACUsed,\n    design = .,\n    na.rm = TRUE\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tDesign-based t-test\n\ndata:  DOLLAREL ~ ACUsed\nt = 21.29, df = 58, p-value < 2.2e-16\nalternative hypothesis: true difference in mean is not equal to 0\n95 percent confidence interval:\n 331.3343 400.1054\nsample estimates:\ndifference in mean \n          365.7199 \n```\n\n\n:::\n:::\n\n\n\n::: {.notes}\n- Household with AC have higher electrical bill\n:::\n\n# Example <br>paired two-sample t-test {background-color='{{< brand color blue >}}'}\n\n## Example: paired t-test\n\nDo U.S. households set their thermostat differently at night in the summer and winter?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrecs_des %>%\n  svyttest(\n    formula = SummerTempNight - WinterTempNight ~ 0,\n    design = .,\n    na.rm = TRUE\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tDesign-based one-sample t-test\n\ndata:  SummerTempNight - WinterTempNight ~ 0\nt = 50.833, df = 58, p-value < 2.2e-16\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n 2.739403 2.963995\nsample estimates:\n    mean \n2.851699 \n```\n\n\n:::\n:::\n\n\n\n# Your Turn {background-color='{{< brand color pink >}}'}\n\n* Open `04-testing-exercises.qmd`\n* Work through **Exercises - Part 1**\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_b37812e4\" data-warn-when=\"300\" data-update-every=\"1\" data-play-sound=\"true\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n\n# Chi-square tests {background-color='{{< brand color secondary >}}'}\n\n## Chi-square tests\n\n- Compare multiple proportions to see if they are statistically different from each other\n\n::: {.incremental}\n- Different types:\n  - Goodness-of-fit tests compare observed data to expected data\n  - Tests of independence compare two types of observed data to see if there is a relationship\n  - Tests of homogeneity compare two distributions to see if they match\n  \n:::\n\n## Chi-square syntax\n\nThere are two functions that we use to compare proportions:\n\n- `svygofchisq()`: For goodness-of-fit tests\n- `svychisq()`: For tests of independence and homogeneity\n\n## Syntax for goodness-of-fit tests\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|2|3\"}\nsvygofchisq(formula,\n  p,\n  design,\n  na.rm = TRUE,\n  ...\n)\n```\n:::\n\n\n\n## Syntax for tests of independence and homogeneity\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|3,4|2\"}\n#|\nsvychisq(formula,\n  design,\n  statistic = c(\n    \"F\", \"Chisq\", \"Wald\", \"adjWald\",\n    \"lincom\", \"saddlepoint\"\n  ),\n  na.rm = TRUE,\n  ...\n)\n```\n:::\n\n\n\n# Example <br>goodness-of-fit test {background-color='{{< brand color blue >}}'}\n\n## Example: goodness-of-fit test\n\n- Let's check to see if the education levels from the ANES match the levels from the ACS\n- Here is the education breakdown from the ACS in 2020\n  - 11% had less than a high school degree\n  - 27% had a high school degree\n  - 29% had some college or an associate’s degree\n  - 33% had a bachelor’s degree or higher\n\n## Example: goodness-of-fit test\n\n- Let's check to see if the education levels from the ANES match the levels from the ACS\n- Here is the education breakdown from our survey data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanes_des %>%\n  drop_na(Education) %>%\n  group_by(Education) %>%\n  summarize(p = survey_mean())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  Education         p    p_se\n  <fct>         <dbl>   <dbl>\n1 Less than HS 0.0805 0.00568\n2 High school  0.277  0.0102 \n3 Post HS      0.290  0.00713\n4 Bachelor's   0.226  0.00633\n5 Graduate     0.126  0.00499\n```\n\n\n:::\n:::\n\n\n::: {.notes}\n- Use `drop_na()` to first remove any missing data from the `Education` variable\n- Use `group_by()` and `summarize()` to get the proportions by `Education` level\n:::\n## Example: goodness-of-fit test\n\nLet's collapse Bachelor's and Graduate degrees into a single category for comparison.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanes_des_educ <- anes_des %>%\n  mutate(\n    Education2 =\n      fct_collapse(Education,\n        \"Bachelor or Higher\" = c(\"Bachelor's\", \"Graduate\")\n      )\n  )\n\nanes_des_educ %>%\n  drop_na(Education2) %>%\n  group_by(Education2) %>%\n  summarize(p = survey_mean())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 3\n  Education2              p    p_se\n  <fct>               <dbl>   <dbl>\n1 Less than HS       0.0805 0.00568\n2 High school        0.277  0.0102 \n3 Post HS            0.290  0.00713\n4 Bachelor or Higher 0.352  0.00732\n```\n\n\n:::\n:::\n\n\n\n\n## Results: goodness-of-fit test\n\nTest to see if the ANES education matches the population percentages \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanes_des_educ %>%\n  svygofchisq(\n    formula = ~Education2,\n    p = c(0.11, 0.27, 0.29, 0.33),\n    design = .,\n    na.rm = TRUE\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tDesign-based chi-squared test for given probabilities\n\ndata:  ~Education2\nX-squared = 2177472, scale = 1.1203e+05, df = 2.2629e+00, p-value =\n8.745e-05\n```\n\n\n:::\n:::\n\n\n\n## Results: goodness-of-fit test\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nanes_des_educ %>%\n  drop_na(Education2) %>%\n  group_by(Education2) %>%\n  summarize(Observed = survey_mean(vartype = \"ci\")) %>%\n  rename(Education = Education2) %>%\n  mutate(Expected = c(0.11, 0.27, 0.29, 0.33)) %>%\n  select(Education, Expected, everything()) %>%\n  pivot_longer(\n    cols = c(\"Expected\", \"Observed\"),\n    names_to = \"Names\",\n    values_to = \"Proportion\"\n  ) %>%\n  mutate(\n    Observed_low = if_else(Names == \"Observed\", Observed_low, NA_real_),\n    Observed_upp = if_else(Names == \"Observed\", Observed_upp, NA_real_),\n    Names = if_else(Names == \"Observed\",\n      \"ANES (observed)\", \"ACS (expected)\"\n    )\n  ) %>%\n  ggplot(aes(x = Education, y = Proportion, color = Names)) +\n  geom_point(alpha = 0.75, size = 2) +\n  geom_errorbar(aes(ymin = Observed_low, ymax = Observed_upp),\n    width = 0.25\n  ) +\n  theme_bw() +\n  scale_color_manual(name = \"Type\", values = c(\"#ff8484\", \"#0b3954\")) +\n  theme(legend.position = \"bottom\", legend.title = element_blank())\n```\n\n::: {.cell-output-display}\n![](slides-04-stattesting_files/figure-revealjs/chisq-gof-graph-1.png){width=960}\n:::\n:::\n\n\n\n# Example <br> test of independence {background-color='{{< brand color blue >}}'}\n\n## Example: test of independence\n\nANES asked respondents two questions about trust:\n\n  - Question text: “How often can you trust the federal government to do what is right?”\n  - Question text: “How often can you trust other people?”\n  \nRun a test of independence to see if the distributions of these two questions are similar. \n\n## Example: test of independence\n\nRun a test of independence to see if the distributions of these two questions are similar. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanes_des %>%\n  svychisq(\n    formula = ~ TrustGovernment + TrustPeople,\n    design = .,\n    statistic = \"Wald\",\n    na.rm = TRUE\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tDesign-based Wald test of association\n\ndata:  NextMethod()\nF = 20.876, ndf = 16, ddf = 51, p-value < 2.2e-16\n```\n\n\n:::\n:::\n\n\n\n# Your Turn {background-color='{{< brand color pink >}}'}\n\n* Open `04-testing-exercises.qmd`\n* Work through **Exercises - Part 2**\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_69f5f0d9\" data-warn-when=\"300\" data-update-every=\"1\" data-play-sound=\"true\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n# Analysis of Variance (ANOVA) {background-color='{{< brand color secondary >}}'}\n\n## ANOVA\n\nUse Analysis of Variance (ANOVA) to compare two or more means.\n\n## ANOVA syntax\n\nUse Analysis of Variance (ANOVA) to compare two or more means.\n\nSyntax:\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\nsvyglm(\n  formula = outcome ~ group,\n  design = .,\n  na.action = na.omit,\n  df.resid = NULL\n)\n```\n:::\n\n\n\n## Example: ANOVA\n\n- Does the temperature that U.S. households set their AC during summer nights vary by region?\n- Use `svyglm()` function and variables `SummerTempNight` and `Region`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrecs_des %>%\n  svyglm(\n    formula = SummerTempNight ~ Region,\n    design = .\n  ) %>%\n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 5\n  term          estimate std.error statistic   p.value\n  <chr>            <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept)      69.7      0.103    674.   3.69e-111\n2 RegionMidwest     1.34     0.138      9.68 1.46e- 13\n3 RegionSouth       2.05     0.128     16.0  1.36e- 22\n4 RegionWest        2.80     0.177     15.9  2.27e- 22\n```\n\n\n:::\n:::\n\n\n\n# Your Turn {background-color='{{< brand color pink >}}'}\n\n* Open `04-testing-exercises.qmd`\n* Work through **Exercises - Part 3**\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_1c29fa95\" data-warn-when=\"120\" data-update-every=\"1\" data-play-sound=\"true\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n",
    "supporting": [
      "slides-04-stattesting_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}